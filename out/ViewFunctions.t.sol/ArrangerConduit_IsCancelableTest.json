{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_isCancelable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60008054600160ff19918216811790925560048054909116909117905560c0604052600560809081526430b236b4b760d91b60a0526200003f90620001fd565b601b80546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600881526730b93930b733b2b960c11b60208201526200008990620001fd565b601c80546001600160a01b0319166001600160a01b0392909216919091179055604051620000b79062000330565b604051809103906000f080158015620000d4573d6000803e3d6000fd5b50601d80546001600160a01b0319166001600160a01b039290921691909117905560405162000103906200033e565b604051809103906000f08015801562000120573d6000803e3d6000fd5b50601e80546001600160a01b0319166001600160a01b03929092169190911790556021805460ff60a01b1916905562696c6b60e81b60225560405160129062000169906200034c565b6060808252600590820181905264185cdcd95d60da1b608083015260a060208301819052820152641054d4d15560da1b60c082015260ff909116604082015260e001604051809103906000f080158015620001c8573d6000803e3d6000fd5b50602380546001600160a01b0319166001600160a01b0392909216919091179055348015620001f657600080fd5b5062000414565b60006200020a8262000211565b5092915050565b6000808260405160200162000227919062000380565b60408051808303601f190181529082905280516020909101206001625e79b760e01b03198252600482018190529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990602401602060405180830381865afa15801562000293573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002b991906200039e565b6040516318caf8e360e31b8152909250737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890620002f79085908790600401620003d0565b600060405180830381600087803b1580156200031257600080fd5b505af115801562000327573d6000803e3d6000fd5b50505050915091565b6104558062003dd883390190565b610a77806200422d83390190565b6109a78062004ca483390190565b60005b83811015620003775781810151838201526020016200035d565b50506000910152565b60008251620003948184602087016200035a565b9190910192915050565b600060208284031215620003b157600080fd5b81516001600160a01b0381168114620003c957600080fd5b9392505050565b60018060a01b03831681526040602082015260008251806040840152620003ff8160608501602087016200035a565b601f01601f1916919091016060019392505050565b6139b480620004246000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806385226c811161007157806385226c811461010e578063916a17c614610123578063b5508aa91461012b578063ba414fa614610133578063e20c9f711461014b578063fa7626d41461015357600080fd5b80630a9254e4146100b95780631ed7831c146100c35780633e5e3c23146100e15780633f7286f4146100e9578063417c7f77146100f157806366d9a9a0146100f9575b600080fd5b6100c1610160565b005b6100cb61057f565b6040516100d891906113bf565b60405180910390f35b6100cb6105e1565b6100cb610641565b6100c16106a1565b610101610b39565b6040516100d8919061140c565b610116610c28565b6040516100d8919061150f565b610101610cf8565b610116610dde565b61013b610eae565b60405190151581526020016100d8565b6100cb610fd9565b60005461013b9060ff1681565b600060405161016e906113a5565b604051809103906000f08015801561018a573d6000803e3d6000fd5b509050600060405161019b906113b2565b604051809103906000f0801580156101b7573d6000803e3d6000fd5b50604051636bc26a1360e11b81526001600160a01b0380831660048301529192509083169063d784d42690602401600060405180830381600087803b1580156101ff57600080fd5b505af1158015610213573d6000803e3d6000fd5b5050602480546001600160a01b0319166001600160a01b03868116919091178255601d5460225460405163ebecb39d60e01b8152600481019190915265313ab33332b960d11b9381019390935230604484015216925063ebecb39d9150606401600060405180830381600087803b15801561028d57600080fd5b505af11580156102a1573d6000803e3d6000fd5b505060248054601d5460405163d4e8be8360e01b815267726567697374727960c01b60048201526001600160a01b039182169381019390935216925063d4e8be839150604401600060405180830381600087803b15801561030157600080fd5b505af1158015610315573d6000803e3d6000fd5b505060248054601e5460405163d4e8be8360e01b815264726f6c657360d81b60048201526001600160a01b039182169381019390935216925063d4e8be839150604401600060405180830381600087803b15801561037257600080fd5b505af1158015610386573d6000803e3d6000fd5b5050601e5460225460405163daa7010360e01b815260048101919091523060248201526001600160a01b03909116925063daa701039150604401600060405180830381600087803b1580156103da57600080fd5b505af11580156103ee573d6000803e3d6000fd5b5050601e546022546021546040516366d3e36560e01b81526004810192909252306024830152600160a01b900460ff166044820152600160648201526001600160a01b0390911692506366d3e3659150608401600060405180830381600087803b15801561045b57600080fd5b505af115801561046f573d6000803e3d6000fd5b5050602454601e54602254602154604051630e3b58c160e11b81526001600160a01b039485169650939092169350631c76b182926104c892600160a01b900460ff16908690633655218f60e21b90600190600401611571565b600060405180830381600087803b1580156104e257600080fd5b505af11580156104f6573d6000803e3d6000fd5b5050601e54602254602154604051630e3b58c160e11b81526001600160a01b039093169450631c76b182935061054892600160a01b90910460ff1690869063d2543ccb60e01b90600190600401611571565b600060405180830381600087803b15801561056257600080fd5b505af1158015610576573d6000803e3d6000fd5b50505050505050565b6060600d8054806020026020016040519081016040528092919081815260200182805480156105d757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105b9575b5050505050905090565b6060600f8054806020026020016040519081016040528092919081815260200182805480156105d7576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116105b9575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156105d7576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116105b9575050505050905090565b6023546040516340c10f1960e01b8152306004820152606460248201526001600160a01b03909116906340c10f19906044016020604051808303816000875af11580156106f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071691906115ac565b506023546024805460405163095ea7b360e01b81526001600160a01b0391821660048201526064928101929092529091169063095ea7b3906044016020604051808303816000875af1158015610770573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079491906115ac565b5060248054602254602354604051633655218f60e21b815260048101929092526001600160a01b0390811693820193909352606460448201819052929091169163d954863c9101600060405180830381600087803b1580156107f557600080fd5b505af1158015610809573d6000803e3d6000fd5b50506024805460225460235460405163d2543ccb60e01b81526004808201939093526001600160a01b0391821694810194909452606460448501819052608090850152608484019190915263696e666f60e01b60a484015216925063d2543ccb915060c4016020604051808303816000875af115801561088d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b191906115d5565b506024805460405163137ea10d60e21b8152600060048201819052926001600160a01b0390921691634dfa84349101600060405180830381865afa1580156108fd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261092591908101906116cc565b9050610947816000015160038111156109405761094061177f565b6001611039565b60248054604051634857501f60e01b8152600060048201526109be926001600160a01b0390921691634857501f9101602060405180830381865afa158015610993573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b791906115ac565b600161112c565b60245460405163dadd461160e01b81526001600160a01b039091169063dadd4611906109f290600090600290600401611795565b600060405180830381600087803b158015610a0c57600080fd5b505af1158015610a20573d6000803e3d6000fd5b505060248054604051634857501f60e01b815260006004820152610a9c94506001600160a01b039091169250634857501f91015b602060405180830381865afa158015610a71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9591906115ac565b600061112c565b60245460405163dadd461160e01b81526001600160a01b039091169063dadd461190610ad090600090600390600401611795565b600060405180830381600087803b158015610aea57600080fd5b505af1158015610afe573d6000803e3d6000fd5b505060248054604051634857501f60e01b815260006004820152610b3694506001600160a01b039091169250634857501f9101610a54565b50565b60606012805480602002602001604051908101604052809291908181526020016000905b82821015610c1f5760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610c0757602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610bc95790505b50505050508152505081526020019060010190610b5d565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b82821015610c1f578382906000526020600020018054610c6b906117c7565b80601f0160208091040260200160405190810160405280929190818152602001828054610c97906117c7565b8015610ce45780601f10610cb957610100808354040283529160200191610ce4565b820191906000526020600020905b815481529060010190602001808311610cc757829003601f168201915b505050505081526020019060010190610c4c565b60606013805480602002602001604051908101604052809291908181526020016000905b82821015610c1f5760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610dc657602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610d885790505b50505050508152505081526020019060010190610d1c565b60606010805480602002602001604051908101604052809291908181526020016000905b82821015610c1f578382906000526020600020018054610e21906117c7565b80601f0160208091040260200160405190810160405280929190818152602001828054610e4d906117c7565b8015610e9a5780601f10610e6f57610100808354040283529160200191610e9a565b820191906000526020600020905b815481529060010190602001808311610e7d57829003601f168201915b505050505081526020019060010190610e02565b60008054610100900460ff1615610ece5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610fd45760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610f5c917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611801565b60408051601f1981840301815290829052610f7691611832565b6000604051808303816000865af19150503d8060008114610fb3576040519150601f19603f3d011682016040523d82523d6000602084013e610fb8565b606091505b5091505080806020019051810190610fd091906115ac565b9150505b919050565b6060600c8054806020026020016040519081016040528092919081815260200182805480156105d7576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116105b9575050505050905090565b808214611128577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516110aa9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8826040516110e1919061184e565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8816040516111189190611886565b60405180910390a1611128611299565b5050565b80151582151514611128577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516111a19060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f6040820152616c5d60f01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583826111f2576040518060400160405280600581526020016466616c736560d81b815250611210565b604051806040016040528060048152602001637472756560e01b8152505b60405161121d91906118b0565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838161126e576040518060400160405280600581526020016466616c736560d81b81525061128c565b604051806040016040528060048152602001637472756560e01b8152505b60405161111891906118f4565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156113945760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526113339291602001611801565b60408051601f198184030181529082905261134d91611832565b6000604051808303816000865af19150503d806000811461138a576040519150601f19603f3d011682016040523d82523d6000602084013e61138f565b606091505b505050505b6000805461ff001916610100179055565b6103e58061191f83390190565b611c7b80611d0483390190565b6020808252825182820181905260009190848201906040850190845b818110156114005783516001600160a01b0316835292840192918401916001016113db565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156114b057898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b8083101561149b5783516001600160e01b0319168252928b019260019290920191908b0190611471565b50978a01979550505091870191600101611434565b50919998505050505050505050565b60005b838110156114da5781810151838201526020016114c2565b50506000910152565b600081518084526114fb8160208601602086016114bf565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561156457603f198886030184526115528583516114e3565b94509285019290850190600101611536565b5092979650505050505050565b94855260ff9390931660208501526001600160a01b039190911660408401526001600160e01b03191660608301521515608082015260a00190565b6000602082840312156115be57600080fd5b815180151581146115ce57600080fd5b9392505050565b6000602082840312156115e757600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611627576116276115ee565b60405290565b80516001600160a01b0381168114610fd457600080fd5b600082601f83011261165557600080fd5b815167ffffffffffffffff80821115611670576116706115ee565b604051601f8301601f19908116603f01168101908282118183101715611698576116986115ee565b816040528381528660208588010111156116b157600080fd5b6116c28460208301602089016114bf565b9695505050505050565b6000602082840312156116de57600080fd5b815167ffffffffffffffff808211156116f657600080fd5b9083019060c0828603121561170a57600080fd5b611712611604565b82516004811061172157600080fd5b815261172f6020840161162d565b602082015260408301516040820152606083015160608201526080830151608082015260a08301518281111561176457600080fd5b61177087828601611644565b60a08301525095945050505050565b634e487b7160e01b600052602160045260246000fd5b82815260408101600483106117ba57634e487b7160e01b600052602160045260246000fd5b8260208301529392505050565b600181811c908216806117db57607f821691505b6020821081036117fb57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b03198316815281516000906118248160048501602087016114bf565b919091016004019392505050565b600082516118448184602087016114bf565b9190910192915050565b60408152600061187860408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b60408152600061187860408301600a8152690808080808149a59da1d60b21b602082015260400190565b6040815260006118da60408301600a8152690808080808081319599d60b21b602082015260400190565b82810360208401526118ec81856114e3565b949350505050565b6040815260006118da60408301600a8152690808080808149a59da1d60b21b60208201526040019056fe608060405234801561001057600080fd5b5033600081815260016020819052604080832091909155517fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a609190a261038a8061005b6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80635c60da1b146100f357806365fae35e146101235780639c52a7f114610136578063bf353dbb14610149578063d784d42614610177575b600080546001600160a01b031690813b90036100cd5760405162461bcd60e51b815260206004820152602a60248201527f5570677261646561626c6550726f78792f6e6f2d636f64652d61742d696d706c60448201526932b6b2b73a30ba34b7b760b11b60648201526084015b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100ec573d6000f35b3d6000fd5b005b600054610106906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f16101313660046102ed565b61018a565b6100f16101443660046102ed565b610201565b6101696101573660046102ed565b60016020526000908152604090205481565b60405190815260200161011a565b6100f16101853660046102ed565b610275565b33600090815260016020819052604090912054146101ba5760405162461bcd60e51b81526004016100c49061031d565b6001600160a01b038116600081815260016020819052604080832091909155517fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a609190a250565b33600090815260016020819052604090912054146102315760405162461bcd60e51b81526004016100c49061031d565b6001600160a01b038116600081815260016020526040808220829055517f184450df2e323acec0ed3b5c7531b81f9b4cdef7914dfd4c0a4317416bb5251b9190a250565b33600090815260016020819052604090912054146102a55760405162461bcd60e51b81526004016100c49061031d565b600080546001600160a01b0319166001600160a01b038316908117825560405190917fddebe6de740fe0dd01cc33ffa314d11c6ac6acbbe50b80513c4c360ae7aa4f0491a250565b6000602082840312156102ff57600080fd5b81356001600160a01b038116811461031657600080fd5b9392505050565b6020808252601f908201527f5570677261646561626c6550726f78792f6e6f742d617574686f72697a65640060408201526060019056fea2646970667358221220188939a378a5a218c09927e6d3009a0b13e6718b1bf1562e2c1f9135b2cdbe5564736f6c63430008140033608060405234801561001057600080fd5b50611c5b806100206000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c8063a6fb97d1116100de578063d5c2db1411610097578063dcb37d8f11610071578063dcb37d8f146103f4578063e0245d331461041f578063e940325614610454578063f9cc6b6f1461047457600080fd5b8063d5c2db14146103c6578063d954863c146103ce578063dadd4611146103e157600080fd5b8063a6fb97d11461032b578063bf353dbb1461033e578063c4f729971461035e578063d2543ccb14610375578063d31d2fad14610388578063d4e8be83146103b357600080fd5b80634f1c2c311161014b57806374d47dc51161012557806374d47dc5146102c75780637b103999146102f25780638a11329d14610305578063933d94761461031857600080fd5b80634f1c2c311461025c578063633b626d1461028757806369f7caba146102a757600080fd5b806337cd2f7e14610193578063392f5f64146101a857806346ec3b7b146101d85780634857501f146101eb5780634a7653351461020e5780634dfa84341461023c575b600080fd5b6101a66101a1366004611713565b610487565b005b6005546101bb906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6003546101bb906001600160a01b031681565b6101fe6101f9366004611735565b610780565b60405190151581526020016101cf565b61022e61021c366004611763565b60086020526000908152604090205481565b6040519081526020016101cf565b61024f61024a366004611735565b6107c3565b6040516101cf91906117e3565b61022e61026a366004611860565b600a60209081526000928352604080842090915290825290205481565b61022e610295366004611763565b60076020526000908152604090205481565b61022e6102b5366004611763565b60096020526000908152604090205481565b61022e6102d5366004611860565b600d60209081526000928352604080842090915290825290205481565b6004546101bb906001600160a01b031681565b6101a6610313366004611890565b610933565b6101a6610326366004611735565b610af4565b61022e6103393660046118bc565b610d89565b61022e61034c366004611763565b60016020526000908152604090205481565b61022e61036c366004611860565b50600019919050565b61022e61038336600461190a565b61102a565b61022e610396366004611860565b600c60209081526000928352604080842090915290825290205481565b6101a66103c1366004611860565b6111dc565b60025461022e565b6101a66103dc3660046118bc565b611362565b6101a66103ef3660046119e1565b611568565b61022e610402366004611860565b600b60209081526000928352604080842090915290825290205481565b61022e61042d366004611860565b6000918252600c602090815260408084206001600160a01b03909316845291905290205490565b61022e610462366004611763565b60066020526000908152604090205481565b61022e610482366004611763565b6115af565b6003546001600160a01b031633146104e65760405162461bcd60e51b815260206004820152601c60248201527f417272616e676572436f6e647569742f6e6f742d617272616e6765720000000060448201526064015b60405180910390fd5b6000600283815481106104fb576104fb611a0a565b6000918252602090912060059091020190506001815460ff16600381111561052557610525611787565b146105725760405162461bcd60e51b815260206004820152601e60248201527f417272616e676572436f6e647569742f696e76616c69642d737461747573000060448201526064016104dd565b8054600182015460028301546000828152600c602090815260408083206101009096046001600160a01b031680845295909152812080548792906105b7908490611a36565b90915550506001600160a01b038316600090815260086020526040812080548792906105e4908490611a36565b90915550506000828152600b602090815260408083206001600160a01b03871684529091528120805483929061061b908490611a49565b90915550506001600160a01b03831660009081526007602052604081208054839290610648908490611a49565b90915550506003848101869055845460ff1916178085556040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b0361010090920491909116906323b872dd906064016020604051808303816000875af11580156106ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106de9190611a5c565b61072a5760405162461bcd60e51b815260206004820152601f60248201527f417272616e676572436f6e647569742f7472616e736665722d6661696c65640060448201526064016104dd565b60408051878152602081018390529081018690526001600160a01b0384169083907f20e10bf859e24680d383a8a5a75dd133e8150398edfcaed7740a1c0e405757159060600160405180910390a3505050505050565b600060016002838154811061079757610797611a0a565b600091825260209091206005909102015460ff1660038111156107bc576107bc611787565b1492915050565b6108096040805160c08101909152806000815260200160006001600160a01b03168152602001600080191681526020016000815260200160008152602001606081525090565b6002828154811061081c5761081c611a0a565b600091825260209091206040805160c081019091526005909202018054829060ff16600381111561084f5761084f611787565b600381111561086057610860611787565b8152815461010090046001600160a01b0316602082015260018201546040820152600282015460608201526003820154608082015260048201805460a0909201916108aa90611a7e565b80601f01602080910402602001604051908101604052809291908181526020018280546108d690611a7e565b80156109235780601f106108f857610100808354040283529160200191610923565b820191906000526020600020905b81548152906001019060200180831161090657829003601f168201915b5050505050815250509050919050565b6003546001600160a01b0316331461098d5760405162461bcd60e51b815260206004820152601c60248201527f417272616e676572436f6e647569742f6e6f742d617272616e6765720000000060448201526064016104dd565b610996826115af565b8111156109f05760405162461bcd60e51b815260206004820152602260248201527f417272616e676572436f6e647569742f696e73756666696369656e742d66756e604482015261647360f01b60648201526084016104dd565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af1158015610a3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a619190611a5c565b610aad5760405162461bcd60e51b815260206004820152601f60248201527f417272616e676572436f6e647569742f7472616e736665722d6661696c65640060448201526064016104dd565b816001600160a01b03167ff085c28bde36fd9971e56c50dabd917d29c3dcbc3b42c49c6dae635e14ae63cb82604051610ae891815260200190565b60405180910390a25050565b600060028281548110610b0957610b09611a0a565b600091825260209091206040805160c081019091526005909202018054829060ff166003811115610b3c57610b3c611787565b6003811115610b4d57610b4d611787565b8152815461010090046001600160a01b0316602082015260018201546040820152600282015460608201526003820154608082015260048201805460a090920191610b9790611a7e565b80601f0160208091040260200160405190810160405280929190818152602001828054610bc390611a7e565b8015610c105780601f10610be557610100808354040283529160200191610c10565b820191906000526020600020905b815481529060010190602001808311610bf357829003601f168201915b505050505081525050905060016003811115610c2e57610c2e611787565b81516003811115610c4157610c41611787565b14610c8e5760405162461bcd60e51b815260206004820152601e60248201527f417272616e676572436f6e647569742f696e76616c69642d737461747573000060448201526064016104dd565b60208101516040820151610ca181611639565b606083015160028054819087908110610cbc57610cbc611a0a565b60009182526020909120600590910201805460ff19166001836003811115610ce657610ce6611787565b02179055506000828152600b602090815260408083206001600160a01b038716845290915281208054839290610d1d908490611a49565b90915550506001600160a01b03831660009081526007602052604081208054839290610d4a908490611a49565b90915550506040518581527f8a53ee25106d5ac0078e6fbdd2beac3cb96458adcb31a00d35bf94428236d8229060200160405180910390a15050505050565b600083610d9581611639565b6000858152600c602090815260408083206001600160a01b0388168452909152902054808411610dc55783610dc7565b805b6000878152600c602090815260408083206001600160a01b038a168452909152812080549295508592909190610dfe908490611a49565b90915550506001600160a01b03851660009081526008602052604081208054859290610e2b908490611a49565b90915550506000868152600d602090815260408083206001600160a01b038916845290915281208054859290610e62908490611a36565b90915550506001600160a01b03851660009081526009602052604081208054859290610e8f908490611a36565b909155505060048054604051636610bf7f60e01b81529182018890526000916001600160a01b0390911690636610bf7f90602401602060405180830381865afa158015610ee0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f049190611ab8565b60405163a9059cbb60e01b81526001600160a01b038083166004830152602482018790529192509087169063a9059cbb906044016020604051808303816000875af1158015610f57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7b9190611a5c565b610fd85760405162461bcd60e51b815260206004820152602860248201527f417272616e676572436f6e647569742f77697468647261772d7472616e7366656044820152671c8b59985a5b195960c21b60648201526084016104dd565b604080516001600160a01b0383811682526020820187905288169189917fcd6ac346191b4b7531743e58f243dd4d350a52a9186641c1e5eac22b95aaedbe910160405180910390a35050509392505050565b60008461103681611639565b600280546040805160c08101825260018082526001600160a01b038a1660208301529181018a90526060810188905260006080820181905260a082018890528284018555939093528251600583027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace018054939650929091839160ff1916908360038111156110c7576110c7611787565b0217905550602082015181546001600160a01b0390911661010002610100600160a81b031990911617815560408201516001820155606082015160028201556080820151600382015560a082015160048201906111249082611b24565b5050506000868152600b602090815260408083206001600160a01b038916845290915281208054869290611159908490611a36565b90915550506001600160a01b03851660009081526007602052604081208054869290611186908490611a36565b92505081905550846001600160a01b0316867fc37a21b1f83f8a603ed9e2fd12057edb7bfdaa66bea994899c868fc70f57e5078487876040516111cb93929190611be4565b60405180910390a350949350505050565b336000908152600160208190526040909120541461123c5760405162461bcd60e51b815260206004820152601e60248201527f417272616e676572436f6e647569742f6e6f742d617574686f72697a6564000060448201526064016104dd565b816730b93930b733b2b960c11b0361126e57600380546001600160a01b0319166001600160a01b038316179055611327565b8167726567697374727960c01b036112a057600480546001600160a01b0319166001600160a01b038316179055611327565b8164726f6c657360d81b036112cf57600580546001600160a01b0319166001600160a01b038316179055611327565b60405162461bcd60e51b815260206004820152602760248201527f417272616e676572436f6e647569742f66696c652d756e7265636f676e697a65604482015266642d706172616d60c81b60648201526084016104dd565b6040516001600160a01b038216815282907f8fef588b5fc1afbf5b2f06c1a435d513f208da2e6704c3d8f0e0ec91167066ba90602001610ae8565b8261136c81611639565b6000848152600a602090815260408083206001600160a01b03871684529091528120805484929061139e908490611a36565b90915550506001600160a01b038316600090815260066020526040812080548492906113cb908490611a36565b909155505060048054604051636610bf7f60e01b81529182018690526000916001600160a01b0390911690636610bf7f90602401602060405180830381865afa15801561141c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114409190611ab8565b6040516323b872dd60e01b81526001600160a01b03808316600483015230602483015260448201869052919250908516906323b872dd906064016020604051808303816000875af1158015611499573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114bd9190611a5c565b6115195760405162461bcd60e51b815260206004820152602760248201527f417272616e676572436f6e647569742f6465706f7369742d7472616e736665726044820152660b59985a5b195960ca1b60648201526084016104dd565b604080516001600160a01b0383811682526020820186905286169187917fc95ddcaddf83340b68d0d44c01b1703f5d28d0611a3fd87e69d79ba7e2ac21d3910160405180910390a35050505050565b806002838154811061157c5761157c611a0a565b60009182526020909120600590910201805460ff191660018360038111156115a6576115a6611787565b02179055505050565b6001600160a01b0381166000818152600860205260408082205490516370a0823160e01b8152306004820152919290916370a0823190602401602060405180830381865afa158015611605573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116299190611c0c565b6116339190611a49565b92915050565b60055460405163784c0a9160e01b8152600481018390523360248201523060448201526000356001600160e01b03191660648201526001600160a01b039091169063784c0a9190608401602060405180830381865afa1580156116a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c49190611a5c565b6117105760405162461bcd60e51b815260206004820152601e60248201527f417272616e676572436f6e647569742f6e6f742d617574686f72697a6564000060448201526064016104dd565b50565b6000806040838503121561172657600080fd5b50508035926020909101359150565b60006020828403121561174757600080fd5b5035919050565b6001600160a01b038116811461171057600080fd5b60006020828403121561177557600080fd5b81356117808161174e565b9392505050565b634e487b7160e01b600052602160045260246000fd5b6000815180845260005b818110156117c3576020818501810151868301820152016117a7565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600082516004811061180957634e487b7160e01b600052602160045260246000fd5b8060208401525060018060a01b0360208401511660408301526040830151606083015260608301516080830152608083015160a083015260a083015160c08084015261185860e084018261179d565b949350505050565b6000806040838503121561187357600080fd5b8235915060208301356118858161174e565b809150509250929050565b600080604083850312156118a357600080fd5b82356118ae8161174e565b946020939093013593505050565b6000806000606084860312156118d157600080fd5b8335925060208401356118e38161174e565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561192057600080fd5b8435935060208501356119328161174e565b925060408501359150606085013567ffffffffffffffff8082111561195657600080fd5b818701915087601f83011261196a57600080fd5b81358181111561197c5761197c6118f4565b604051601f8201601f19908116603f011681019083821181831017156119a4576119a46118f4565b816040528281528a60208487010111156119bd57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156119f457600080fd5b8235915060208301356004811061188557600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561163357611633611a20565b8181038181111561163357611633611a20565b600060208284031215611a6e57600080fd5b8151801515811461178057600080fd5b600181811c90821680611a9257607f821691505b602082108103611ab257634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611aca57600080fd5b81516117808161174e565b601f821115611b1f57600081815260208120601f850160051c81016020861015611afc5750805b601f850160051c820191505b81811015611b1b57828155600101611b08565b5050505b505050565b815167ffffffffffffffff811115611b3e57611b3e6118f4565b611b5281611b4c8454611a7e565b84611ad5565b602080601f831160018114611b875760008415611b6f5750858301515b600019600386901b1c1916600185901b178555611b1b565b600085815260208120601f198616915b82811015611bb657888601518255948401946001909101908401611b97565b5085821015611bd45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b838152826020820152606060408201526000611c03606083018461179d565b95945050505050565b600060208284031215611c1e57600080fd5b505191905056fea26469706673582212200ba562b290e7e6ac599c5cf72ced9520a30f824a44a11df67c08ee35b0a5d94e64736f6c63430008140033a2646970667358221220e9d2470baca92f74b0310e731dd9bf819418a6a4e19d695ae297e112a38b7ba764736f6c63430008140033608060405234801561001057600080fd5b503360008181526020819052604080822060019055517fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a609190a26103fc806100596000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806365fae35e1461005c5780636610bf7f146100715780639c52a7f1146100b7578063bf353dbb146100ca578063ebecb39d146100f8575b600080fd5b61006f61006a366004610321565b61010b565b005b61009a61007f366004610343565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61006f6100c5366004610321565b610188565b6100ea6100d8366004610321565b60006020819052908152604090205481565b6040519081526020016100ae565b61006f61010636600461035c565b6101fb565b336000908152602081905260409020546001146101435760405162461bcd60e51b815260040161013a90610391565b60405180910390fd5b6001600160a01b03811660008181526020819052604080822060019055517fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a609190a250565b336000908152602081905260409020546001146101b75760405162461bcd60e51b815260040161013a90610391565b6001600160a01b038116600081815260208190526040808220829055517f184450df2e323acec0ed3b5c7531b81f9b4cdef7914dfd4c0a4317416bb5251b9190a250565b3360009081526020819052604090205460011461022a5760405162461bcd60e51b815260040161013a90610391565b8165313ab33332b960d11b0361026657600083815260016020526040902080546001600160a01b0319166001600160a01b0383161790556102c0565b60405162461bcd60e51b815260206004820152602960248201527f416c6c6f6361746f7252656769737472792f66696c652d756e7265636f676e696044820152687a65642d706172616d60b81b606482015260840161013a565b6040516001600160a01b0382168152829084907f4ff2caaa972a7c6629ea01fae9c93d73cc307d13ea4c369f9bbbb7f9b7e9461d9060200160405180910390a3505050565b80356001600160a01b038116811461031c57600080fd5b919050565b60006020828403121561033357600080fd5b61033c82610305565b9392505050565b60006020828403121561035557600080fd5b5035919050565b60008060006060848603121561037157600080fd5b833592506020840135915061038860408501610305565b90509250925092565b6020808252818101527f416c6c6f6361746f7252656769737472792f6e6f742d617574686f72697a656460408201526060019056fea264697066735822122002b4c53d9fa3a81b0a0894c6e39681fefe7c19912e670fbadd1caf57a6e0870564736f6c63430008140033608060405234801561001057600080fd5b503360008181526020819052604080822060019055517fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a609190a2610a1e806100596000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a04deb7411610071578063a04deb7414610174578063bf353dbb146101b5578063c6768fb7146101e3578063cb0c4adc14610214578063daa701031461023f578063fd58fc341461025257600080fd5b80631c76b182146100ae57806365fae35e146100c357806366d3e365146100d6578063784c0a91146100e95780639c52a7f114610161575b600080fd5b6100c16100bc3660046106a5565b610265565b005b6100c16100d1366004610703565b61039b565b6100c16100e4366004610725565b61040f565b61014c6100f7366004610772565b60008481526003602090815260408083206001600160a01b03958616845282528083206001600160e01b0319909416835292815282822054958252600281528282209490931681529290915290205416151590565b60405190151581526020015b60405180910390f35b6100c161016f366004610703565b61050b565b61019d6101823660046107b4565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610158565b6101d56101c3366004610703565b60006020819052908152604090205481565b604051908152602001610158565b6101d56101f13660046107cd565b600360209081526000938452604080852082529284528284209052825290205481565b6101d5610222366004610809565b600260209081526000928352604080842090915290825290205481565b6100c161024d366004610809565b61057e565b61014c610260366004610835565b610611565b60008581526001602052604090205485906001600160a01b031633146102a65760405162461bcd60e51b815260040161029d90610868565b60405180910390fd5b60006102b660ff871660026109a5565b905082156102fd5760008781526003602090815260408083206001600160a01b038916845282528083206001600160e01b031988168452909152902080548217905561033c565b60008781526003602090815260408083206001600160a01b038916845282528083206001600160e01b0319881684529091529020805460001983181690555b604080516001600160e01b03198616815284151560208201526001600160a01b0387169160ff8916918a917fe459bcd103dbe8b0e6a5d530849ce830cfccf2828693cd58ae90801afd24fab5910160405180910390a450505050505050565b336000908152602081905260409020546001146103ca5760405162461bcd60e51b815260040161029d906109b1565b6001600160a01b03811660008181526020819052604080822060019055517fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a609190a250565b60008481526001602052604090205484906001600160a01b031633146104475760405162461bcd60e51b815260040161029d90610868565b600061045760ff851660026109a5565b9050821561048c5760008681526002602090815260408083206001600160a01b038916845290915290208054821790556104b9565b60008681526002602090815260408083206001600160a01b03891684529091529020805460001983181690555b8360ff16856001600160a01b0316877f830afcb2e8fda1fe33202a89fe3abf4fc4205f546f29092f144c19e34aab3cea866040516104fb911515815260200190565b60405180910390a4505050505050565b3360009081526020819052604090205460011461053a5760405162461bcd60e51b815260040161029d906109b1565b6001600160a01b038116600081815260208190526040808220829055517f184450df2e323acec0ed3b5c7531b81f9b4cdef7914dfd4c0a4317416bb5251b9190a250565b336000908152602081905260409020546001146105ad5760405162461bcd60e51b815260040161029d906109b1565b60008281526001602090815260409182902080546001600160a01b0319166001600160a01b038516908117909155915191825283917f1666ce5bfc515e272162696dc7b908334194bcf1f921f457b5406d2e00ed9e6e910160405180910390a25050565b600061062160ff831660026109a5565b60008581526002602090815260408083206001600160a01b038816845290915290205416151590509392505050565b803560ff8116811461066157600080fd5b919050565b80356001600160a01b038116811461066157600080fd5b80356001600160e01b03198116811461066157600080fd5b8035801515811461066157600080fd5b600080600080600060a086880312156106bd57600080fd5b853594506106cd60208701610650565b93506106db60408701610666565b92506106e96060870161067d565b91506106f760808701610695565b90509295509295909350565b60006020828403121561071557600080fd5b61071e82610666565b9392505050565b6000806000806080858703121561073b57600080fd5b8435935061074b60208601610666565b925061075960408601610650565b915061076760608601610695565b905092959194509250565b6000806000806080858703121561078857600080fd5b8435935061079860208601610666565b92506107a660408601610666565b91506107676060860161067d565b6000602082840312156107c657600080fd5b5035919050565b6000806000606084860312156107e257600080fd5b833592506107f260208501610666565b91506108006040850161067d565b90509250925092565b6000806040838503121561081c57600080fd5b8235915061082c60208401610666565b90509250929050565b60008060006060848603121561084a57600080fd5b8335925061085a60208501610666565b915061080060408501610650565b60208082526021908201527f416c6c6f6361746f72526f6c65732f696c6b2d6e6f742d617574686f72697a656040820152601960fa1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156108fa5781600019048211156108e0576108e06108a9565b808516156108ed57918102915b93841c93908002906108c4565b509250929050565b6000826109115750600161099f565b8161091e5750600061099f565b8160018114610934576002811461093e5761095a565b600191505061099f565b60ff84111561094f5761094f6108a9565b50506001821b61099f565b5060208310610133831016604e8410600b841016171561097d575081810a61099f565b61098783836108bf565b806000190482111561099b5761099b6108a9565b0290505b92915050565b600061071e8383610902565b6020808252601d908201527f416c6c6f6361746f72526f6c65732f6e6f742d617574686f72697a656400000060408201526060019056fea26469706673582212200a2cb90ff2b89b60de536043294dacc625f91ee84119cc783c2531f3b3dfee4364736f6c6343000814003360a06040523480156200001157600080fd5b50604051620009a7380380620009a7833981016040819052620000349162000126565b60006200004284826200023a565b5060016200005183826200023a565b5060ff1660805250620003069050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008957600080fd5b81516001600160401b0380821115620000a657620000a662000061565b604051601f8301601f19908116603f01168101908282118183101715620000d157620000d162000061565b81604052838152602092508683858801011115620000ee57600080fd5b600091505b83821015620001125785820183015181830184015290820190620000f3565b600093810190920192909252949350505050565b6000806000606084860312156200013c57600080fd5b83516001600160401b03808211156200015457600080fd5b620001628783880162000077565b945060208601519150808211156200017957600080fd5b50620001888682870162000077565b925050604084015160ff81168114620001a057600080fd5b809150509250925092565b600181811c90821680620001c057607f821691505b602082108103620001e157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200023557600081815260208120601f850160051c81016020861015620002105750805b601f850160051c820191505b8181101562000231578281556001016200021c565b5050505b505050565b81516001600160401b0381111562000256576200025662000061565b6200026e81620002678454620001ab565b84620001e7565b602080601f831160018114620002a657600084156200028d5750858301515b600019600386901b1c1916600185901b17855562000231565b600085815260208120601f198616915b82811015620002d757888601518255948401946001909101908401620002b6565b5085821015620002f65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805161068562000322600039600061014401526106856000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806340c10f191161008c5780639dc29fac116100665780639dc29fac146101c6578063a457c2d7146101d9578063a9059cbb146101ec578063dd62ed3e146101ff57600080fd5b806340c10f191461018b57806370a082311461019e57806395d89b41146101be57600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd1461012c578063313ce5671461013f5780633950935114610178575b600080fd5b6100dc61022a565b6040516100e991906104b4565b60405180910390f35b61010561010036600461051e565b6102b8565b60405190151581526020016100e9565b61011e60025481565b6040519081526020016100e9565b61010561013a366004610548565b6102e9565b6101667f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100e9565b61010561018636600461051e565b61030b565b61010561019936600461051e565b61036e565b61011e6101ac366004610584565b60036020526000908152604090205481565b6100dc61037a565b6101056101d436600461051e565b610387565b6101056101e736600461051e565b610393565b6101056101fa36600461051e565b6103a0565b61011e61020d3660046105a6565b600460209081526000928352604080842090915290825290205481565b60008054610237906105d9565b80601f0160208091040260200160405190810160405280929190818152602001828054610263906105d9565b80156102b05780601f10610285576101008083540402835291602001916102b0565b820191906000526020600020905b81548152906001019060200180831161029357829003601f168201915b505050505081565b3360009081526004602090815260408083206001600160a01b038616845290915281208290555b5060015b92915050565b60006102f68433846103ad565b6103018484846103f1565b5060019392505050565b3360008181526004602090815260408083206001600160a01b038716845290915281205490916102df918590610342908690610629565b6001600160a01b0392831660009081526004602090815260408083209490951682529290925291902055565b60006102df8383610441565b60018054610237906105d9565b60006102df838361047a565b60006102df3384846103ad565b60006102df3384846103f1565b6001600160a01b0380841660009081526004602090815260408083209386168352929052205460001981146103eb576103eb8484610342858561063c565b50505050565b6001600160a01b0383166000908152600360205260408120805483929061041990849061063c565b90915550506001600160a01b0390911660009081526003602052604090208054909101905550565b80600260008282546104539190610629565b90915550506001600160a01b03909116600090815260036020526040902080549091019055565b6001600160a01b038216600090815260036020526040812080548392906104a290849061063c565b90915550506002805491909103905550565b600060208083528351808285015260005b818110156104e1578581018301518582016040015282016104c5565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461051957600080fd5b919050565b6000806040838503121561053157600080fd5b61053a83610502565b946020939093013593505050565b60008060006060848603121561055d57600080fd5b61056684610502565b925061057460208501610502565b9150604084013590509250925092565b60006020828403121561059657600080fd5b61059f82610502565b9392505050565b600080604083850312156105b957600080fd5b6105c283610502565b91506105d060208401610502565b90509250929050565b600181811c908216806105ed57607f821691505b60208210810361060d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156102e3576102e3610613565b818103818111156102e3576102e361061356fea264697066735822122085d8d263e534e28c21b7d16de81ae6c130b4942d7a6f18c68ea229562843ce7264736f6c63430008140033",
    "sourceMap": "1572:26:74:-:0;;;1594:4;-1:-1:-1;;1572:26:74;;;;;;;;3126:44:77;;;;;;;;;;;1185:17:106;833:1793:112;1185:17:106;;833:1793:112;1185:17:106;;;-1:-1:-1;;;1185:17:106;;;;:8;:17::i;:::-;1166:36;;;-1:-1:-1;;;;;;1166:36:106;-1:-1:-1;;;;;1166:36:106;;;;;;;;;;1227:20;;;;;;;;;;;;-1:-1:-1;;;1227:20:106;;;;;;:8;:20::i;:::-;1208:39;;;-1:-1:-1;;;;;;1208:39:106;-1:-1:-1;;;;;1208:39:106;;;;;;;;;;1283:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1254:52:106;;;-1:-1:-1;;;;;;1254:52:106;-1:-1:-1;;;;;1254:52:106;;;;;;;;;;1341:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1312:49:106;;;-1:-1:-1;;;;;;1312:49:106;-1:-1:-1;;;;;1312:49:106;;;;;;;;;;1961:14;;;-1:-1:-1;;;;1961:14:106;;;-1:-1:-1;;;1982:19:106;;2026:35;;2058:2;;2026:35;;;:::i;:::-;352:2:115;334:21;;;391:1;371:18;;;364:29;;;-1:-1:-1;;;424:3:115;409:19;;402:36;476:3;469:4;454:20;;447:33;;;496:19;;489:30;-1:-1:-1;;;550:3:115;535:19;;528:36;648:4;636:17;;;-1:-1:-1;616:18:115;;609:45;596:3;581:19;2026:35:106;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2008:53:106;;;-1:-1:-1;;;;;;2008:53:106;-1:-1:-1;;;;;2008:53:106;;;;;;;;;;833:1793:112;;;;;;;;;;;;16749:125:78;16813:12;16847:20;16862:4;16847:14;:20::i;:::-;-1:-1:-1;16837:30:78;16749:125;-1:-1:-1;;16749:125:78:o;16468:242::-;16538:12;16552:18;16630:4;16613:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;16613:22:78;;;;;;;16603:33;;16613:22;16603:33;;;;-1:-1:-1;;;;;;16654:19:78;;;;;1360:25:115;;;16603:33:78;-1:-1:-1;16654:7:78;;;;1333:18:115;;16654:19:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16683:20;;-1:-1:-1;;;16683:20:78;;16647:26;;-1:-1:-1;16683:8:78;;;;:20;;16647:26;;16698:4;;16683:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16468:242;;;:::o;833:1793:112:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;665:250:115:-;750:1;760:113;774:6;771:1;768:13;760:113;;;850:11;;;844:18;831:11;;;824:39;796:2;789:10;760:113;;;-1:-1:-1;;907:1:115;889:16;;882:27;665:250::o;920:289::-;1051:3;1089:6;1083:13;1105:66;1164:6;1159:3;1152:4;1144:6;1140:17;1105:66;:::i;:::-;1187:16;;;;;920:289;-1:-1:-1;;920:289:115:o;1396:290::-;1466:6;1519:2;1507:9;1498:7;1494:23;1490:32;1487:52;;;1535:1;1532;1525:12;1487:52;1561:16;;-1:-1:-1;;;;;1606:31:115;;1596:42;;1586:70;;1652:1;1649;1642:12;1586:70;1675:5;1396:290;-1:-1:-1;;;1396:290:115:o;1691:493::-;1897:1;1893;1888:3;1884:11;1880:19;1872:6;1868:32;1857:9;1850:51;1937:2;1932;1921:9;1917:18;1910:30;1831:4;1969:6;1963:13;2012:6;2007:2;1996:9;1992:18;1985:34;2028:79;2100:6;2095:2;2084:9;2080:18;2075:2;2067:6;2063:15;2028:79;:::i;:::-;2168:2;2147:15;-1:-1:-1;;2143:29:115;2128:45;;;;2175:2;2124:54;;1691:493;-1:-1:-1;;;1691:493:115:o;:::-;833:1793:112;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "833:1793:112:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;950:858;;;:::i;:::-;;2170:134:80;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2939:133;;;:::i;2640:141::-;;;:::i;1814:809:112:-;;;:::i;2456:178:80:-;;;:::i;:::-;;;;;;;:::i;2310:140::-;;;:::i;:::-;;;;;;;:::i;2787:146::-;;;:::i;1875:141::-;;;:::i;1819:584:74:-;;;:::i;:::-;;;3755:14:115;;3748:22;3730:41;;3718:2;3703:18;1819:584:74;3590:187:115;2022:142:80;;;:::i;1572:26:74:-;;;;;;;;;950:858:112;993:36;1041:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;993:70;;1073:45;1121:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1160:62:112;;-1:-1:-1;;;1160:62:112;;-1:-1:-1;;;;;3946:32:115;;;1160:62:112;;;3928:51:115;1073:76:112;;-1:-1:-1;1160:30:112;;;;;;3901:18:115;;1160:62:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1233:14:112;:62;;-1:-1:-1;;;;;;1233:62:112;-1:-1:-1;;;;;1233:62:112;;;;;;;;;1306:8;;1320:3;;1306:43;;-1:-1:-1;;;1306:43:112;;;;;4255:25:115;;;;-1:-1:-1;;;4296:18:115;;;4289:36;;;;1343:4:112;4341:18:115;;;4334:60;1306:8:112;;-1:-1:-1;1306:13:112;;-1:-1:-1;4228:18:115;;1306:43:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1360:14:112;;;1400:8;;1360:50;;-1:-1:-1;;;1360:50:112;;-1:-1:-1;;;1360:50:112;;;4642:29:115;-1:-1:-1;;;;;1400:8:112;;;4687:18:115;;;4680:60;;;;1360:14:112;;-1:-1:-1;1360:19:112;;-1:-1:-1;4615:18:115;;1360:50:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1420:14:112;;;1459:5;;1420:46;;-1:-1:-1;;;1420:46:112;;-1:-1:-1;;;1420:46:112;;;4988:26:115;-1:-1:-1;;;;;1459:5:112;;;5030:18:115;;;5023:60;;;;1420:14:112;;-1:-1:-1;1420:19:112;;-1:-1:-1;4961:18:115;;1420:46:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1477:5:112;;1495:3;;1477:37;;-1:-1:-1;;;1477:37:112;;;;;5268:25:115;;;;1508:4:112;5309:18:115;;;5302:60;-1:-1:-1;;;;;1477:5:112;;;;-1:-1:-1;1477:17:112;;-1:-1:-1;5241:18:115;;1477:37:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1524:5:112;;1542:3;;1562:4;;1524:49;;-1:-1:-1;;;1524:49:112;;;;;5594:25:115;;;;1555:4:112;5635:18:115;;;5628:60;-1:-1:-1;;;1562:4:112;;;;5704:18:115;;;5697:45;1524:5:112;5758:18:115;;;5751:50;-1:-1:-1;;;;;1524:5:112;;;;-1:-1:-1;1524:17:112;;-1:-1:-1;5566:19:115;;1524:49:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1611:14:112;;1637:5;;1657:3;;1662:4;;1637:77;;-1:-1:-1;;;1637:77:112;;-1:-1:-1;;;;;1611:14:112;;;;-1:-1:-1;1637:5:112;;;;;-1:-1:-1;1637:19:112;;:77;;-1:-1:-1;;;1662:4:112;;;;;1611:14;;-1:-1:-1;;;1678:24:112;1611:14;;1637:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1724:5:112;;1744:3;;1749:4;;1724:77;;-1:-1:-1;;;1724:77:112;;-1:-1:-1;;;;;1724:5:112;;;;-1:-1:-1;1724:19:112;;-1:-1:-1;1724:77:112;;-1:-1:-1;;;1749:4:112;;;;;;1755:8;;-1:-1:-1;;;1765:29:112;1724:5;;:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;983:825;;;950:858::o;2170:134:80:-;2217:33;2281:16;2262:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2262:35:80;;;;;;;;;;;;;;;;;;;;;;;2170:134;:::o;2939:133::-;2985:33;3049:16;3030:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3030:35:80;;;;;;;;;;;;;;;;;;;;;;2939:133;:::o;2640:141::-;2688:35;2756:18;2735:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2735:39:80;;;;;;;;;;;;;;;;;;;;;;2640:141;:::o;1814:809:112:-;1862:5;;:30;;-1:-1:-1;;;1862:30:112;;1881:4;1862:30;;;6532:51:115;1888:3:112;6599:18:115;;;6592:34;-1:-1:-1;;;;;1862:5:112;;;;:10;;6505:18:115;;1862:30:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1902:5:112;;1924:14;;;1902:43;;-1:-1:-1;;;1902:43:112;;-1:-1:-1;;;;;1924:14:112;;;1902:43;;;6532:51:115;1941:3:112;6599:18:115;;;6592:34;;;;1902:5:112;;;;:13;;6505:18:115;;1902:43:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1956:14:112;;;1979:3;;1992:5;;1956:48;;-1:-1:-1;;;1956:48:112;;;;;7131:25:115;;;;-1:-1:-1;;;;;1992:5:112;;;7172:18:115;;;7165:60;;;;2000:3:112;7241:18:115;;;7234:34;;;1956:14:112;;;;;:22;;7104:18:115;1956:48:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2015:14:112;;;2043:3;;2056:5;;2015:61;;-1:-1:-1;;;2015:61:112;;;;;;7557:25:115;;;;-1:-1:-1;;;;;2056:5:112;;;7598:18:115;;;7591:60;;;;2064:3:112;7667:18:115;;;7660:34;;;7730:3;7710:18;;;7703:31;7750:19;;;7743:30;;;;-1:-1:-1;;;7789:19:115;;;7782:35;2015:14:112;;-1:-1:-1;2015:27:112;;-1:-1:-1;7834:19:115;;2015:61:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2137:14:112;;;:32;;-1:-1:-1;;;2137:32:112;;2087:47;2137:32;;;8207:25:115;;;2087:47:112;-1:-1:-1;;;;;2137:14:112;;;;:29;;8180:18:115;2137:32:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2137:32:112;;;;;;;;;;;;:::i;:::-;2087:82;;2180:83;2197:11;:18;;;2189:27;;;;;;;;:::i;:::-;2226:35;2180:8;:83::i;:::-;2283:14;;;:30;;-1:-1:-1;;;2283:30:112;;:14;:30;;;8207:25:115;2274:46:112;;-1:-1:-1;;;;;2283:14:112;;;;:27;;8180:18:115;2283:30:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2315:4;2274:8;:46::i;:::-;2331:14;;:79;;-1:-1:-1;;;2331:79:112;;-1:-1:-1;;;;;2331:14:112;;;;:37;;:79;;:14;;2372:37;;2331:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2430:14:112;;;:30;;-1:-1:-1;;;2430:30:112;;:14;:30;;;8207:25:115;2421:47:112;;-1:-1:-1;;;;;;2430:14:112;;;;-1:-1:-1;2430:27:112;;8180:18:115;2430:30:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2462:5;2421:8;:47::i;:::-;2479:14;;:79;;-1:-1:-1;;;2479:79:112;;-1:-1:-1;;;;;2479:14:112;;;;:37;;:79;;:14;;2520:37;;2479:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2578:14:112;;;:30;;-1:-1:-1;;;2578:30:112;;:14;:30;;;8207:25:115;2569:47:112;;-1:-1:-1;;;;;;2578:14:112;;;;-1:-1:-1;2578:27:112;;8180:18:115;2578:30:112;8053:185:115;2569:47:112;1852:771;1814:809::o;2456:178:80:-;2512:48;2601:26;2572:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2572:55:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2572:55:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2456:178;:::o;2310:140::-;2358:34;2425:18;2404:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2787:146;2835:40;2908:18;2887:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2887:39:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2887:39:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1875:141;1924:34;1991:18;1970:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:74;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:74;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;6532:51:115;;;-1:-1:-1;;;6599:18:115;;;6592:34;2196:43:74;;;;;;;;;6505:18:115;;;2196:43:74;;;-1:-1:-1;;1671:64:74;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:74;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:74:o;2022:142:80:-;2071:35;2139:18;2118:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2118:39:80;;;;;;;;;;;;;;;;;;;;;;2022:142;:::o;5209:262:74:-;5271:1;5266;:6;5262:203;;5293:41;;;;;12608:2:115;12590:21;;;12647:2;12627:18;;;12620:30;12686:34;12681:2;12666:18;;12659:62;-1:-1:-1;;;12752:2:115;12737:18;;12730:32;12794:3;12779:19;;12406:398;5293:41:74;;;;;;;;5353:31;5382:1;5353:31;;;;;;:::i;:::-;;;;;;;;5403;5432:1;5403:31;;;;;;:::i;:::-;;;;;;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;789:312:76:-;859:1;854:6;;:1;:6;;;850:245;;881:41;;;;;14045:2:115;14027:21;;;14084:2;14064:18;;;14057:30;14123:34;14118:2;14103:18;;14096:62;-1:-1:-1;;;14189:2:115;14174:18;;14167:32;14231:3;14216:19;;13843:398;881:41:76;;;;;;;;941:52;972:1;:20;;;;;;;;;;;;;;;-1:-1:-1;;;972:20:76;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;972:20:76;;;;941:52;;;;;;:::i;:::-;;;;;;;;1012;1043:1;:20;;;;;;;;;;;;;;;-1:-1:-1;;;1043:20:76;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1043:20:76;;;;1012:52;;;;;;:::i;2409:432:74:-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;15338:51:115;;;-1:-1:-1;;;15405:18:115;;;15398:34;;;;2712:4:74;15448:18:115;;;15441:34;2489:11:74;;1671:64;2586:43;;15311:18:115;;2652:67:74;;;-1:-1:-1;;2652:67:74;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:74;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:74;2820:7;:14;;-1:-1:-1;;2820:14:74;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:658:115:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:115;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:115;;14:658;-1:-1:-1;;;;;;14:658:115:o;677:1569::-;881:4;910:2;950;939:9;935:18;980:2;969:9;962:21;1003:6;1038;1032:13;1069:6;1061;1054:22;1095:2;1085:12;;1128:2;1117:9;1113:18;1106:25;;1190:2;1180:6;1177:1;1173:14;1162:9;1158:30;1154:39;1228:2;1220:6;1216:15;1249:1;1270;1280:937;1296:6;1291:3;1288:15;1280:937;;;1365:22;;;-1:-1:-1;;1361:36:115;1349:49;;1421:13;;1508:9;;-1:-1:-1;;;;;1504:35:115;1489:51;;1579:11;;1573:18;1611:15;;;1604:27;;;1692:19;;1461:15;;;1724:24;;;1814:21;;;;1859:1;;1782:2;1770:15;;;1873:236;1889:8;1884:3;1881:17;1873:236;;;1970:15;;-1:-1:-1;;;;;;1966:42:115;1952:57;;2078:17;;;;1917:1;1908:11;;;;;2035:14;;;;1873:236;;;-1:-1:-1;2195:12:115;;;;2132:5;-1:-1:-1;;;2160:15:115;;;;1322:1;1313:11;1280:937;;;-1:-1:-1;2234:6:115;;677:1569;-1:-1:-1;;;;;;;;;677:1569:115:o;2251:250::-;2336:1;2346:113;2360:6;2357:1;2354:13;2346:113;;;2436:11;;;2430:18;2417:11;;;2410:39;2382:2;2375:10;2346:113;;;-1:-1:-1;;2493:1:115;2475:16;;2468:27;2251:250::o;2506:271::-;2548:3;2586:5;2580:12;2613:6;2608:3;2601:19;2629:76;2698:6;2691:4;2686:3;2682:14;2675:4;2668:5;2664:16;2629:76;:::i;:::-;2759:2;2738:15;-1:-1:-1;;2734:29:115;2725:39;;;;2766:4;2721:50;;2506:271;-1:-1:-1;;2506:271:115:o;2782:803::-;2944:4;2973:2;3013;3002:9;2998:18;3043:2;3032:9;3025:21;3066:6;3101;3095:13;3132:6;3124;3117:22;3170:2;3159:9;3155:18;3148:25;;3232:2;3222:6;3219:1;3215:14;3204:9;3200:30;3196:39;3182:53;;3270:2;3262:6;3258:15;3291:1;3301:255;3315:6;3312:1;3309:13;3301:255;;;3408:2;3404:7;3392:9;3384:6;3380:22;3376:36;3371:3;3364:49;3436:40;3469:6;3460;3454:13;3436:40;:::i;:::-;3426:50;-1:-1:-1;3534:12:115;;;;3499:15;;;;3337:1;3330:9;3301:255;;;-1:-1:-1;3573:6:115;;2782:803;-1:-1:-1;;;;;;;2782:803:115:o;5812:531::-;6059:25;;;6132:4;6120:17;;;;6115:2;6100:18;;6093:45;-1:-1:-1;;;;;6174:32:115;;;;6169:2;6154:18;;6147:60;-1:-1:-1;;;;;;6243:33:115;6238:2;6223:18;;6216:61;6321:14;6314:22;6308:3;6293:19;;6286:51;6046:3;6031:19;;5812:531::o;6637:277::-;6704:6;6757:2;6745:9;6736:7;6732:23;6728:32;6725:52;;;6773:1;6770;6763:12;6725:52;6805:9;6799:16;6858:5;6851:13;6844:21;6837:5;6834:32;6824:60;;6880:1;6877;6870:12;6824:60;6903:5;6637:277;-1:-1:-1;;;6637:277:115:o;7864:184::-;7934:6;7987:2;7975:9;7966:7;7962:23;7958:32;7955:52;;;8003:1;8000;7993:12;7955:52;-1:-1:-1;8026:16:115;;7864:184;-1:-1:-1;7864:184:115:o;8243:127::-;8304:10;8299:3;8295:20;8292:1;8285:31;8335:4;8332:1;8325:15;8359:4;8356:1;8349:15;8375:248;8442:2;8436:9;8484:4;8472:17;;8519:18;8504:34;;8540:22;;;8501:62;8498:88;;;8566:18;;:::i;:::-;8602:2;8595:22;8375:248;:::o;8628:177::-;8707:13;;-1:-1:-1;;;;;8749:31:115;;8739:42;;8729:70;;8795:1;8792;8785:12;8810:699;8864:5;8917:3;8910:4;8902:6;8898:17;8894:27;8884:55;;8935:1;8932;8925:12;8884:55;8964:6;8958:13;8990:18;9027:2;9023;9020:10;9017:36;;;9033:18;;:::i;:::-;9108:2;9102:9;9076:2;9162:13;;-1:-1:-1;;9158:22:115;;;9182:2;9154:31;9150:40;9138:53;;;9206:18;;;9226:22;;;9203:46;9200:72;;;9252:18;;:::i;:::-;9292:10;9288:2;9281:22;9327:2;9319:6;9312:18;9373:3;9366:4;9361:2;9353:6;9349:15;9345:26;9342:35;9339:55;;;9390:1;9387;9380:12;9339:55;9403:76;9476:2;9469:4;9461:6;9457:17;9450:4;9442:6;9438:17;9403:76;:::i;:::-;9497:6;8810:699;-1:-1:-1;;;;;;8810:699:115:o;9514:982::-;9614:6;9667:2;9655:9;9646:7;9642:23;9638:32;9635:52;;;9683:1;9680;9673:12;9635:52;9716:9;9710:16;9745:18;9786:2;9778:6;9775:14;9772:34;;;9802:1;9799;9792:12;9772:34;9825:22;;;;9881:4;9863:16;;;9859:27;9856:47;;;9899:1;9896;9889:12;9856:47;9925:17;;:::i;:::-;9972:2;9966:9;10006:1;9997:7;9994:14;9984:42;;10022:1;10019;10012:12;9984:42;10035:22;;10089:42;10127:2;10119:11;;10089:42;:::i;:::-;10084:2;10077:5;10073:14;10066:66;10178:2;10174;10170:11;10164:18;10159:2;10152:5;10148:14;10141:42;10229:2;10225;10221:11;10215:18;10210:2;10203:5;10199:14;10192:42;10281:3;10277:2;10273:12;10267:19;10261:3;10254:5;10250:15;10243:44;10326:3;10322:2;10318:12;10312:19;10356:2;10346:8;10343:16;10340:36;;;10372:1;10369;10362:12;10340:36;10409:56;10457:7;10446:8;10442:2;10438:17;10409:56;:::i;:::-;10403:3;10392:15;;10385:81;-1:-1:-1;10396:5:115;9514:982;-1:-1:-1;;;;;9514:982:115:o;10501:127::-;10562:10;10557:3;10553:20;10550:1;10543:31;10593:4;10590:1;10583:15;10617:4;10614:1;10607:15;10633:423;10829:25;;;10817:2;10802:18;;10884:1;10873:13;;10863:144;;10929:10;10924:3;10920:20;10917:1;10910:31;10964:4;10961:1;10954:15;10992:4;10989:1;10982:15;10863:144;11043:6;11038:2;11027:9;11023:18;11016:34;10633:423;;;;;:::o;11061:380::-;11140:1;11136:12;;;;11183;;;11204:61;;11258:4;11250:6;11246:17;11236:27;;11204:61;11311:2;11303:6;11300:14;11280:18;11277:38;11274:161;;11357:10;11352:3;11348:20;11345:1;11338:31;11392:4;11389:1;11382:15;11420:4;11417:1;11410:15;11274:161;;11061:380;;;:::o;11725:384::-;-1:-1:-1;;;;;;11910:33:115;;11898:46;;11967:13;;11880:3;;11989:74;11967:13;12052:1;12043:11;;12036:4;12024:17;;11989:74;:::i;:::-;12083:16;;;;12101:1;12079:24;;11725:384;-1:-1:-1;;;11725:384:115:o;12114:287::-;12243:3;12281:6;12275:13;12297:66;12356:6;12351:3;12344:4;12336:6;12332:17;12297:66;:::i;:::-;12379:16;;;;;12114:287;-1:-1:-1;;12114:287:115:o;12973:348::-;13203:2;13192:9;13185:21;13166:4;13223:49;13268:2;13257:9;13253:18;12886:2;12874:15;;-1:-1:-1;;;12914:4:115;12905:14;;12898:36;12959:2;12950:12;;12809:159;13223:49;13215:57;;13308:6;13303:2;13292:9;13288:18;13281:34;12973:348;;;;:::o;13490:::-;13720:2;13709:9;13702:21;13683:4;13740:49;13785:2;13774:9;13770:18;13403:2;13391:15;;-1:-1:-1;;;13431:4:115;13422:14;;13415:36;13476:2;13467:12;;13326:159;14246:440;14496:2;14485:9;14478:21;14459:4;14522:49;14567:2;14556:9;14552:18;12886:2;12874:15;;-1:-1:-1;;;12914:4:115;12905:14;;12898:36;12959:2;12950:12;;12809:159;14522:49;14619:9;14611:6;14607:22;14602:2;14591:9;14587:18;14580:50;14647:33;14673:6;14665;14647:33;:::i;:::-;14639:41;14246:440;-1:-1:-1;;;;14246:440:115:o;14691:::-;14941:2;14930:9;14923:21;14904:4;14967:49;15012:2;15001:9;14997:18;13403:2;13391:15;;-1:-1:-1;;;13431:4:115;13422:14;;13415:36;13476:2;13467:12;;13326:159",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_isCancelable()": "417c7f77"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_isCancelable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/arranger-conduit/ViewFunctions.t.sol\":\"ArrangerConduit_IsCancelableTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":dss-allocator/=lib/dss-allocator/\",\":dss-interfaces/=lib/dss-test/lib/dss-interfaces/src/\",\":dss-test/=lib/dss-test/src/\",\":forge-std/=lib/forge-std/src/\",\":mock-erc20/=lib/mock-erc20/\",\":upgradeable-proxy/=lib/upgradeable-proxy/src/\"]},\"sources\":{\"lib/dss-allocator/src/AllocatorRegistry.sol\":{\"keccak256\":\"0xcbcfba4476ddc46500eee318971b06a6760d6113ef19a4a443a07682b0a5af02\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://6a030e626a65a7bcd3dc2f5401cf4a7fd6c95c2da19775ddc0fc1fd44d0ec782\",\"dweb:/ipfs/QmazjKX5sGzrLEUifUgKq4BQLzrZRyieqZ3fesTEj4Khto\"]},\"lib/dss-allocator/src/AllocatorRoles.sol\":{\"keccak256\":\"0x933e6872d6076a33c690521b1b23dd9da06ce83ebb2a8932052f69641414d470\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://d91eb943c8b8afa41a112d5284f9a9cdb1eaca1937c391e1e23b9b2ab2c0e155\",\"dweb:/ipfs/QmT5hxV2fVSuJ8KxmKFEe82cq18ndJ3ScTQc3HCpkQ1nXU\"]},\"lib/dss-allocator/src/interfaces/IAllocatorConduit.sol\":{\"keccak256\":\"0x0cae7155239f95952ccd98619b5cd007ddfef2a6113d1545dab5ef95099fee92\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://813e04c903eb1dfbf6338419290869498b1fb79fba3fe8d5a401453f21cb4df8\",\"dweb:/ipfs/QmfY9SP2wKeJmsW5diAhgyMiqfjwvUZEGPymFyB5ZCMj57\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x51e6eb138fc953fac1ac78012a39b3f16d9289ce06a222ba93bb0621768f96e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653c577e054cf578594148a07b286571d494f401b6d4a940d3ccabd47b29233d\",\"dweb:/ipfs/QmTWDVvR4m82MGXWYY8BCaVN89TguQJSLqRgzHzrMkFHtx\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x43d853d6dd3c3f3d5a614a25f4553e2d4b719426a9eb2e8e433155306a5fdc02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9dc16367f2391bf642f3762bfde686c643a08e8712ce56ad1026eb397247428e\",\"dweb:/ipfs/QmTpEko9tKnBbJNQw7T1oGoa4Gyfh6y28JbNdrQQXKUNAb\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xf5762db8ef95099bbe77578cd9349511ed77f4dd63ec98cc6b7cd711447830c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6b0360806a9804eac0f7e07492b5db9c4953c521dabb9a11b17dd610d5b804c\",\"dweb:/ipfs/QmUFozSt3W7drBRdm1cdRow61EABqSLJtkvYZXWmoHUPss\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xf3b62c75cea11a0e8ef8e6526e5e5c74ae47a892b9bcefc0e98d76066e1ffd24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a41faaf836453e02c71fc272c80b3c90a614b30c9ba636512db0d033c7b93beb\",\"dweb:/ipfs/QmeQAreYYaxztQtFLQdHCzCPEorj9T5foSu2hQmxk7xT5x\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xb569d0b4398fad95f508fb854e832143edf69a897af4250f5f60fe195a2066c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84b722ada97ea7bb841cdc0fa556aa36a02ff2d380fa24f6dc0717a71c6d9c7c\",\"dweb:/ipfs/QmfCH9Q4tvJhPM286GFsE4UCP4YncLpRu4Nwa2ZkHdRfbw\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/mock-erc20/src/MockERC20.sol\":{\"keccak256\":\"0xeaa9a7602876e705806bb3cc182729bbc728acc83c0099c6053e29289d83dfd5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9a72c0ad54cf0af24e0d9194bc84e5810759a636a363117998901c788c2ce25d\",\"dweb:/ipfs/QmcUBWUY5q62UHQV8ExJzdUERQD4XWFy6XBvf1eM6D2bfC\"]},\"lib/upgradeable-proxy/src/UpgradeableProxied.sol\":{\"keccak256\":\"0xe365dd9863a55765d667416cee2c0d74e4b382c2cf02ba327e8a63e7ec34e4f0\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://1a1b489b3adebc321c02a2e8e73c0740a3244839c42a29785bfe0e2ea856088c\",\"dweb:/ipfs/Qma2oQnZ3QwCqmfWytux7x2rfVckGVcm8v3YxoFRZGTcai\"]},\"lib/upgradeable-proxy/src/UpgradeableProxy.sol\":{\"keccak256\":\"0x8ccba10fa9edcfe87c059ae42315913b29425635fabe8a6d1b6ec639b199bc41\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://ce4226fe35dffea2399b5ab1909aafa005d0a5d1cfdbdf77b1c406fba2128aff\",\"dweb:/ipfs/QmdYgTwUyFihEmX62LiZ9AeJ4WGQ5c93Qor4gR9p149JpX\"]},\"lib/upgradeable-proxy/src/interfaces/IUpgradeableProxied.sol\":{\"keccak256\":\"0xd5aa4b5f0ab4d9192cba580ee4c34fe08276d80f0b4f70dde4e96b025d4d91a6\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://6730289331a620f2c39814c68c0f4528de6d49be692b30109fa795189a68e6f0\",\"dweb:/ipfs/QmW48izgL6Kf4AgByeRET66RtiTym89FcALSitA78yX6SG\"]},\"lib/upgradeable-proxy/src/interfaces/IUpgradeableProxy.sol\":{\"keccak256\":\"0x9273681de32ac805c7f35f4e999c89836e5ea41d766a87846f9fca023cbe7b20\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://1079c8cc55d498223abc2880a1704827e7282ab2be19e42828c484bee52a7ed4\",\"dweb:/ipfs/QmTk7yPcAmUap1AtYp6H8d9hDt7mQsyjPGcFRD9SVjrWF9\"]},\"src/ArrangerConduit.sol\":{\"keccak256\":\"0xc4a122334206133ecdaf675754cef0e206bde6efaf169e5cf8b4674a9ac1c908\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://fadf42861a00578b35f45ad6b8438a9ea08b74e614b00cacafabd6631f9d98e8\",\"dweb:/ipfs/QmdXUWc4Kg7ZknpTco5cVWRDXZdwc6rTSiQPGMicpaDizd\"]},\"src/interfaces/IArrangerConduit.sol\":{\"keccak256\":\"0xc345897b78141cd981cd1f59737e929d9e4f6ba96f4925ca7048d4e0af9cd27f\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://d2e2cde34d7f698c31aa5d22d53c970d6dcfa4d7ec7c91f09117808b480673d5\",\"dweb:/ipfs/QmSDwKJ4VcJYFGd2JT8bxqZrv1daduBuNnLJ16DgKfLhC8\"]},\"test/arranger-conduit/ArrangerConduitHarness.t.sol\":{\"keccak256\":\"0x0bd85d6fc162d8ed764d489c99d945c17b33ab219681e0c5e3ba26565ec45f70\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://484b46308623715264b725eaec4729ca7a80e2d0d3a4f1d2b32fbafa00522f45\",\"dweb:/ipfs/QmW8hEj3TCC3oebAuhCCwyQiCLV4yC5pS7zj8khxe89eC1\"]},\"test/arranger-conduit/ConduitTestBase.t.sol\":{\"keccak256\":\"0x92db9dc30667e11f5d68fc6d3e0a7029bac63d69dba42bf32bc77187e487744f\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://7c2b854c08df341a1c85412b58c8a9329f5026d7ead2172a52cefdbcde4e28f2\",\"dweb:/ipfs/QmPFkmmN5Lp9Qni75KX21yqa97m7vBhq9JP6oKe1ggXiba\"]},\"test/arranger-conduit/ViewFunctions.t.sol\":{\"keccak256\":\"0x88c59fe1ab952710e57368868f591a2e551d730c3aaf8a547a7f2f211c6a465b\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://fe68543711cb30c1cf6cf77df667663a18840ace28238081205f5b2a57e8b00a\",\"dweb:/ipfs/QmWPmXNCjKjBQBzVuzguc9EnnVsScomRHzjXTQ6JdhUquL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_isCancelable"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":dss-allocator/=lib/dss-allocator/",
        ":dss-interfaces/=lib/dss-test/lib/dss-interfaces/src/",
        ":dss-test/=lib/dss-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":mock-erc20/=lib/mock-erc20/",
        ":upgradeable-proxy/=lib/upgradeable-proxy/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/arranger-conduit/ViewFunctions.t.sol": "ArrangerConduit_IsCancelableTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/dss-allocator/src/AllocatorRegistry.sol": {
        "keccak256": "0xcbcfba4476ddc46500eee318971b06a6760d6113ef19a4a443a07682b0a5af02",
        "urls": [
          "bzz-raw://6a030e626a65a7bcd3dc2f5401cf4a7fd6c95c2da19775ddc0fc1fd44d0ec782",
          "dweb:/ipfs/QmazjKX5sGzrLEUifUgKq4BQLzrZRyieqZ3fesTEj4Khto"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/dss-allocator/src/AllocatorRoles.sol": {
        "keccak256": "0x933e6872d6076a33c690521b1b23dd9da06ce83ebb2a8932052f69641414d470",
        "urls": [
          "bzz-raw://d91eb943c8b8afa41a112d5284f9a9cdb1eaca1937c391e1e23b9b2ab2c0e155",
          "dweb:/ipfs/QmT5hxV2fVSuJ8KxmKFEe82cq18ndJ3ScTQc3HCpkQ1nXU"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/dss-allocator/src/interfaces/IAllocatorConduit.sol": {
        "keccak256": "0x0cae7155239f95952ccd98619b5cd007ddfef2a6113d1545dab5ef95099fee92",
        "urls": [
          "bzz-raw://813e04c903eb1dfbf6338419290869498b1fb79fba3fe8d5a401453f21cb4df8",
          "dweb:/ipfs/QmfY9SP2wKeJmsW5diAhgyMiqfjwvUZEGPymFyB5ZCMj57"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x51e6eb138fc953fac1ac78012a39b3f16d9289ce06a222ba93bb0621768f96e6",
        "urls": [
          "bzz-raw://653c577e054cf578594148a07b286571d494f401b6d4a940d3ccabd47b29233d",
          "dweb:/ipfs/QmTWDVvR4m82MGXWYY8BCaVN89TguQJSLqRgzHzrMkFHtx"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x43d853d6dd3c3f3d5a614a25f4553e2d4b719426a9eb2e8e433155306a5fdc02",
        "urls": [
          "bzz-raw://9dc16367f2391bf642f3762bfde686c643a08e8712ce56ad1026eb397247428e",
          "dweb:/ipfs/QmTpEko9tKnBbJNQw7T1oGoa4Gyfh6y28JbNdrQQXKUNAb"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xf5762db8ef95099bbe77578cd9349511ed77f4dd63ec98cc6b7cd711447830c1",
        "urls": [
          "bzz-raw://a6b0360806a9804eac0f7e07492b5db9c4953c521dabb9a11b17dd610d5b804c",
          "dweb:/ipfs/QmUFozSt3W7drBRdm1cdRow61EABqSLJtkvYZXWmoHUPss"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xf3b62c75cea11a0e8ef8e6526e5e5c74ae47a892b9bcefc0e98d76066e1ffd24",
        "urls": [
          "bzz-raw://a41faaf836453e02c71fc272c80b3c90a614b30c9ba636512db0d033c7b93beb",
          "dweb:/ipfs/QmeQAreYYaxztQtFLQdHCzCPEorj9T5foSu2hQmxk7xT5x"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xb569d0b4398fad95f508fb854e832143edf69a897af4250f5f60fe195a2066c5",
        "urls": [
          "bzz-raw://84b722ada97ea7bb841cdc0fa556aa36a02ff2d380fa24f6dc0717a71c6d9c7c",
          "dweb:/ipfs/QmfCH9Q4tvJhPM286GFsE4UCP4YncLpRu4Nwa2ZkHdRfbw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/mock-erc20/src/MockERC20.sol": {
        "keccak256": "0xeaa9a7602876e705806bb3cc182729bbc728acc83c0099c6053e29289d83dfd5",
        "urls": [
          "bzz-raw://9a72c0ad54cf0af24e0d9194bc84e5810759a636a363117998901c788c2ce25d",
          "dweb:/ipfs/QmcUBWUY5q62UHQV8ExJzdUERQD4XWFy6XBvf1eM6D2bfC"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/upgradeable-proxy/src/UpgradeableProxied.sol": {
        "keccak256": "0xe365dd9863a55765d667416cee2c0d74e4b382c2cf02ba327e8a63e7ec34e4f0",
        "urls": [
          "bzz-raw://1a1b489b3adebc321c02a2e8e73c0740a3244839c42a29785bfe0e2ea856088c",
          "dweb:/ipfs/Qma2oQnZ3QwCqmfWytux7x2rfVckGVcm8v3YxoFRZGTcai"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/upgradeable-proxy/src/UpgradeableProxy.sol": {
        "keccak256": "0x8ccba10fa9edcfe87c059ae42315913b29425635fabe8a6d1b6ec639b199bc41",
        "urls": [
          "bzz-raw://ce4226fe35dffea2399b5ab1909aafa005d0a5d1cfdbdf77b1c406fba2128aff",
          "dweb:/ipfs/QmdYgTwUyFihEmX62LiZ9AeJ4WGQ5c93Qor4gR9p149JpX"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/upgradeable-proxy/src/interfaces/IUpgradeableProxied.sol": {
        "keccak256": "0xd5aa4b5f0ab4d9192cba580ee4c34fe08276d80f0b4f70dde4e96b025d4d91a6",
        "urls": [
          "bzz-raw://6730289331a620f2c39814c68c0f4528de6d49be692b30109fa795189a68e6f0",
          "dweb:/ipfs/QmW48izgL6Kf4AgByeRET66RtiTym89FcALSitA78yX6SG"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/upgradeable-proxy/src/interfaces/IUpgradeableProxy.sol": {
        "keccak256": "0x9273681de32ac805c7f35f4e999c89836e5ea41d766a87846f9fca023cbe7b20",
        "urls": [
          "bzz-raw://1079c8cc55d498223abc2880a1704827e7282ab2be19e42828c484bee52a7ed4",
          "dweb:/ipfs/QmTk7yPcAmUap1AtYp6H8d9hDt7mQsyjPGcFRD9SVjrWF9"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/ArrangerConduit.sol": {
        "keccak256": "0xc4a122334206133ecdaf675754cef0e206bde6efaf169e5cf8b4674a9ac1c908",
        "urls": [
          "bzz-raw://fadf42861a00578b35f45ad6b8438a9ea08b74e614b00cacafabd6631f9d98e8",
          "dweb:/ipfs/QmdXUWc4Kg7ZknpTco5cVWRDXZdwc6rTSiQPGMicpaDizd"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/interfaces/IArrangerConduit.sol": {
        "keccak256": "0xc345897b78141cd981cd1f59737e929d9e4f6ba96f4925ca7048d4e0af9cd27f",
        "urls": [
          "bzz-raw://d2e2cde34d7f698c31aa5d22d53c970d6dcfa4d7ec7c91f09117808b480673d5",
          "dweb:/ipfs/QmSDwKJ4VcJYFGd2JT8bxqZrv1daduBuNnLJ16DgKfLhC8"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "test/arranger-conduit/ArrangerConduitHarness.t.sol": {
        "keccak256": "0x0bd85d6fc162d8ed764d489c99d945c17b33ab219681e0c5e3ba26565ec45f70",
        "urls": [
          "bzz-raw://484b46308623715264b725eaec4729ca7a80e2d0d3a4f1d2b32fbafa00522f45",
          "dweb:/ipfs/QmW8hEj3TCC3oebAuhCCwyQiCLV4yC5pS7zj8khxe89eC1"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "test/arranger-conduit/ConduitTestBase.t.sol": {
        "keccak256": "0x92db9dc30667e11f5d68fc6d3e0a7029bac63d69dba42bf32bc77187e487744f",
        "urls": [
          "bzz-raw://7c2b854c08df341a1c85412b58c8a9329f5026d7ead2172a52cefdbcde4e28f2",
          "dweb:/ipfs/QmPFkmmN5Lp9Qni75KX21yqa97m7vBhq9JP6oKe1ggXiba"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "test/arranger-conduit/ViewFunctions.t.sol": {
        "keccak256": "0x88c59fe1ab952710e57368868f591a2e551d730c3aaf8a547a7f2f211c6a465b",
        "urls": [
          "bzz-raw://fe68543711cb30c1cf6cf77df667663a18840ace28238081205f5b2a57e8b00a",
          "dweb:/ipfs/QmWPmXNCjKjBQBzVuzguc9EnnVsScomRHzjXTQ6JdhUquL"
        ],
        "license": "AGPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/arranger-conduit/ViewFunctions.t.sol",
    "id": 64805,
    "exportedSymbols": {
      "ArrangerConduitHarness": [
        57281
      ],
      "ArrangerConduit_IsCancelableTest": [
        64804
      ],
      "ArrangerConduit_MaxDepositTests": [
        64562
      ],
      "ConduitAssetTestBase": [
        58353
      ],
      "ConduitTestBase": [
        58036
      ],
      "IArrangerConduit": [
        57105
      ],
      "MockERC20": [
        55531
      ],
      "Test": [
        24276
      ],
      "UpgradeableProxy": [
        55663
      ],
      "console": [
        41992
      ]
    },
    "nodeType": "SourceUnit",
    "src": "46:2581:112",
    "nodes": [
      {
        "id": 64523,
        "nodeType": "PragmaDirective",
        "src": "46:24:112",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 64525,
        "nodeType": "ImportDirective",
        "src": "72:88:112",
        "nodes": [],
        "absolutePath": "lib/upgradeable-proxy/src/UpgradeableProxy.sol",
        "file": "../../lib/upgradeable-proxy/src/UpgradeableProxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64805,
        "sourceUnit": 55664,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64524,
              "name": "UpgradeableProxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55663,
              "src": "81:16:112",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64527,
        "nodeType": "ImportDirective",
        "src": "162:75:112",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console2.sol",
        "file": "../../lib/forge-std/src/console2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64805,
        "sourceUnit": 41993,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64526,
              "name": "console2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41992,
              "src": "171:8:112",
              "typeDescriptions": {}
            },
            "local": "console",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64529,
        "nodeType": "ImportDirective",
        "src": "238:71:112",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "../../lib/forge-std/src/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64805,
        "sourceUnit": 24277,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64528,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24276,
              "src": "247:4:112",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64531,
        "nodeType": "ImportDirective",
        "src": "311:67:112",
        "nodes": [],
        "absolutePath": "lib/mock-erc20/src/MockERC20.sol",
        "file": "../../lib/mock-erc20/src/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64805,
        "sourceUnit": 55532,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64530,
              "name": "MockERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55531,
              "src": "320:9:112",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64533,
        "nodeType": "ImportDirective",
        "src": "380:77:112",
        "nodes": [],
        "absolutePath": "src/interfaces/IArrangerConduit.sol",
        "file": "../../src/interfaces/IArrangerConduit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64805,
        "sourceUnit": 57106,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64532,
              "name": "IArrangerConduit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 57105,
              "src": "389:16:112",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64535,
        "nodeType": "ImportDirective",
        "src": "459:72:112",
        "nodes": [],
        "absolutePath": "test/arranger-conduit/ArrangerConduitHarness.t.sol",
        "file": "./ArrangerConduitHarness.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64805,
        "sourceUnit": 57282,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64534,
              "name": "ArrangerConduitHarness",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 57281,
              "src": "468:22:112",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64538,
        "nodeType": "ImportDirective",
        "src": "533:80:112",
        "nodes": [],
        "absolutePath": "test/arranger-conduit/ConduitTestBase.t.sol",
        "file": "./ConduitTestBase.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64805,
        "sourceUnit": 58354,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64536,
              "name": "ConduitTestBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 58036,
              "src": "542:15:112",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 64537,
              "name": "ConduitAssetTestBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 58353,
              "src": "559:20:112",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64562,
        "nodeType": "ContractDefinition",
        "src": "615:216:112",
        "nodes": [
          {
            "id": 64561,
            "nodeType": "FunctionDefinition",
            "src": "682:146:112",
            "nodes": [],
            "body": {
              "id": 64560,
              "nodeType": "Block",
              "src": "752:76:112",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64550,
                            "name": "ilk",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64542,
                            "src": "790:3:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 64551,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64544,
                            "src": "795:5:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 64548,
                            "name": "conduit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57966,
                            "src": "771:7:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ArrangerConduit_$56478",
                              "typeString": "contract ArrangerConduit"
                            }
                          },
                          "id": 64549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "779:10:112",
                          "memberName": "maxDeposit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56434,
                          "src": "771:18:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_bytes32_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (bytes32,address) pure external returns (uint256)"
                          }
                        },
                        "id": 64552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "771:30:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 64555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "808:7:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 64554,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "808:7:112",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 64553,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "803:4:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 64556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "803:13:112",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 64557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "817:3:112",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "803:17:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 64547,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15157,
                        15182,
                        15195,
                        15211,
                        15253,
                        15295,
                        15337,
                        15374,
                        15411,
                        15448,
                        12992,
                        13017,
                        13047,
                        13072,
                        13131,
                        13156,
                        13186,
                        13211,
                        14684,
                        14719
                      ],
                      "referencedDeclaration": 13186,
                      "src": "762:8:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 64558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "762:59:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64559,
                  "nodeType": "ExpressionStatement",
                  "src": "762:59:112"
                }
              ]
            },
            "functionSelector": "30f8f373",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFuzz_maxDepositTest",
            "nameLocation": "691:23:112",
            "parameters": {
              "id": 64545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64542,
                  "mutability": "mutable",
                  "name": "ilk",
                  "nameLocation": "723:3:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 64561,
                  "src": "715:11:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 64541,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "715:7:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64544,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "736:5:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 64561,
                  "src": "728:13:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64543,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "728:7:112",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "714:28:112"
            },
            "returnParameters": {
              "id": 64546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "752:0:112"
            },
            "scope": 64562,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 64539,
              "name": "ConduitTestBase",
              "nameLocations": [
                "659:15:112"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 58036,
              "src": "659:15:112"
            },
            "id": 64540,
            "nodeType": "InheritanceSpecifier",
            "src": "659:15:112"
          }
        ],
        "canonicalName": "ArrangerConduit_MaxDepositTests",
        "contractDependencies": [
          125,
          498,
          55663,
          56478
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          64562,
          58036,
          24276,
          15029,
          15026,
          24225,
          19983,
          19693,
          18929,
          17149,
          16456,
          14963
        ],
        "name": "ArrangerConduit_MaxDepositTests",
        "nameLocation": "624:31:112",
        "scope": 64805,
        "usedErrors": [],
        "usedEvents": [
          12677,
          12681,
          12685,
          12689,
          12693,
          12697,
          12701,
          12705,
          12711,
          12717,
          12725,
          12733,
          12739,
          12745,
          12751,
          12757,
          15051,
          15056,
          15061,
          15068,
          15075,
          15082
        ]
      },
      {
        "id": 64804,
        "nodeType": "ContractDefinition",
        "src": "833:1793:112",
        "nodes": [
          {
            "id": 64567,
            "nodeType": "VariableDeclaration",
            "src": "906:37:112",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "conduitHarness",
            "nameLocation": "929:14:112",
            "scope": 64804,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
              "typeString": "contract ArrangerConduitHarness"
            },
            "typeName": {
              "id": 64566,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 64565,
                "name": "ArrangerConduitHarness",
                "nameLocations": [
                  "906:22:112"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 57281,
                "src": "906:22:112"
              },
              "referencedDeclaration": 57281,
              "src": "906:22:112",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                "typeString": "contract ArrangerConduitHarness"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 64690,
            "nodeType": "FunctionDefinition",
            "src": "950:858:112",
            "nodes": [],
            "body": {
              "id": 64689,
              "nodeType": "Block",
              "src": "983:825:112",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    64573
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64573,
                      "mutability": "mutable",
                      "name": "conduitProxy",
                      "nameLocation": "1017:12:112",
                      "nodeType": "VariableDeclaration",
                      "scope": 64689,
                      "src": "993:36:112",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UpgradeableProxy_$55663",
                        "typeString": "contract UpgradeableProxy"
                      },
                      "typeName": {
                        "id": 64572,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 64571,
                          "name": "UpgradeableProxy",
                          "nameLocations": [
                            "993:16:112"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 55663,
                          "src": "993:16:112"
                        },
                        "referencedDeclaration": 55663,
                        "src": "993:16:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UpgradeableProxy_$55663",
                          "typeString": "contract UpgradeableProxy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64578,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 64576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1041:20:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UpgradeableProxy_$55663_$",
                        "typeString": "function () returns (contract UpgradeableProxy)"
                      },
                      "typeName": {
                        "id": 64575,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 64574,
                          "name": "UpgradeableProxy",
                          "nameLocations": [
                            "1045:16:112"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 55663,
                          "src": "1045:16:112"
                        },
                        "referencedDeclaration": 55663,
                        "src": "1045:16:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UpgradeableProxy_$55663",
                          "typeString": "contract UpgradeableProxy"
                        }
                      }
                    },
                    "id": 64577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1041:22:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UpgradeableProxy_$55663",
                      "typeString": "contract UpgradeableProxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "993:70:112"
                },
                {
                  "assignments": [
                    64581
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64581,
                      "mutability": "mutable",
                      "name": "conduitImplementation",
                      "nameLocation": "1097:21:112",
                      "nodeType": "VariableDeclaration",
                      "scope": 64689,
                      "src": "1073:45:112",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                        "typeString": "contract ArrangerConduitHarness"
                      },
                      "typeName": {
                        "id": 64580,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 64579,
                          "name": "ArrangerConduitHarness",
                          "nameLocations": [
                            "1073:22:112"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 57281,
                          "src": "1073:22:112"
                        },
                        "referencedDeclaration": 57281,
                        "src": "1073:22:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                          "typeString": "contract ArrangerConduitHarness"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64586,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 64584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1121:26:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ArrangerConduitHarness_$57281_$",
                        "typeString": "function () returns (contract ArrangerConduitHarness)"
                      },
                      "typeName": {
                        "id": 64583,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 64582,
                          "name": "ArrangerConduitHarness",
                          "nameLocations": [
                            "1125:22:112"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 57281,
                          "src": "1125:22:112"
                        },
                        "referencedDeclaration": 57281,
                        "src": "1125:22:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                          "typeString": "contract ArrangerConduitHarness"
                        }
                      }
                    },
                    "id": 64585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1121:28:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                      "typeString": "contract ArrangerConduitHarness"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1073:76:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64592,
                            "name": "conduitImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64581,
                            "src": "1199:21:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                              "typeString": "contract ArrangerConduitHarness"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                              "typeString": "contract ArrangerConduitHarness"
                            }
                          ],
                          "id": 64591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1191:7:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64590,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1191:7:112",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1191:30:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 64587,
                        "name": "conduitProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64573,
                        "src": "1160:12:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UpgradeableProxy_$55663",
                          "typeString": "contract UpgradeableProxy"
                        }
                      },
                      "id": 64589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1173:17:112",
                      "memberName": "setImplementation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55644,
                      "src": "1160:30:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 64594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1160:62:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64595,
                  "nodeType": "ExpressionStatement",
                  "src": "1160:62:112"
                },
                {
                  "expression": {
                    "id": 64603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64596,
                      "name": "conduitHarness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64567,
                      "src": "1233:14:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                        "typeString": "contract ArrangerConduitHarness"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 64600,
                              "name": "conduitProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64573,
                              "src": "1281:12:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_UpgradeableProxy_$55663",
                                "typeString": "contract UpgradeableProxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_UpgradeableProxy_$55663",
                                "typeString": "contract UpgradeableProxy"
                              }
                            ],
                            "id": 64599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1273:7:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 64598,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1273:7:112",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 64601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1273:21:112",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 64597,
                        "name": "ArrangerConduitHarness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57281,
                        "src": "1250:22:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ArrangerConduitHarness_$57281_$",
                          "typeString": "type(contract ArrangerConduitHarness)"
                        }
                      },
                      "id": 64602,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1250:45:112",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                        "typeString": "contract ArrangerConduitHarness"
                      }
                    },
                    "src": "1233:62:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                      "typeString": "contract ArrangerConduitHarness"
                    }
                  },
                  "id": 64604,
                  "nodeType": "ExpressionStatement",
                  "src": "1233:62:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64608,
                        "name": "ilk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58044,
                        "src": "1320:3:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "627566666572",
                        "id": 64609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1325:8:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9fcef596d62dca8e51b6ba3414901947c0e6821d4483b2f3327ce87c2d4e662e",
                          "typeString": "literal_string \"buffer\""
                        },
                        "value": "buffer"
                      },
                      {
                        "arguments": [
                          {
                            "id": 64612,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1343:4:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ArrangerConduit_IsCancelableTest_$64804",
                              "typeString": "contract ArrangerConduit_IsCancelableTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ArrangerConduit_IsCancelableTest_$64804",
                              "typeString": "contract ArrangerConduit_IsCancelableTest"
                            }
                          ],
                          "id": 64611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1335:7:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64610,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1335:7:112",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1335:13:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9fcef596d62dca8e51b6ba3414901947c0e6821d4483b2f3327ce87c2d4e662e",
                          "typeString": "literal_string \"buffer\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 64605,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57956,
                        "src": "1306:8:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AllocatorRegistry_$125",
                          "typeString": "contract AllocatorRegistry"
                        }
                      },
                      "id": 64607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1315:4:112",
                      "memberName": "file",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 124,
                      "src": "1306:13:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address) external"
                      }
                    },
                    "id": 64614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1306:43:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64615,
                  "nodeType": "ExpressionStatement",
                  "src": "1306:43:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7265676973747279",
                        "id": 64619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1380:10:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d1adaede68d344519025e2ff574650cd99d3830fe6d274c7a7843cdc00e17938",
                          "typeString": "literal_string \"registry\""
                        },
                        "value": "registry"
                      },
                      {
                        "arguments": [
                          {
                            "id": 64622,
                            "name": "registry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57956,
                            "src": "1400:8:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AllocatorRegistry_$125",
                              "typeString": "contract AllocatorRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AllocatorRegistry_$125",
                              "typeString": "contract AllocatorRegistry"
                            }
                          ],
                          "id": 64621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1392:7:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64620,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1392:7:112",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1392:17:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d1adaede68d344519025e2ff574650cd99d3830fe6d274c7a7843cdc00e17938",
                          "typeString": "literal_string \"registry\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 64616,
                        "name": "conduitHarness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64567,
                        "src": "1360:14:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                          "typeString": "contract ArrangerConduitHarness"
                        }
                      },
                      "id": 64618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1375:4:112",
                      "memberName": "file",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55924,
                      "src": "1360:19:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 64624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1360:50:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64625,
                  "nodeType": "ExpressionStatement",
                  "src": "1360:50:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "726f6c6573",
                        "id": 64629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1440:7:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de9bdca322e1a848f72215bc15cf2c87fe7749145789a9ee281a2a6290af26ab",
                          "typeString": "literal_string \"roles\""
                        },
                        "value": "roles"
                      },
                      {
                        "arguments": [
                          {
                            "id": 64632,
                            "name": "roles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57963,
                            "src": "1459:5:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AllocatorRoles_$498",
                              "typeString": "contract AllocatorRoles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AllocatorRoles_$498",
                              "typeString": "contract AllocatorRoles"
                            }
                          ],
                          "id": 64631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1451:7:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64630,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1451:7:112",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1451:14:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_de9bdca322e1a848f72215bc15cf2c87fe7749145789a9ee281a2a6290af26ab",
                          "typeString": "literal_string \"roles\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 64626,
                        "name": "conduitHarness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64567,
                        "src": "1420:14:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                          "typeString": "contract ArrangerConduitHarness"
                        }
                      },
                      "id": 64628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1435:4:112",
                      "memberName": "file",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55924,
                      "src": "1420:19:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 64634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1420:46:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64635,
                  "nodeType": "ExpressionStatement",
                  "src": "1420:46:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64639,
                        "name": "ilk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58044,
                        "src": "1495:3:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64642,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1508:4:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ArrangerConduit_IsCancelableTest_$64804",
                              "typeString": "contract ArrangerConduit_IsCancelableTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ArrangerConduit_IsCancelableTest_$64804",
                              "typeString": "contract ArrangerConduit_IsCancelableTest"
                            }
                          ],
                          "id": 64641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1500:7:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64640,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1500:7:112",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1500:13:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 64636,
                        "name": "roles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57963,
                        "src": "1477:5:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AllocatorRoles_$498",
                          "typeString": "contract AllocatorRoles"
                        }
                      },
                      "id": 64638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1483:11:112",
                      "memberName": "setIlkAdmin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 343,
                      "src": "1477:17:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 64644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1477:37:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64645,
                  "nodeType": "ExpressionStatement",
                  "src": "1477:37:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64649,
                        "name": "ilk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58044,
                        "src": "1542:3:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64652,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1555:4:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ArrangerConduit_IsCancelableTest_$64804",
                              "typeString": "contract ArrangerConduit_IsCancelableTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ArrangerConduit_IsCancelableTest_$64804",
                              "typeString": "contract ArrangerConduit_IsCancelableTest"
                            }
                          ],
                          "id": 64651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1547:7:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64650,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1547:7:112",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1547:13:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 64654,
                        "name": "ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58041,
                        "src": "1562:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 64655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1568:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 64646,
                        "name": "roles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57963,
                        "src": "1524:5:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AllocatorRoles_$498",
                          "typeString": "contract AllocatorRoles"
                        }
                      },
                      "id": 64648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1530:11:112",
                      "memberName": "setUserRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 399,
                      "src": "1524:17:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_uint8_$_t_bool_$returns$__$",
                        "typeString": "function (bytes32,address,uint8,bool) external"
                      }
                    },
                    "id": 64656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1524:49:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64657,
                  "nodeType": "ExpressionStatement",
                  "src": "1524:49:112"
                },
                {
                  "assignments": [
                    64659
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64659,
                      "mutability": "mutable",
                      "name": "conduit_",
                      "nameLocation": "1592:8:112",
                      "nodeType": "VariableDeclaration",
                      "scope": 64689,
                      "src": "1584:16:112",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 64658,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1584:7:112",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64664,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 64662,
                        "name": "conduitHarness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64567,
                        "src": "1611:14:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                          "typeString": "contract ArrangerConduitHarness"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                          "typeString": "contract ArrangerConduitHarness"
                        }
                      ],
                      "id": 64661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1603:7:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 64660,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1603:7:112",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 64663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1603:23:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1584:42:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64668,
                        "name": "ilk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58044,
                        "src": "1657:3:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 64669,
                        "name": "ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58041,
                        "src": "1662:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 64670,
                        "name": "conduit_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64659,
                        "src": "1668:8:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 64671,
                            "name": "conduit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57966,
                            "src": "1678:7:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ArrangerConduit_$56478",
                              "typeString": "contract ArrangerConduit"
                            }
                          },
                          "id": 64672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1686:7:112",
                          "memberName": "deposit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55983,
                          "src": "1678:15:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (bytes32,address,uint256) external"
                          }
                        },
                        "id": 64673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1694:8:112",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "1678:24:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 64674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1709:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 64665,
                        "name": "roles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57963,
                        "src": "1637:5:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AllocatorRoles_$498",
                          "typeString": "contract AllocatorRoles"
                        }
                      },
                      "id": 64667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1643:13:112",
                      "memberName": "setRoleAction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 462,
                      "src": "1637:19:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint8_$_t_address_$_t_bytes4_$_t_bool_$returns$__$",
                        "typeString": "function (bytes32,uint8,address,bytes4,bool) external"
                      }
                    },
                    "id": 64675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1637:77:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64676,
                  "nodeType": "ExpressionStatement",
                  "src": "1637:77:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64680,
                        "name": "ilk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58044,
                        "src": "1744:3:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 64681,
                        "name": "ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58041,
                        "src": "1749:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 64682,
                        "name": "conduit_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64659,
                        "src": "1755:8:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 64683,
                            "name": "conduit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57966,
                            "src": "1765:7:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ArrangerConduit_$56478",
                              "typeString": "contract ArrangerConduit"
                            }
                          },
                          "id": 64684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1773:12:112",
                          "memberName": "requestFunds",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56130,
                          "src": "1765:20:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (bytes32,address,uint256,string memory) external returns (uint256)"
                          }
                        },
                        "id": 64685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1786:8:112",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "1765:29:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 64686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1796:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 64677,
                        "name": "roles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57963,
                        "src": "1724:5:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AllocatorRoles_$498",
                          "typeString": "contract AllocatorRoles"
                        }
                      },
                      "id": 64679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1730:13:112",
                      "memberName": "setRoleAction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 462,
                      "src": "1724:19:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint8_$_t_address_$_t_bytes4_$_t_bool_$returns$__$",
                        "typeString": "function (bytes32,uint8,address,bytes4,bool) external"
                      }
                    },
                    "id": 64687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1724:77:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64688,
                  "nodeType": "ExpressionStatement",
                  "src": "1724:77:112"
                }
              ]
            },
            "baseFunctions": [
              58083
            ],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "959:5:112",
            "overrides": {
              "id": 64569,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "974:8:112"
            },
            "parameters": {
              "id": 64568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "964:2:112"
            },
            "returnParameters": {
              "id": 64570,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "983:0:112"
            },
            "scope": 64804,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64803,
            "nodeType": "FunctionDefinition",
            "src": "1814:809:112",
            "nodes": [],
            "body": {
              "id": 64802,
              "nodeType": "Block",
              "src": "1852:771:112",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64698,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1881:4:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ArrangerConduit_IsCancelableTest_$64804",
                              "typeString": "contract ArrangerConduit_IsCancelableTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ArrangerConduit_IsCancelableTest_$64804",
                              "typeString": "contract ArrangerConduit_IsCancelableTest"
                            }
                          ],
                          "id": 64697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1873:7:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64696,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1873:7:112",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1873:13:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 64700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1888:3:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 64693,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58054,
                        "src": "1862:5:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$55531",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 64695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1868:4:112",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55399,
                      "src": "1862:10:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 64701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1862:30:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64702,
                  "nodeType": "ExpressionStatement",
                  "src": "1862:30:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64708,
                            "name": "conduitHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64567,
                            "src": "1924:14:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                              "typeString": "contract ArrangerConduitHarness"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                              "typeString": "contract ArrangerConduitHarness"
                            }
                          ],
                          "id": 64707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1916:7:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64706,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1916:7:112",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1916:23:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 64710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1941:3:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 64703,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58054,
                        "src": "1902:5:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$55531",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 64705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1908:7:112",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55291,
                      "src": "1902:13:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 64711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1902:43:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64712,
                  "nodeType": "ExpressionStatement",
                  "src": "1902:43:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64716,
                        "name": "ilk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58044,
                        "src": "1979:3:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64719,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58054,
                            "src": "1992:5:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$55531",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$55531",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 64718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1984:7:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64717,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1984:7:112",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1984:14:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 64721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2000:3:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 64713,
                        "name": "conduitHarness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64567,
                        "src": "1956:14:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                          "typeString": "contract ArrangerConduitHarness"
                        }
                      },
                      "id": 64715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1971:7:112",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55983,
                      "src": "1956:22:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,uint256) external"
                      }
                    },
                    "id": 64722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1956:48:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64723,
                  "nodeType": "ExpressionStatement",
                  "src": "1956:48:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64727,
                        "name": "ilk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58044,
                        "src": "2043:3:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64730,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58054,
                            "src": "2056:5:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$55531",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$55531",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 64729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2048:7:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64728,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2048:7:112",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2048:14:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 64732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2064:3:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "696e666f",
                        "id": 64733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2069:6:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_238910e76b65ab3d595d5ac2cbe9ea0ecdd834bdfe340c701769965ea9ffd066",
                          "typeString": "literal_string \"info\""
                        },
                        "value": "info"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_238910e76b65ab3d595d5ac2cbe9ea0ecdd834bdfe340c701769965ea9ffd066",
                          "typeString": "literal_string \"info\""
                        }
                      ],
                      "expression": {
                        "id": 64724,
                        "name": "conduitHarness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64567,
                        "src": "2015:14:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                          "typeString": "contract ArrangerConduitHarness"
                        }
                      },
                      "id": 64726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2030:12:112",
                      "memberName": "requestFunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56130,
                      "src": "2015:27:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (bytes32,address,uint256,string memory) external returns (uint256)"
                      }
                    },
                    "id": 64734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2015:61:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 64735,
                  "nodeType": "ExpressionStatement",
                  "src": "2015:61:112"
                },
                {
                  "assignments": [
                    64740
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64740,
                      "mutability": "mutable",
                      "name": "fundRequest",
                      "nameLocation": "2123:11:112",
                      "nodeType": "VariableDeclaration",
                      "scope": 64802,
                      "src": "2087:47:112",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FundRequest_$56933_memory_ptr",
                        "typeString": "struct IArrangerConduit.FundRequest"
                      },
                      "typeName": {
                        "id": 64739,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 64738,
                          "name": "IArrangerConduit.FundRequest",
                          "nameLocations": [
                            "2087:16:112",
                            "2104:11:112"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 56933,
                          "src": "2087:28:112"
                        },
                        "referencedDeclaration": 56933,
                        "src": "2087:28:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FundRequest_$56933_storage_ptr",
                          "typeString": "struct IArrangerConduit.FundRequest"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64745,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 64743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2167:1:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 64741,
                        "name": "conduitHarness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64567,
                        "src": "2137:14:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                          "typeString": "contract ArrangerConduitHarness"
                        }
                      },
                      "id": 64742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2152:14:112",
                      "memberName": "getFundRequest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56384,
                      "src": "2137:29:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_FundRequest_$56933_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct IArrangerConduit.FundRequest memory)"
                      }
                    },
                    "id": 64744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2137:32:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FundRequest_$56933_memory_ptr",
                      "typeString": "struct IArrangerConduit.FundRequest memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2087:82:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 64749,
                              "name": "fundRequest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64740,
                              "src": "2197:11:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FundRequest_$56933_memory_ptr",
                                "typeString": "struct IArrangerConduit.FundRequest memory"
                              }
                            },
                            "id": 64750,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2209:6:112",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 56922,
                            "src": "2197:18:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_StatusEnum_$56939",
                              "typeString": "enum IArrangerConduit.StatusEnum"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_StatusEnum_$56939",
                              "typeString": "enum IArrangerConduit.StatusEnum"
                            }
                          ],
                          "id": 64748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2189:7:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 64747,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2189:7:112",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2189:27:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 64754,
                                "name": "IArrangerConduit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57105,
                                "src": "2226:16:112",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IArrangerConduit_$57105_$",
                                  "typeString": "type(contract IArrangerConduit)"
                                }
                              },
                              "id": 64755,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2243:10:112",
                              "memberName": "StatusEnum",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 56939,
                              "src": "2226:27:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_StatusEnum_$56939_$",
                                "typeString": "type(enum IArrangerConduit.StatusEnum)"
                              }
                            },
                            "id": 64756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2254:7:112",
                            "memberName": "PENDING",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 56936,
                            "src": "2226:35:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_StatusEnum_$56939",
                              "typeString": "enum IArrangerConduit.StatusEnum"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_StatusEnum_$56939",
                              "typeString": "enum IArrangerConduit.StatusEnum"
                            }
                          ],
                          "id": 64753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2218:7:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 64752,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2218:7:112",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2218:44:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 64746,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15157,
                        15182,
                        15195,
                        15211,
                        15253,
                        15295,
                        15337,
                        15374,
                        15411,
                        15448,
                        12992,
                        13017,
                        13047,
                        13072,
                        13131,
                        13156,
                        13186,
                        13211,
                        14684,
                        14719
                      ],
                      "referencedDeclaration": 13186,
                      "src": "2180:8:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 64758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2180:83:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64759,
                  "nodeType": "ExpressionStatement",
                  "src": "2180:83:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 64763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2311:1:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 64761,
                            "name": "conduitHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64567,
                            "src": "2283:14:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                              "typeString": "contract ArrangerConduitHarness"
                            }
                          },
                          "id": 64762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2298:12:112",
                          "memberName": "isCancelable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56415,
                          "src": "2283:27:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view external returns (bool)"
                          }
                        },
                        "id": 64764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2283:30:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 64765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2315:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 64760,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15157,
                        15182,
                        15195,
                        15211,
                        15253,
                        15295,
                        15337,
                        15374,
                        15411,
                        15448,
                        12992,
                        13017,
                        13047,
                        13072,
                        13131,
                        13156,
                        13186,
                        13211,
                        14684,
                        14719
                      ],
                      "referencedDeclaration": 15157,
                      "src": "2274:8:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 64766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2274:46:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64767,
                  "nodeType": "ExpressionStatement",
                  "src": "2274:46:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 64771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2369:1:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 64772,
                            "name": "IArrangerConduit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57105,
                            "src": "2372:16:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IArrangerConduit_$57105_$",
                              "typeString": "type(contract IArrangerConduit)"
                            }
                          },
                          "id": 64773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2389:10:112",
                          "memberName": "StatusEnum",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56939,
                          "src": "2372:27:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_StatusEnum_$56939_$",
                            "typeString": "type(enum IArrangerConduit.StatusEnum)"
                          }
                        },
                        "id": 64774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2400:9:112",
                        "memberName": "CANCELLED",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 56937,
                        "src": "2372:37:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StatusEnum_$56939",
                          "typeString": "enum IArrangerConduit.StatusEnum"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_enum$_StatusEnum_$56939",
                          "typeString": "enum IArrangerConduit.StatusEnum"
                        }
                      ],
                      "expression": {
                        "id": 64768,
                        "name": "conduitHarness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64567,
                        "src": "2331:14:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                          "typeString": "contract ArrangerConduitHarness"
                        }
                      },
                      "id": 64770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2346:22:112",
                      "memberName": "__setFundRequestStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57280,
                      "src": "2331:37:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_enum$_StatusEnum_$56939_$returns$__$",
                        "typeString": "function (uint256,enum IArrangerConduit.StatusEnum) external"
                      }
                    },
                    "id": 64775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2331:79:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64776,
                  "nodeType": "ExpressionStatement",
                  "src": "2331:79:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 64780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2458:1:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 64778,
                            "name": "conduitHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64567,
                            "src": "2430:14:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                              "typeString": "contract ArrangerConduitHarness"
                            }
                          },
                          "id": 64779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2445:12:112",
                          "memberName": "isCancelable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56415,
                          "src": "2430:27:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view external returns (bool)"
                          }
                        },
                        "id": 64781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2430:30:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 64782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2462:5:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 64777,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15157,
                        15182,
                        15195,
                        15211,
                        15253,
                        15295,
                        15337,
                        15374,
                        15411,
                        15448,
                        12992,
                        13017,
                        13047,
                        13072,
                        13131,
                        13156,
                        13186,
                        13211,
                        14684,
                        14719
                      ],
                      "referencedDeclaration": 15157,
                      "src": "2421:8:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 64783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2421:47:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64784,
                  "nodeType": "ExpressionStatement",
                  "src": "2421:47:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 64788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2517:1:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 64789,
                            "name": "IArrangerConduit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57105,
                            "src": "2520:16:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IArrangerConduit_$57105_$",
                              "typeString": "type(contract IArrangerConduit)"
                            }
                          },
                          "id": 64790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2537:10:112",
                          "memberName": "StatusEnum",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56939,
                          "src": "2520:27:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_StatusEnum_$56939_$",
                            "typeString": "type(enum IArrangerConduit.StatusEnum)"
                          }
                        },
                        "id": 64791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2548:9:112",
                        "memberName": "COMPLETED",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 56938,
                        "src": "2520:37:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StatusEnum_$56939",
                          "typeString": "enum IArrangerConduit.StatusEnum"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_enum$_StatusEnum_$56939",
                          "typeString": "enum IArrangerConduit.StatusEnum"
                        }
                      ],
                      "expression": {
                        "id": 64785,
                        "name": "conduitHarness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64567,
                        "src": "2479:14:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                          "typeString": "contract ArrangerConduitHarness"
                        }
                      },
                      "id": 64787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2494:22:112",
                      "memberName": "__setFundRequestStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57280,
                      "src": "2479:37:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_enum$_StatusEnum_$56939_$returns$__$",
                        "typeString": "function (uint256,enum IArrangerConduit.StatusEnum) external"
                      }
                    },
                    "id": 64792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2479:79:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64793,
                  "nodeType": "ExpressionStatement",
                  "src": "2479:79:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 64797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2606:1:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 64795,
                            "name": "conduitHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64567,
                            "src": "2578:14:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                              "typeString": "contract ArrangerConduitHarness"
                            }
                          },
                          "id": 64796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2593:12:112",
                          "memberName": "isCancelable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56415,
                          "src": "2578:27:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view external returns (bool)"
                          }
                        },
                        "id": 64798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2578:30:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 64799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2610:5:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 64794,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15157,
                        15182,
                        15195,
                        15211,
                        15253,
                        15295,
                        15337,
                        15374,
                        15411,
                        15448,
                        12992,
                        13017,
                        13047,
                        13072,
                        13131,
                        13156,
                        13186,
                        13211,
                        14684,
                        14719
                      ],
                      "referencedDeclaration": 15157,
                      "src": "2569:8:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 64800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2569:47:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64801,
                  "nodeType": "ExpressionStatement",
                  "src": "2569:47:112"
                }
              ]
            },
            "functionSelector": "417c7f77",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_isCancelable",
            "nameLocation": "1823:17:112",
            "parameters": {
              "id": 64691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1840:2:112"
            },
            "returnParameters": {
              "id": 64692,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1852:0:112"
            },
            "scope": 64804,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 64563,
              "name": "ConduitAssetTestBase",
              "nameLocations": [
                "878:20:112"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 58353,
              "src": "878:20:112"
            },
            "id": 64564,
            "nodeType": "InheritanceSpecifier",
            "src": "878:20:112"
          }
        ],
        "canonicalName": "ArrangerConduit_IsCancelableTest",
        "contractDependencies": [
          125,
          498,
          55531,
          55663,
          57281
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          64804,
          58353,
          58036,
          24276,
          15029,
          15026,
          24225,
          19983,
          19693,
          18929,
          17149,
          16456,
          14963
        ],
        "name": "ArrangerConduit_IsCancelableTest",
        "nameLocation": "842:32:112",
        "scope": 64805,
        "usedErrors": [],
        "usedEvents": [
          12677,
          12681,
          12685,
          12689,
          12693,
          12697,
          12701,
          12705,
          12711,
          12717,
          12725,
          12733,
          12739,
          12745,
          12751,
          12757,
          15051,
          15056,
          15061,
          15068,
          15075,
          15082
        ]
      }
    ],
    "license": "AGPL-3.0-or-later"
  },
  "id": 112
}