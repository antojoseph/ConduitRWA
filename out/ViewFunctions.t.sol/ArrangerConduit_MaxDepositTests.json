{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ilk",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "testFuzz_maxDepositTest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60008054600160ff19918216811790925560048054909116909117905560c0604052600560809081526430b236b4b760d91b60a0526200003f9062000155565b601b80546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600881526730b93930b733b2b960c11b6020820152620000899062000155565b601c80546001600160a01b0319166001600160a01b0392909216919091179055604051620000b79062000288565b604051809103906000f080158015620000d4573d6000803e3d6000fd5b50601d80546001600160a01b0319166001600160a01b0392909216919091179055604051620001039062000296565b604051809103906000f08015801562000120573d6000803e3d6000fd5b50601e80546001600160a01b0319166001600160a01b03929092169190911790553480156200014e57600080fd5b506200035e565b6000620001628262000169565b5092915050565b600080826040516020016200017f9190620002ca565b60408051808303601f190181529082905280516020909101206001625e79b760e01b03198252600482018190529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990602401602060405180830381865afa158015620001eb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002119190620002e8565b6040516318caf8e360e31b8152909250737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c718906200024f90859087906004016200031a565b600060405180830381600087803b1580156200026a57600080fd5b505af11580156200027f573d6000803e3d6000fd5b50505050915091565b61045580620032b283390190565b610a77806200370783390190565b60005b83811015620002c1578181015183820152602001620002a7565b50506000910152565b60008251620002de818460208701620002a4565b9190910192915050565b600060208284031215620002fb57600080fd5b81516001600160a01b03811681146200031357600080fd5b9392505050565b60018060a01b0383168152604060208201526000825180604084015262000349816060850160208701620002a4565b601f01601f1916919091016060019392505050565b612f44806200036e6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806385226c811161007157806385226c8114610119578063916a17c61461012e578063b5508aa914610136578063ba414fa61461013e578063e20c9f7114610156578063fa7626d41461015e57600080fd5b80630a9254e4146100b95780631ed7831c146100c357806330f8f373146100e15780633e5e3c23146100f45780633f7286f4146100fc57806366d9a9a014610104575b600080fd5b6100c161016b565b005b6100cb6103bc565b6040516100d89190610ca9565b60405180910390f35b6100c16100ef366004610cf6565b61041e565b6100cb6104a1565b6100cb610501565b61010c610561565b6040516100d89190610d32565b610121610650565b6040516100d89190610e09565b61010c610720565b610121610806565b6101466108d6565b60405190151581526020016100d8565b6100cb610a01565b6000546101469060ff1681565b60405161017790610c8f565b604051809103906000f080158015610193573d6000803e3d6000fd5b50602180546001600160a01b0319166001600160a01b03929092169190911790556040516101c090610c9c565b604051809103906000f0801580156101dc573d6000803e3d6000fd5b50602080546001600160a01b0319166001600160a01b03928316908117909155602154604051636bc26a1360e11b815260048101929092529091169063d784d42690602401600060405180830381600087803b15801561023b57600080fd5b505af115801561024f573d6000803e3d6000fd5b5050602154601f80546001600160a01b0319166001600160a01b03928316908117909155601c5460405163d4e8be8360e01b81526730b93930b733b2b960c11b600482015292166024830152925063d4e8be839150604401600060405180830381600087803b1580156102c157600080fd5b505af11580156102d5573d6000803e3d6000fd5b5050601f54601d5460405163d4e8be8360e01b815267726567697374727960c01b60048201526001600160a01b0391821660248201529116925063d4e8be839150604401600060405180830381600087803b15801561033357600080fd5b505af1158015610347573d6000803e3d6000fd5b5050601f54601e5460405163d4e8be8360e01b815264726f6c657360d81b60048201526001600160a01b0391821660248201529116925063d4e8be839150604401600060405180830381600087803b1580156103a257600080fd5b505af11580156103b6573d6000803e3d6000fd5b50505050565b6060600d80548060200260200160405190810160405280929190818152602001828054801561041457602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116103f6575b5050505050905090565b601f5460405163c4f7299760e01b8152600481018490526001600160a01b03838116602483015261049d92169063c4f7299790604401602060405180830381865afa158015610471573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104959190610e83565b600019610a61565b5050565b6060600f805480602002602001604051908101604052809291908181526020018280548015610414576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103f6575050505050905090565b6060600e805480602002602001604051908101604052809291908181526020018280548015610414576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103f6575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156106475760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561062f57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116105f15790505b50505050508152505081526020019060010190610585565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b8282101561064757838290600052602060002001805461069390610e9c565b80601f01602080910402602001604051908101604052809291908181526020018280546106bf90610e9c565b801561070c5780601f106106e15761010080835404028352916020019161070c565b820191906000526020600020905b8154815290600101906020018083116106ef57829003601f168201915b505050505081526020019060010190610674565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156106475760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156107ee57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116107b05790505b50505050508152505081526020019060010190610744565b60606010805480602002602001604051908101604052809291908181526020016000905b8282101561064757838290600052602060002001805461084990610e9c565b80601f016020809104026020016040519081016040528092919081815260200182805461087590610e9c565b80156108c25780601f10610897576101008083540402835291602001916108c2565b820191906000526020600020905b8154815290600101906020018083116108a557829003601f168201915b50505050508152602001906001019061082a565b60008054610100900460ff16156108f65750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156109fc5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610984917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610ed6565b60408051601f198184030181529082905261099e91610f07565b6000604051808303816000865af19150503d80600081146109db576040519150601f19603f3d011682016040523d82523d6000602084013e6109e0565b606091505b50915050808060200190518101906109f89190610f23565b9150505b919050565b6060600c805480602002602001604051908101604052809291908181526020018280548015610414576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103f6575050505050905090565b80821461049d577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610ad29060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a161049d737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610c7e5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610c1d9291602001610ed6565b60408051601f1981840301815290829052610c3791610f07565b6000604051808303816000865af19150503d8060008114610c74576040519150601f19603f3d011682016040523d82523d6000602084013e610c79565b606091505b505050505b6000805461ff001916610100179055565b6103e580610f4d83390190565b611bdd8061133283390190565b6020808252825182820181905260009190848201906040850190845b81811015610cea5783516001600160a01b031683529284019291840191600101610cc5565b50909695505050505050565b60008060408385031215610d0957600080fd5b8235915060208301356001600160a01b0381168114610d2757600080fd5b809150509250929050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610dd657898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610dc15783516001600160e01b0319168252928b019260019290920191908b0190610d97565b50978a01979550505091870191600101610d5a565b50919998505050505050505050565b60005b83811015610e00578181015183820152602001610de8565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610e7657878503603f1901845281518051808752610e57818989018a8501610de5565b601f01601f191695909501860194509285019290850190600101610e30565b5092979650505050505050565b600060208284031215610e9557600080fd5b5051919050565b600181811c90821680610eb057607f821691505b602082108103610ed057634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090610ef9816004850160208701610de5565b919091016004019392505050565b60008251610f19818460208701610de5565b9190910192915050565b600060208284031215610f3557600080fd5b81518015158114610f4557600080fd5b939250505056fe608060405234801561001057600080fd5b5033600081815260016020819052604080832091909155517fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a609190a261038a8061005b6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80635c60da1b146100f357806365fae35e146101235780639c52a7f114610136578063bf353dbb14610149578063d784d42614610177575b600080546001600160a01b031690813b90036100cd5760405162461bcd60e51b815260206004820152602a60248201527f5570677261646561626c6550726f78792f6e6f2d636f64652d61742d696d706c60448201526932b6b2b73a30ba34b7b760b11b60648201526084015b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100ec573d6000f35b3d6000fd5b005b600054610106906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f16101313660046102ed565b61018a565b6100f16101443660046102ed565b610201565b6101696101573660046102ed565b60016020526000908152604090205481565b60405190815260200161011a565b6100f16101853660046102ed565b610275565b33600090815260016020819052604090912054146101ba5760405162461bcd60e51b81526004016100c49061031d565b6001600160a01b038116600081815260016020819052604080832091909155517fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a609190a250565b33600090815260016020819052604090912054146102315760405162461bcd60e51b81526004016100c49061031d565b6001600160a01b038116600081815260016020526040808220829055517f184450df2e323acec0ed3b5c7531b81f9b4cdef7914dfd4c0a4317416bb5251b9190a250565b33600090815260016020819052604090912054146102a55760405162461bcd60e51b81526004016100c49061031d565b600080546001600160a01b0319166001600160a01b038316908117825560405190917fddebe6de740fe0dd01cc33ffa314d11c6ac6acbbe50b80513c4c360ae7aa4f0491a250565b6000602082840312156102ff57600080fd5b81356001600160a01b038116811461031657600080fd5b9392505050565b6020808252601f908201527f5570677261646561626c6550726f78792f6e6f742d617574686f72697a65640060408201526060019056fea2646970667358221220188939a378a5a218c09927e6d3009a0b13e6718b1bf1562e2c1f9135b2cdbe5564736f6c63430008140033608060405234801561001057600080fd5b50611bbd806100206000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c8063933d9476116100de578063d4e8be8311610097578063dcb37d8f11610071578063dcb37d8f146103c6578063e0245d33146103f1578063e940325614610426578063f9cc6b6f1461044657600080fd5b8063d4e8be8314610398578063d5c2db14146103ab578063d954863c146103b357600080fd5b8063933d9476146102fd578063a6fb97d114610310578063bf353dbb14610323578063c4f7299714610343578063d2543ccb1461035a578063d31d2fad1461036d57600080fd5b80634f1c2c31116101305780634f1c2c3114610241578063633b626d1461026c57806369f7caba1461028c57806374d47dc5146102ac5780637b103999146102d75780638a11329d146102ea57600080fd5b806337cd2f7e14610178578063392f5f641461018d57806346ec3b7b146101bd5780634857501f146101d05780634a765335146101f35780634dfa843414610221575b600080fd5b61018b61018636600461169e565b610459565b005b6005546101a0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6003546101a0906001600160a01b031681565b6101e36101de3660046116c0565b610752565b60405190151581526020016101b4565b6102136102013660046116ee565b60086020526000908152604090205481565b6040519081526020016101b4565b61023461022f3660046116c0565b610795565b6040516101b4919061176e565b61021361024f3660046117eb565b600a60209081526000928352604080842090915290825290205481565b61021361027a3660046116ee565b60076020526000908152604090205481565b61021361029a3660046116ee565b60096020526000908152604090205481565b6102136102ba3660046117eb565b600d60209081526000928352604080842090915290825290205481565b6004546101a0906001600160a01b031681565b61018b6102f836600461181b565b610905565b61018b61030b3660046116c0565b610ac6565b61021361031e366004611847565b610d5b565b6102136103313660046116ee565b60016020526000908152604090205481565b6102136103513660046117eb565b50600019919050565b610213610368366004611895565b610ffc565b61021361037b3660046117eb565b600c60209081526000928352604080842090915290825290205481565b61018b6103a63660046117eb565b6111ae565b600254610213565b61018b6103c1366004611847565b611334565b6102136103d43660046117eb565b600b60209081526000928352604080842090915290825290205481565b6102136103ff3660046117eb565b6000918252600c602090815260408084206001600160a01b03909316845291905290205490565b6102136104343660046116ee565b60066020526000908152604090205481565b6102136104543660046116ee565b61153a565b6003546001600160a01b031633146104b85760405162461bcd60e51b815260206004820152601c60248201527f417272616e676572436f6e647569742f6e6f742d617272616e6765720000000060448201526064015b60405180910390fd5b6000600283815481106104cd576104cd61196c565b6000918252602090912060059091020190506001815460ff1660038111156104f7576104f7611712565b146105445760405162461bcd60e51b815260206004820152601e60248201527f417272616e676572436f6e647569742f696e76616c69642d737461747573000060448201526064016104af565b8054600182015460028301546000828152600c602090815260408083206101009096046001600160a01b03168084529590915281208054879290610589908490611998565b90915550506001600160a01b038316600090815260086020526040812080548792906105b6908490611998565b90915550506000828152600b602090815260408083206001600160a01b0387168452909152812080548392906105ed9084906119ab565b90915550506001600160a01b0383166000908152600760205260408120805483929061061a9084906119ab565b90915550506003848101869055845460ff1916178085556040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b0361010090920491909116906323b872dd906064016020604051808303816000875af115801561068c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b091906119be565b6106fc5760405162461bcd60e51b815260206004820152601f60248201527f417272616e676572436f6e647569742f7472616e736665722d6661696c65640060448201526064016104af565b60408051878152602081018390529081018690526001600160a01b0384169083907f20e10bf859e24680d383a8a5a75dd133e8150398edfcaed7740a1c0e405757159060600160405180910390a3505050505050565b60006001600283815481106107695761076961196c565b600091825260209091206005909102015460ff16600381111561078e5761078e611712565b1492915050565b6107db6040805160c08101909152806000815260200160006001600160a01b03168152602001600080191681526020016000815260200160008152602001606081525090565b600282815481106107ee576107ee61196c565b600091825260209091206040805160c081019091526005909202018054829060ff16600381111561082157610821611712565b600381111561083257610832611712565b8152815461010090046001600160a01b0316602082015260018201546040820152600282015460608201526003820154608082015260048201805460a09092019161087c906119e0565b80601f01602080910402602001604051908101604052809291908181526020018280546108a8906119e0565b80156108f55780601f106108ca576101008083540402835291602001916108f5565b820191906000526020600020905b8154815290600101906020018083116108d857829003601f168201915b5050505050815250509050919050565b6003546001600160a01b0316331461095f5760405162461bcd60e51b815260206004820152601c60248201527f417272616e676572436f6e647569742f6e6f742d617272616e6765720000000060448201526064016104af565b6109688261153a565b8111156109c25760405162461bcd60e51b815260206004820152602260248201527f417272616e676572436f6e647569742f696e73756666696369656e742d66756e604482015261647360f01b60648201526084016104af565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af1158015610a0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3391906119be565b610a7f5760405162461bcd60e51b815260206004820152601f60248201527f417272616e676572436f6e647569742f7472616e736665722d6661696c65640060448201526064016104af565b816001600160a01b03167ff085c28bde36fd9971e56c50dabd917d29c3dcbc3b42c49c6dae635e14ae63cb82604051610aba91815260200190565b60405180910390a25050565b600060028281548110610adb57610adb61196c565b600091825260209091206040805160c081019091526005909202018054829060ff166003811115610b0e57610b0e611712565b6003811115610b1f57610b1f611712565b8152815461010090046001600160a01b0316602082015260018201546040820152600282015460608201526003820154608082015260048201805460a090920191610b69906119e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610b95906119e0565b8015610be25780601f10610bb757610100808354040283529160200191610be2565b820191906000526020600020905b815481529060010190602001808311610bc557829003601f168201915b505050505081525050905060016003811115610c0057610c00611712565b81516003811115610c1357610c13611712565b14610c605760405162461bcd60e51b815260206004820152601e60248201527f417272616e676572436f6e647569742f696e76616c69642d737461747573000060448201526064016104af565b60208101516040820151610c73816115c4565b606083015160028054819087908110610c8e57610c8e61196c565b60009182526020909120600590910201805460ff19166001836003811115610cb857610cb8611712565b02179055506000828152600b602090815260408083206001600160a01b038716845290915281208054839290610cef9084906119ab565b90915550506001600160a01b03831660009081526007602052604081208054839290610d1c9084906119ab565b90915550506040518581527f8a53ee25106d5ac0078e6fbdd2beac3cb96458adcb31a00d35bf94428236d8229060200160405180910390a15050505050565b600083610d67816115c4565b6000858152600c602090815260408083206001600160a01b0388168452909152902054808411610d975783610d99565b805b6000878152600c602090815260408083206001600160a01b038a168452909152812080549295508592909190610dd09084906119ab565b90915550506001600160a01b03851660009081526008602052604081208054859290610dfd9084906119ab565b90915550506000868152600d602090815260408083206001600160a01b038916845290915281208054859290610e34908490611998565b90915550506001600160a01b03851660009081526009602052604081208054859290610e61908490611998565b909155505060048054604051636610bf7f60e01b81529182018890526000916001600160a01b0390911690636610bf7f90602401602060405180830381865afa158015610eb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed69190611a1a565b60405163a9059cbb60e01b81526001600160a01b038083166004830152602482018790529192509087169063a9059cbb906044016020604051808303816000875af1158015610f29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4d91906119be565b610faa5760405162461bcd60e51b815260206004820152602860248201527f417272616e676572436f6e647569742f77697468647261772d7472616e7366656044820152671c8b59985a5b195960c21b60648201526084016104af565b604080516001600160a01b0383811682526020820187905288169189917fcd6ac346191b4b7531743e58f243dd4d350a52a9186641c1e5eac22b95aaedbe910160405180910390a35050509392505050565b600084611008816115c4565b600280546040805160c08101825260018082526001600160a01b038a1660208301529181018a90526060810188905260006080820181905260a082018890528284018555939093528251600583027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace018054939650929091839160ff19169083600381111561109957611099611712565b0217905550602082015181546001600160a01b0390911661010002610100600160a81b031990911617815560408201516001820155606082015160028201556080820151600382015560a082015160048201906110f69082611a86565b5050506000868152600b602090815260408083206001600160a01b03891684529091528120805486929061112b908490611998565b90915550506001600160a01b03851660009081526007602052604081208054869290611158908490611998565b92505081905550846001600160a01b0316867fc37a21b1f83f8a603ed9e2fd12057edb7bfdaa66bea994899c868fc70f57e50784878760405161119d93929190611b46565b60405180910390a350949350505050565b336000908152600160208190526040909120541461120e5760405162461bcd60e51b815260206004820152601e60248201527f417272616e676572436f6e647569742f6e6f742d617574686f72697a6564000060448201526064016104af565b816730b93930b733b2b960c11b0361124057600380546001600160a01b0319166001600160a01b0383161790556112f9565b8167726567697374727960c01b0361127257600480546001600160a01b0319166001600160a01b0383161790556112f9565b8164726f6c657360d81b036112a157600580546001600160a01b0319166001600160a01b0383161790556112f9565b60405162461bcd60e51b815260206004820152602760248201527f417272616e676572436f6e647569742f66696c652d756e7265636f676e697a65604482015266642d706172616d60c81b60648201526084016104af565b6040516001600160a01b038216815282907f8fef588b5fc1afbf5b2f06c1a435d513f208da2e6704c3d8f0e0ec91167066ba90602001610aba565b8261133e816115c4565b6000848152600a602090815260408083206001600160a01b038716845290915281208054849290611370908490611998565b90915550506001600160a01b0383166000908152600660205260408120805484929061139d908490611998565b909155505060048054604051636610bf7f60e01b81529182018690526000916001600160a01b0390911690636610bf7f90602401602060405180830381865afa1580156113ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114129190611a1a565b6040516323b872dd60e01b81526001600160a01b03808316600483015230602483015260448201869052919250908516906323b872dd906064016020604051808303816000875af115801561146b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148f91906119be565b6114eb5760405162461bcd60e51b815260206004820152602760248201527f417272616e676572436f6e647569742f6465706f7369742d7472616e736665726044820152660b59985a5b195960ca1b60648201526084016104af565b604080516001600160a01b0383811682526020820186905286169187917fc95ddcaddf83340b68d0d44c01b1703f5d28d0611a3fd87e69d79ba7e2ac21d3910160405180910390a35050505050565b6001600160a01b0381166000818152600860205260408082205490516370a0823160e01b8152306004820152919290916370a0823190602401602060405180830381865afa158015611590573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b49190611b6e565b6115be91906119ab565b92915050565b60055460405163784c0a9160e01b8152600481018390523360248201523060448201526000356001600160e01b03191660648201526001600160a01b039091169063784c0a9190608401602060405180830381865afa15801561162b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164f91906119be565b61169b5760405162461bcd60e51b815260206004820152601e60248201527f417272616e676572436f6e647569742f6e6f742d617574686f72697a6564000060448201526064016104af565b50565b600080604083850312156116b157600080fd5b50508035926020909101359150565b6000602082840312156116d257600080fd5b5035919050565b6001600160a01b038116811461169b57600080fd5b60006020828403121561170057600080fd5b813561170b816116d9565b9392505050565b634e487b7160e01b600052602160045260246000fd5b6000815180845260005b8181101561174e57602081850181015186830182015201611732565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600082516004811061179457634e487b7160e01b600052602160045260246000fd5b8060208401525060018060a01b0360208401511660408301526040830151606083015260608301516080830152608083015160a083015260a083015160c0808401526117e360e0840182611728565b949350505050565b600080604083850312156117fe57600080fd5b823591506020830135611810816116d9565b809150509250929050565b6000806040838503121561182e57600080fd5b8235611839816116d9565b946020939093013593505050565b60008060006060848603121561185c57600080fd5b83359250602084013561186e816116d9565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156118ab57600080fd5b8435935060208501356118bd816116d9565b925060408501359150606085013567ffffffffffffffff808211156118e157600080fd5b818701915087601f8301126118f557600080fd5b8135818111156119075761190761187f565b604051601f8201601f19908116603f0116810190838211818310171561192f5761192f61187f565b816040528281528a602084870101111561194857600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156115be576115be611982565b818103818111156115be576115be611982565b6000602082840312156119d057600080fd5b8151801515811461170b57600080fd5b600181811c908216806119f457607f821691505b602082108103611a1457634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611a2c57600080fd5b815161170b816116d9565b601f821115611a8157600081815260208120601f850160051c81016020861015611a5e5750805b601f850160051c820191505b81811015611a7d57828155600101611a6a565b5050505b505050565b815167ffffffffffffffff811115611aa057611aa061187f565b611ab481611aae84546119e0565b84611a37565b602080601f831160018114611ae95760008415611ad15750858301515b600019600386901b1c1916600185901b178555611a7d565b600085815260208120601f198616915b82811015611b1857888601518255948401946001909101908401611af9565b5085821015611b365787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b838152826020820152606060408201526000611b656060830184611728565b95945050505050565b600060208284031215611b8057600080fd5b505191905056fea2646970667358221220b4798e2f2572da042d45c80fcc1cda876bcec86074759ea119a00613ebc2581064736f6c63430008140033a264697066735822122047b4394b44a18a925d20521db13df154bae205997c7e75974c2021dbb6a15a8964736f6c63430008140033608060405234801561001057600080fd5b503360008181526020819052604080822060019055517fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a609190a26103fc806100596000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806365fae35e1461005c5780636610bf7f146100715780639c52a7f1146100b7578063bf353dbb146100ca578063ebecb39d146100f8575b600080fd5b61006f61006a366004610321565b61010b565b005b61009a61007f366004610343565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61006f6100c5366004610321565b610188565b6100ea6100d8366004610321565b60006020819052908152604090205481565b6040519081526020016100ae565b61006f61010636600461035c565b6101fb565b336000908152602081905260409020546001146101435760405162461bcd60e51b815260040161013a90610391565b60405180910390fd5b6001600160a01b03811660008181526020819052604080822060019055517fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a609190a250565b336000908152602081905260409020546001146101b75760405162461bcd60e51b815260040161013a90610391565b6001600160a01b038116600081815260208190526040808220829055517f184450df2e323acec0ed3b5c7531b81f9b4cdef7914dfd4c0a4317416bb5251b9190a250565b3360009081526020819052604090205460011461022a5760405162461bcd60e51b815260040161013a90610391565b8165313ab33332b960d11b0361026657600083815260016020526040902080546001600160a01b0319166001600160a01b0383161790556102c0565b60405162461bcd60e51b815260206004820152602960248201527f416c6c6f6361746f7252656769737472792f66696c652d756e7265636f676e696044820152687a65642d706172616d60b81b606482015260840161013a565b6040516001600160a01b0382168152829084907f4ff2caaa972a7c6629ea01fae9c93d73cc307d13ea4c369f9bbbb7f9b7e9461d9060200160405180910390a3505050565b80356001600160a01b038116811461031c57600080fd5b919050565b60006020828403121561033357600080fd5b61033c82610305565b9392505050565b60006020828403121561035557600080fd5b5035919050565b60008060006060848603121561037157600080fd5b833592506020840135915061038860408501610305565b90509250925092565b6020808252818101527f416c6c6f6361746f7252656769737472792f6e6f742d617574686f72697a656460408201526060019056fea264697066735822122002b4c53d9fa3a81b0a0894c6e39681fefe7c19912e670fbadd1caf57a6e0870564736f6c63430008140033608060405234801561001057600080fd5b503360008181526020819052604080822060019055517fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a609190a2610a1e806100596000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a04deb7411610071578063a04deb7414610174578063bf353dbb146101b5578063c6768fb7146101e3578063cb0c4adc14610214578063daa701031461023f578063fd58fc341461025257600080fd5b80631c76b182146100ae57806365fae35e146100c357806366d3e365146100d6578063784c0a91146100e95780639c52a7f114610161575b600080fd5b6100c16100bc3660046106a5565b610265565b005b6100c16100d1366004610703565b61039b565b6100c16100e4366004610725565b61040f565b61014c6100f7366004610772565b60008481526003602090815260408083206001600160a01b03958616845282528083206001600160e01b0319909416835292815282822054958252600281528282209490931681529290915290205416151590565b60405190151581526020015b60405180910390f35b6100c161016f366004610703565b61050b565b61019d6101823660046107b4565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610158565b6101d56101c3366004610703565b60006020819052908152604090205481565b604051908152602001610158565b6101d56101f13660046107cd565b600360209081526000938452604080852082529284528284209052825290205481565b6101d5610222366004610809565b600260209081526000928352604080842090915290825290205481565b6100c161024d366004610809565b61057e565b61014c610260366004610835565b610611565b60008581526001602052604090205485906001600160a01b031633146102a65760405162461bcd60e51b815260040161029d90610868565b60405180910390fd5b60006102b660ff871660026109a5565b905082156102fd5760008781526003602090815260408083206001600160a01b038916845282528083206001600160e01b031988168452909152902080548217905561033c565b60008781526003602090815260408083206001600160a01b038916845282528083206001600160e01b0319881684529091529020805460001983181690555b604080516001600160e01b03198616815284151560208201526001600160a01b0387169160ff8916918a917fe459bcd103dbe8b0e6a5d530849ce830cfccf2828693cd58ae90801afd24fab5910160405180910390a450505050505050565b336000908152602081905260409020546001146103ca5760405162461bcd60e51b815260040161029d906109b1565b6001600160a01b03811660008181526020819052604080822060019055517fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a609190a250565b60008481526001602052604090205484906001600160a01b031633146104475760405162461bcd60e51b815260040161029d90610868565b600061045760ff851660026109a5565b9050821561048c5760008681526002602090815260408083206001600160a01b038916845290915290208054821790556104b9565b60008681526002602090815260408083206001600160a01b03891684529091529020805460001983181690555b8360ff16856001600160a01b0316877f830afcb2e8fda1fe33202a89fe3abf4fc4205f546f29092f144c19e34aab3cea866040516104fb911515815260200190565b60405180910390a4505050505050565b3360009081526020819052604090205460011461053a5760405162461bcd60e51b815260040161029d906109b1565b6001600160a01b038116600081815260208190526040808220829055517f184450df2e323acec0ed3b5c7531b81f9b4cdef7914dfd4c0a4317416bb5251b9190a250565b336000908152602081905260409020546001146105ad5760405162461bcd60e51b815260040161029d906109b1565b60008281526001602090815260409182902080546001600160a01b0319166001600160a01b038516908117909155915191825283917f1666ce5bfc515e272162696dc7b908334194bcf1f921f457b5406d2e00ed9e6e910160405180910390a25050565b600061062160ff831660026109a5565b60008581526002602090815260408083206001600160a01b038816845290915290205416151590509392505050565b803560ff8116811461066157600080fd5b919050565b80356001600160a01b038116811461066157600080fd5b80356001600160e01b03198116811461066157600080fd5b8035801515811461066157600080fd5b600080600080600060a086880312156106bd57600080fd5b853594506106cd60208701610650565b93506106db60408701610666565b92506106e96060870161067d565b91506106f760808701610695565b90509295509295909350565b60006020828403121561071557600080fd5b61071e82610666565b9392505050565b6000806000806080858703121561073b57600080fd5b8435935061074b60208601610666565b925061075960408601610650565b915061076760608601610695565b905092959194509250565b6000806000806080858703121561078857600080fd5b8435935061079860208601610666565b92506107a660408601610666565b91506107676060860161067d565b6000602082840312156107c657600080fd5b5035919050565b6000806000606084860312156107e257600080fd5b833592506107f260208501610666565b91506108006040850161067d565b90509250925092565b6000806040838503121561081c57600080fd5b8235915061082c60208401610666565b90509250929050565b60008060006060848603121561084a57600080fd5b8335925061085a60208501610666565b915061080060408501610650565b60208082526021908201527f416c6c6f6361746f72526f6c65732f696c6b2d6e6f742d617574686f72697a656040820152601960fa1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156108fa5781600019048211156108e0576108e06108a9565b808516156108ed57918102915b93841c93908002906108c4565b509250929050565b6000826109115750600161099f565b8161091e5750600061099f565b8160018114610934576002811461093e5761095a565b600191505061099f565b60ff84111561094f5761094f6108a9565b50506001821b61099f565b5060208310610133831016604e8410600b841016171561097d575081810a61099f565b61098783836108bf565b806000190482111561099b5761099b6108a9565b0290505b92915050565b600061071e8383610902565b6020808252601d908201527f416c6c6f6361746f72526f6c65732f6e6f742d617574686f72697a656400000060408201526060019056fea26469706673582212200a2cb90ff2b89b60de536043294dacc625f91ee84119cc783c2531f3b3dfee4364736f6c63430008140033",
    "sourceMap": "1572:26:74:-:0;;;1594:4;-1:-1:-1;;1572:26:74;;;;;;;;3126:44:77;;;;;;;;;;;1185:17:106;615:216:112;1185:17:106;;615:216:112;1185:17:106;;;-1:-1:-1;;;1185:17:106;;;;:8;:17::i;:::-;1166:36;;;-1:-1:-1;;;;;;1166:36:106;-1:-1:-1;;;;;1166:36:106;;;;;;;;;;1227:20;;;;;;;;;;;;-1:-1:-1;;;1227:20:106;;;;;;:8;:20::i;:::-;1208:39;;;-1:-1:-1;;;;;;1208:39:106;-1:-1:-1;;;;;1208:39:106;;;;;;;;;;1283:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1254:52:106;;;-1:-1:-1;;;;;;1254:52:106;-1:-1:-1;;;;;1254:52:106;;;;;;;;;;1341:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1312:49:106;;;-1:-1:-1;;;;;;1312:49:106;-1:-1:-1;;;;;1312:49:106;;;;;;;;;;615:216:112;;;;;;;;;;;;16749:125:78;16813:12;16847:20;16862:4;16847:14;:20::i;:::-;-1:-1:-1;16837:30:78;16749:125;-1:-1:-1;;16749:125:78:o;16468:242::-;16538:12;16552:18;16630:4;16613:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;16613:22:78;;;;;;;16603:33;;16613:22;16603:33;;;;-1:-1:-1;;;;;;16654:19:78;;;;;709:25:115;;;16603:33:78;-1:-1:-1;16654:7:78;;;;682:18:115;;16654:19:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16683:20;;-1:-1:-1;;;16683:20:78;;16647:26;;-1:-1:-1;16683:8:78;;;;:20;;16647:26;;16698:4;;16683:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16468:242;;;:::o;615:216:112:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:250:115:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:115;238:16;;231:27;14:250::o;269:289::-;400:3;438:6;432:13;454:66;513:6;508:3;501:4;493:6;489:17;454:66;:::i;:::-;536:16;;;;;269:289;-1:-1:-1;;269:289:115:o;745:290::-;815:6;868:2;856:9;847:7;843:23;839:32;836:52;;;884:1;881;874:12;836:52;910:16;;-1:-1:-1;;;;;955:31:115;;945:42;;935:70;;1001:1;998;991:12;935:70;1024:5;745:290;-1:-1:-1;;;745:290:115:o;1040:493::-;1246:1;1242;1237:3;1233:11;1229:19;1221:6;1217:32;1206:9;1199:51;1286:2;1281;1270:9;1266:18;1259:30;1180:4;1318:6;1312:13;1361:6;1356:2;1345:9;1341:18;1334:34;1377:79;1449:6;1444:2;1433:9;1429:18;1424:2;1416:6;1412:15;1377:79;:::i;:::-;1517:2;1496:15;-1:-1:-1;;1492:29:115;1477:45;;;;1524:2;1473:54;;1040:493;-1:-1:-1;;;1040:493:115:o;:::-;615:216:112;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806385226c811161007157806385226c8114610119578063916a17c61461012e578063b5508aa914610136578063ba414fa61461013e578063e20c9f7114610156578063fa7626d41461015e57600080fd5b80630a9254e4146100b95780631ed7831c146100c357806330f8f373146100e15780633e5e3c23146100f45780633f7286f4146100fc57806366d9a9a014610104575b600080fd5b6100c161016b565b005b6100cb6103bc565b6040516100d89190610ca9565b60405180910390f35b6100c16100ef366004610cf6565b61041e565b6100cb6104a1565b6100cb610501565b61010c610561565b6040516100d89190610d32565b610121610650565b6040516100d89190610e09565b61010c610720565b610121610806565b6101466108d6565b60405190151581526020016100d8565b6100cb610a01565b6000546101469060ff1681565b60405161017790610c8f565b604051809103906000f080158015610193573d6000803e3d6000fd5b50602180546001600160a01b0319166001600160a01b03929092169190911790556040516101c090610c9c565b604051809103906000f0801580156101dc573d6000803e3d6000fd5b50602080546001600160a01b0319166001600160a01b03928316908117909155602154604051636bc26a1360e11b815260048101929092529091169063d784d42690602401600060405180830381600087803b15801561023b57600080fd5b505af115801561024f573d6000803e3d6000fd5b5050602154601f80546001600160a01b0319166001600160a01b03928316908117909155601c5460405163d4e8be8360e01b81526730b93930b733b2b960c11b600482015292166024830152925063d4e8be839150604401600060405180830381600087803b1580156102c157600080fd5b505af11580156102d5573d6000803e3d6000fd5b5050601f54601d5460405163d4e8be8360e01b815267726567697374727960c01b60048201526001600160a01b0391821660248201529116925063d4e8be839150604401600060405180830381600087803b15801561033357600080fd5b505af1158015610347573d6000803e3d6000fd5b5050601f54601e5460405163d4e8be8360e01b815264726f6c657360d81b60048201526001600160a01b0391821660248201529116925063d4e8be839150604401600060405180830381600087803b1580156103a257600080fd5b505af11580156103b6573d6000803e3d6000fd5b50505050565b6060600d80548060200260200160405190810160405280929190818152602001828054801561041457602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116103f6575b5050505050905090565b601f5460405163c4f7299760e01b8152600481018490526001600160a01b03838116602483015261049d92169063c4f7299790604401602060405180830381865afa158015610471573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104959190610e83565b600019610a61565b5050565b6060600f805480602002602001604051908101604052809291908181526020018280548015610414576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103f6575050505050905090565b6060600e805480602002602001604051908101604052809291908181526020018280548015610414576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103f6575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156106475760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561062f57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116105f15790505b50505050508152505081526020019060010190610585565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b8282101561064757838290600052602060002001805461069390610e9c565b80601f01602080910402602001604051908101604052809291908181526020018280546106bf90610e9c565b801561070c5780601f106106e15761010080835404028352916020019161070c565b820191906000526020600020905b8154815290600101906020018083116106ef57829003601f168201915b505050505081526020019060010190610674565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156106475760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156107ee57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116107b05790505b50505050508152505081526020019060010190610744565b60606010805480602002602001604051908101604052809291908181526020016000905b8282101561064757838290600052602060002001805461084990610e9c565b80601f016020809104026020016040519081016040528092919081815260200182805461087590610e9c565b80156108c25780601f10610897576101008083540402835291602001916108c2565b820191906000526020600020905b8154815290600101906020018083116108a557829003601f168201915b50505050508152602001906001019061082a565b60008054610100900460ff16156108f65750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156109fc5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610984917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610ed6565b60408051601f198184030181529082905261099e91610f07565b6000604051808303816000865af19150503d80600081146109db576040519150601f19603f3d011682016040523d82523d6000602084013e6109e0565b606091505b50915050808060200190518101906109f89190610f23565b9150505b919050565b6060600c805480602002602001604051908101604052809291908181526020018280548015610414576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103f6575050505050905090565b80821461049d577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610ad29060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a161049d737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610c7e5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610c1d9291602001610ed6565b60408051601f1981840301815290829052610c3791610f07565b6000604051808303816000865af19150503d8060008114610c74576040519150601f19603f3d011682016040523d82523d6000602084013e610c79565b606091505b505050505b6000805461ff001916610100179055565b6103e580610f4d83390190565b611bdd8061133283390190565b6020808252825182820181905260009190848201906040850190845b81811015610cea5783516001600160a01b031683529284019291840191600101610cc5565b50909695505050505050565b60008060408385031215610d0957600080fd5b8235915060208301356001600160a01b0381168114610d2757600080fd5b809150509250929050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610dd657898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610dc15783516001600160e01b0319168252928b019260019290920191908b0190610d97565b50978a01979550505091870191600101610d5a565b50919998505050505050505050565b60005b83811015610e00578181015183820152602001610de8565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610e7657878503603f1901845281518051808752610e57818989018a8501610de5565b601f01601f191695909501860194509285019290850190600101610e30565b5092979650505050505050565b600060208284031215610e9557600080fd5b5051919050565b600181811c90821680610eb057607f821691505b602082108103610ed057634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090610ef9816004850160208701610de5565b919091016004019392505050565b60008251610f19818460208701610de5565b9190910192915050565b600060208284031215610f3557600080fd5b81518015158114610f4557600080fd5b939250505056fe608060405234801561001057600080fd5b5033600081815260016020819052604080832091909155517fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a609190a261038a8061005b6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80635c60da1b146100f357806365fae35e146101235780639c52a7f114610136578063bf353dbb14610149578063d784d42614610177575b600080546001600160a01b031690813b90036100cd5760405162461bcd60e51b815260206004820152602a60248201527f5570677261646561626c6550726f78792f6e6f2d636f64652d61742d696d706c60448201526932b6b2b73a30ba34b7b760b11b60648201526084015b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100ec573d6000f35b3d6000fd5b005b600054610106906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f16101313660046102ed565b61018a565b6100f16101443660046102ed565b610201565b6101696101573660046102ed565b60016020526000908152604090205481565b60405190815260200161011a565b6100f16101853660046102ed565b610275565b33600090815260016020819052604090912054146101ba5760405162461bcd60e51b81526004016100c49061031d565b6001600160a01b038116600081815260016020819052604080832091909155517fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a609190a250565b33600090815260016020819052604090912054146102315760405162461bcd60e51b81526004016100c49061031d565b6001600160a01b038116600081815260016020526040808220829055517f184450df2e323acec0ed3b5c7531b81f9b4cdef7914dfd4c0a4317416bb5251b9190a250565b33600090815260016020819052604090912054146102a55760405162461bcd60e51b81526004016100c49061031d565b600080546001600160a01b0319166001600160a01b038316908117825560405190917fddebe6de740fe0dd01cc33ffa314d11c6ac6acbbe50b80513c4c360ae7aa4f0491a250565b6000602082840312156102ff57600080fd5b81356001600160a01b038116811461031657600080fd5b9392505050565b6020808252601f908201527f5570677261646561626c6550726f78792f6e6f742d617574686f72697a65640060408201526060019056fea2646970667358221220188939a378a5a218c09927e6d3009a0b13e6718b1bf1562e2c1f9135b2cdbe5564736f6c63430008140033608060405234801561001057600080fd5b50611bbd806100206000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c8063933d9476116100de578063d4e8be8311610097578063dcb37d8f11610071578063dcb37d8f146103c6578063e0245d33146103f1578063e940325614610426578063f9cc6b6f1461044657600080fd5b8063d4e8be8314610398578063d5c2db14146103ab578063d954863c146103b357600080fd5b8063933d9476146102fd578063a6fb97d114610310578063bf353dbb14610323578063c4f7299714610343578063d2543ccb1461035a578063d31d2fad1461036d57600080fd5b80634f1c2c31116101305780634f1c2c3114610241578063633b626d1461026c57806369f7caba1461028c57806374d47dc5146102ac5780637b103999146102d75780638a11329d146102ea57600080fd5b806337cd2f7e14610178578063392f5f641461018d57806346ec3b7b146101bd5780634857501f146101d05780634a765335146101f35780634dfa843414610221575b600080fd5b61018b61018636600461169e565b610459565b005b6005546101a0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6003546101a0906001600160a01b031681565b6101e36101de3660046116c0565b610752565b60405190151581526020016101b4565b6102136102013660046116ee565b60086020526000908152604090205481565b6040519081526020016101b4565b61023461022f3660046116c0565b610795565b6040516101b4919061176e565b61021361024f3660046117eb565b600a60209081526000928352604080842090915290825290205481565b61021361027a3660046116ee565b60076020526000908152604090205481565b61021361029a3660046116ee565b60096020526000908152604090205481565b6102136102ba3660046117eb565b600d60209081526000928352604080842090915290825290205481565b6004546101a0906001600160a01b031681565b61018b6102f836600461181b565b610905565b61018b61030b3660046116c0565b610ac6565b61021361031e366004611847565b610d5b565b6102136103313660046116ee565b60016020526000908152604090205481565b6102136103513660046117eb565b50600019919050565b610213610368366004611895565b610ffc565b61021361037b3660046117eb565b600c60209081526000928352604080842090915290825290205481565b61018b6103a63660046117eb565b6111ae565b600254610213565b61018b6103c1366004611847565b611334565b6102136103d43660046117eb565b600b60209081526000928352604080842090915290825290205481565b6102136103ff3660046117eb565b6000918252600c602090815260408084206001600160a01b03909316845291905290205490565b6102136104343660046116ee565b60066020526000908152604090205481565b6102136104543660046116ee565b61153a565b6003546001600160a01b031633146104b85760405162461bcd60e51b815260206004820152601c60248201527f417272616e676572436f6e647569742f6e6f742d617272616e6765720000000060448201526064015b60405180910390fd5b6000600283815481106104cd576104cd61196c565b6000918252602090912060059091020190506001815460ff1660038111156104f7576104f7611712565b146105445760405162461bcd60e51b815260206004820152601e60248201527f417272616e676572436f6e647569742f696e76616c69642d737461747573000060448201526064016104af565b8054600182015460028301546000828152600c602090815260408083206101009096046001600160a01b03168084529590915281208054879290610589908490611998565b90915550506001600160a01b038316600090815260086020526040812080548792906105b6908490611998565b90915550506000828152600b602090815260408083206001600160a01b0387168452909152812080548392906105ed9084906119ab565b90915550506001600160a01b0383166000908152600760205260408120805483929061061a9084906119ab565b90915550506003848101869055845460ff1916178085556040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b0361010090920491909116906323b872dd906064016020604051808303816000875af115801561068c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b091906119be565b6106fc5760405162461bcd60e51b815260206004820152601f60248201527f417272616e676572436f6e647569742f7472616e736665722d6661696c65640060448201526064016104af565b60408051878152602081018390529081018690526001600160a01b0384169083907f20e10bf859e24680d383a8a5a75dd133e8150398edfcaed7740a1c0e405757159060600160405180910390a3505050505050565b60006001600283815481106107695761076961196c565b600091825260209091206005909102015460ff16600381111561078e5761078e611712565b1492915050565b6107db6040805160c08101909152806000815260200160006001600160a01b03168152602001600080191681526020016000815260200160008152602001606081525090565b600282815481106107ee576107ee61196c565b600091825260209091206040805160c081019091526005909202018054829060ff16600381111561082157610821611712565b600381111561083257610832611712565b8152815461010090046001600160a01b0316602082015260018201546040820152600282015460608201526003820154608082015260048201805460a09092019161087c906119e0565b80601f01602080910402602001604051908101604052809291908181526020018280546108a8906119e0565b80156108f55780601f106108ca576101008083540402835291602001916108f5565b820191906000526020600020905b8154815290600101906020018083116108d857829003601f168201915b5050505050815250509050919050565b6003546001600160a01b0316331461095f5760405162461bcd60e51b815260206004820152601c60248201527f417272616e676572436f6e647569742f6e6f742d617272616e6765720000000060448201526064016104af565b6109688261153a565b8111156109c25760405162461bcd60e51b815260206004820152602260248201527f417272616e676572436f6e647569742f696e73756666696369656e742d66756e604482015261647360f01b60648201526084016104af565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af1158015610a0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3391906119be565b610a7f5760405162461bcd60e51b815260206004820152601f60248201527f417272616e676572436f6e647569742f7472616e736665722d6661696c65640060448201526064016104af565b816001600160a01b03167ff085c28bde36fd9971e56c50dabd917d29c3dcbc3b42c49c6dae635e14ae63cb82604051610aba91815260200190565b60405180910390a25050565b600060028281548110610adb57610adb61196c565b600091825260209091206040805160c081019091526005909202018054829060ff166003811115610b0e57610b0e611712565b6003811115610b1f57610b1f611712565b8152815461010090046001600160a01b0316602082015260018201546040820152600282015460608201526003820154608082015260048201805460a090920191610b69906119e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610b95906119e0565b8015610be25780601f10610bb757610100808354040283529160200191610be2565b820191906000526020600020905b815481529060010190602001808311610bc557829003601f168201915b505050505081525050905060016003811115610c0057610c00611712565b81516003811115610c1357610c13611712565b14610c605760405162461bcd60e51b815260206004820152601e60248201527f417272616e676572436f6e647569742f696e76616c69642d737461747573000060448201526064016104af565b60208101516040820151610c73816115c4565b606083015160028054819087908110610c8e57610c8e61196c565b60009182526020909120600590910201805460ff19166001836003811115610cb857610cb8611712565b02179055506000828152600b602090815260408083206001600160a01b038716845290915281208054839290610cef9084906119ab565b90915550506001600160a01b03831660009081526007602052604081208054839290610d1c9084906119ab565b90915550506040518581527f8a53ee25106d5ac0078e6fbdd2beac3cb96458adcb31a00d35bf94428236d8229060200160405180910390a15050505050565b600083610d67816115c4565b6000858152600c602090815260408083206001600160a01b0388168452909152902054808411610d975783610d99565b805b6000878152600c602090815260408083206001600160a01b038a168452909152812080549295508592909190610dd09084906119ab565b90915550506001600160a01b03851660009081526008602052604081208054859290610dfd9084906119ab565b90915550506000868152600d602090815260408083206001600160a01b038916845290915281208054859290610e34908490611998565b90915550506001600160a01b03851660009081526009602052604081208054859290610e61908490611998565b909155505060048054604051636610bf7f60e01b81529182018890526000916001600160a01b0390911690636610bf7f90602401602060405180830381865afa158015610eb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed69190611a1a565b60405163a9059cbb60e01b81526001600160a01b038083166004830152602482018790529192509087169063a9059cbb906044016020604051808303816000875af1158015610f29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4d91906119be565b610faa5760405162461bcd60e51b815260206004820152602860248201527f417272616e676572436f6e647569742f77697468647261772d7472616e7366656044820152671c8b59985a5b195960c21b60648201526084016104af565b604080516001600160a01b0383811682526020820187905288169189917fcd6ac346191b4b7531743e58f243dd4d350a52a9186641c1e5eac22b95aaedbe910160405180910390a35050509392505050565b600084611008816115c4565b600280546040805160c08101825260018082526001600160a01b038a1660208301529181018a90526060810188905260006080820181905260a082018890528284018555939093528251600583027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace018054939650929091839160ff19169083600381111561109957611099611712565b0217905550602082015181546001600160a01b0390911661010002610100600160a81b031990911617815560408201516001820155606082015160028201556080820151600382015560a082015160048201906110f69082611a86565b5050506000868152600b602090815260408083206001600160a01b03891684529091528120805486929061112b908490611998565b90915550506001600160a01b03851660009081526007602052604081208054869290611158908490611998565b92505081905550846001600160a01b0316867fc37a21b1f83f8a603ed9e2fd12057edb7bfdaa66bea994899c868fc70f57e50784878760405161119d93929190611b46565b60405180910390a350949350505050565b336000908152600160208190526040909120541461120e5760405162461bcd60e51b815260206004820152601e60248201527f417272616e676572436f6e647569742f6e6f742d617574686f72697a6564000060448201526064016104af565b816730b93930b733b2b960c11b0361124057600380546001600160a01b0319166001600160a01b0383161790556112f9565b8167726567697374727960c01b0361127257600480546001600160a01b0319166001600160a01b0383161790556112f9565b8164726f6c657360d81b036112a157600580546001600160a01b0319166001600160a01b0383161790556112f9565b60405162461bcd60e51b815260206004820152602760248201527f417272616e676572436f6e647569742f66696c652d756e7265636f676e697a65604482015266642d706172616d60c81b60648201526084016104af565b6040516001600160a01b038216815282907f8fef588b5fc1afbf5b2f06c1a435d513f208da2e6704c3d8f0e0ec91167066ba90602001610aba565b8261133e816115c4565b6000848152600a602090815260408083206001600160a01b038716845290915281208054849290611370908490611998565b90915550506001600160a01b0383166000908152600660205260408120805484929061139d908490611998565b909155505060048054604051636610bf7f60e01b81529182018690526000916001600160a01b0390911690636610bf7f90602401602060405180830381865afa1580156113ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114129190611a1a565b6040516323b872dd60e01b81526001600160a01b03808316600483015230602483015260448201869052919250908516906323b872dd906064016020604051808303816000875af115801561146b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148f91906119be565b6114eb5760405162461bcd60e51b815260206004820152602760248201527f417272616e676572436f6e647569742f6465706f7369742d7472616e736665726044820152660b59985a5b195960ca1b60648201526084016104af565b604080516001600160a01b0383811682526020820186905286169187917fc95ddcaddf83340b68d0d44c01b1703f5d28d0611a3fd87e69d79ba7e2ac21d3910160405180910390a35050505050565b6001600160a01b0381166000818152600860205260408082205490516370a0823160e01b8152306004820152919290916370a0823190602401602060405180830381865afa158015611590573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b49190611b6e565b6115be91906119ab565b92915050565b60055460405163784c0a9160e01b8152600481018390523360248201523060448201526000356001600160e01b03191660648201526001600160a01b039091169063784c0a9190608401602060405180830381865afa15801561162b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164f91906119be565b61169b5760405162461bcd60e51b815260206004820152601e60248201527f417272616e676572436f6e647569742f6e6f742d617574686f72697a6564000060448201526064016104af565b50565b600080604083850312156116b157600080fd5b50508035926020909101359150565b6000602082840312156116d257600080fd5b5035919050565b6001600160a01b038116811461169b57600080fd5b60006020828403121561170057600080fd5b813561170b816116d9565b9392505050565b634e487b7160e01b600052602160045260246000fd5b6000815180845260005b8181101561174e57602081850181015186830182015201611732565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600082516004811061179457634e487b7160e01b600052602160045260246000fd5b8060208401525060018060a01b0360208401511660408301526040830151606083015260608301516080830152608083015160a083015260a083015160c0808401526117e360e0840182611728565b949350505050565b600080604083850312156117fe57600080fd5b823591506020830135611810816116d9565b809150509250929050565b6000806040838503121561182e57600080fd5b8235611839816116d9565b946020939093013593505050565b60008060006060848603121561185c57600080fd5b83359250602084013561186e816116d9565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156118ab57600080fd5b8435935060208501356118bd816116d9565b925060408501359150606085013567ffffffffffffffff808211156118e157600080fd5b818701915087601f8301126118f557600080fd5b8135818111156119075761190761187f565b604051601f8201601f19908116603f0116810190838211818310171561192f5761192f61187f565b816040528281528a602084870101111561194857600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156115be576115be611982565b818103818111156115be576115be611982565b6000602082840312156119d057600080fd5b8151801515811461170b57600080fd5b600181811c908216806119f457607f821691505b602082108103611a1457634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611a2c57600080fd5b815161170b816116d9565b601f821115611a8157600081815260208120601f850160051c81016020861015611a5e5750805b601f850160051c820191505b81811015611a7d57828155600101611a6a565b5050505b505050565b815167ffffffffffffffff811115611aa057611aa061187f565b611ab481611aae84546119e0565b84611a37565b602080601f831160018114611ae95760008415611ad15750858301515b600019600386901b1c1916600185901b178555611a7d565b600085815260208120601f198616915b82811015611b1857888601518255948401946001909101908401611af9565b5085821015611b365787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b838152826020820152606060408201526000611b656060830184611728565b95945050505050565b600060208284031215611b8057600080fd5b505191905056fea2646970667358221220b4798e2f2572da042d45c80fcc1cda876bcec86074759ea119a00613ebc2581064736f6c63430008140033a264697066735822122047b4394b44a18a925d20521db13df154bae205997c7e75974c2021dbb6a15a8964736f6c63430008140033",
    "sourceMap": "615:216:112:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1478:422:106;;;:::i;:::-;;2170:134:80;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;682:146:112;;;;;;:::i;:::-;;:::i;2939:133:80:-;;;:::i;2640:141::-;;;:::i;2456:178::-;;;:::i;:::-;;;;;;;:::i;2310:140::-;;;:::i;:::-;;;;;;;:::i;2787:146::-;;;:::i;1875:141::-;;;:::i;1819:584:74:-;;;:::i;:::-;;;4049:14:115;;4042:22;4024:41;;4012:2;3997:18;1819:584:74;3884:187:115;2022:142:80;;;:::i;1572:26:74:-;;;;;;;;;1478:422:106;1535:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1520:12:106;:37;;-1:-1:-1;;;;;;1520:37:106;-1:-1:-1;;;;;1520:37:106;;;;;;;;;;1592:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1568:21:106;:45;;-1:-1:-1;;;;;;1568:45:106;-1:-1:-1;;;;;1568:45:106;;;;;;;;;1624:12;;:62;;-1:-1:-1;;;1624:62:106;;;;;4222:51:115;;;;1624:12:106;;;;:30;;4195:18:115;;1624:62:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:12:106;;1697:7;:48;;-1:-1:-1;;;;;;1697:48:106;-1:-1:-1;;;;;1731:12:106;;;1697:48;;;;;;1781:8;;1756:34;;-1:-1:-1;;;1756:34:106;;-1:-1:-1;;;1756:34:106;;;4521:29:115;1781:8:106;;4566:18:115;;;4559:60;1731:12:106;-1:-1:-1;1756:12:106;;-1:-1:-1;4494:18:115;;1756:34:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1800:7:106;;1833:8;;1800:43;;-1:-1:-1;;;1800:43:106;;-1:-1:-1;;;1800:43:106;;;4867:29:115;-1:-1:-1;;;;;1833:8:106;;;4912:18:115;;;4905:60;1800:7:106;;;-1:-1:-1;1800:12:106;;-1:-1:-1;4840:18:115;;1800:43:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1853:7:106;;1886:5;;1853:40;;-1:-1:-1;;;1853:40:106;;-1:-1:-1;;;1853:40:106;;;5213:26:115;-1:-1:-1;;;;;1886:5:106;;;5255:18:115;;;5248:60;1853:7:106;;;-1:-1:-1;1853:12:106;;-1:-1:-1;5186:18:115;;1853:40:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1478:422::o;2170:134:80:-;2217:33;2281:16;2262:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2262:35:80;;;;;;;;;;;;;;;;;;;;;;;2170:134;:::o;682:146:112:-;771:7;;:30;;-1:-1:-1;;;771:30:112;;;;;5493:25:115;;;-1:-1:-1;;;;;5554:32:115;;;5534:18;;;5527:60;762:59:112;;771:7;;:18;;5466::115;;771:30:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;762:8:112;:59::i;:::-;682:146;;:::o;2939:133:80:-;2985:33;3049:16;3030:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3030:35:80;;;;;;;;;;;;;;;;;;;;;;2939:133;:::o;2640:141::-;2688:35;2756:18;2735:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2735:39:80;;;;;;;;;;;;;;;;;;;;;;2640:141;:::o;2456:178::-;2512:48;2601:26;2572:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2572:55:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2572:55:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2456:178;:::o;2310:140::-;2358:34;2425:18;2404:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2787:146;2835:40;2908:18;2887:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2887:39:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2887:39:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1875:141;1924:34;1991:18;1970:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:74;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:74;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;6346:51:115;;;-1:-1:-1;;;6413:18:115;;;6406:34;2196:43:74;;;;;;;;;6319:18:115;;;2196:43:74;;;-1:-1:-1;;1671:64:74;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:74;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:74:o;2022:142:80:-;2071:35;2139:18;2118:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2118:39:80;;;;;;;;;;;;;;;;;;;;;;2022:142;:::o;5209:262:74:-;5271:1;5266;:6;5262:203;;5293:41;;;;;7616:2:115;7598:21;;;7655:2;7635:18;;;7628:30;7694:34;7689:2;7674:18;;7667:62;-1:-1:-1;;;7760:2:115;7745:18;;7738:32;7802:3;7787:19;;7414:398;5293:41:74;;;;;;;;5353:31;;;8029:21:115;;;8086:2;8066:18;;;8059:30;-1:-1:-1;;;8120:2:115;8105:18;;8098:40;8205:4;8190:20;;8183:36;;;5353:31:74;;;;;;;8170:3:115;5353:31:74;;;5403;;;8442:21:115;;;8499:2;8479:18;;;8472:30;-1:-1:-1;;;8533:2:115;8518:18;;8511:40;8618:4;8603:20;;8596:36;;;5403:31:74;;;;;;;8583:3:115;5403:31:74;;;5448:6;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;8845:51:115;;;-1:-1:-1;;;8912:18:115;;;8905:34;;;;2712:4:74;8955:18:115;;;8948:34;2489:11:74;;1671:64;2586:43;;8818:18:115;;2652:67:74;;;-1:-1:-1;;2652:67:74;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:74;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:74;2820:7;:14;;-1:-1:-1;;2820:14:74;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:658:115:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:115;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:115;;14:658;-1:-1:-1;;;;;;14:658:115:o;677:354::-;745:6;753;806:2;794:9;785:7;781:23;777:32;774:52;;;822:1;819;812:12;774:52;845:23;;;-1:-1:-1;918:2:115;903:18;;890:32;-1:-1:-1;;;;;951:31:115;;941:42;;931:70;;997:1;994;987:12;931:70;1020:5;1010:15;;;677:354;;;;;:::o;1036:1569::-;1240:4;1269:2;1309;1298:9;1294:18;1339:2;1328:9;1321:21;1362:6;1397;1391:13;1428:6;1420;1413:22;1454:2;1444:12;;1487:2;1476:9;1472:18;1465:25;;1549:2;1539:6;1536:1;1532:14;1521:9;1517:30;1513:39;1587:2;1579:6;1575:15;1608:1;1629;1639:937;1655:6;1650:3;1647:15;1639:937;;;1724:22;;;-1:-1:-1;;1720:36:115;1708:49;;1780:13;;1867:9;;-1:-1:-1;;;;;1863:35:115;1848:51;;1938:11;;1932:18;1970:15;;;1963:27;;;2051:19;;1820:15;;;2083:24;;;2173:21;;;;2218:1;;2141:2;2129:15;;;2232:236;2248:8;2243:3;2240:17;2232:236;;;2329:15;;-1:-1:-1;;;;;;2325:42:115;2311:57;;2437:17;;;;2276:1;2267:11;;;;;2394:14;;;;2232:236;;;-1:-1:-1;2554:12:115;;;;2491:5;-1:-1:-1;;;2519:15:115;;;;1681:1;1672:11;1639:937;;;-1:-1:-1;2593:6:115;;1036:1569;-1:-1:-1;;;;;;;;;1036:1569:115:o;2610:250::-;2695:1;2705:113;2719:6;2716:1;2713:13;2705:113;;;2795:11;;;2789:18;2776:11;;;2769:39;2741:2;2734:10;2705:113;;;-1:-1:-1;;2852:1:115;2834:16;;2827:27;2610:250::o;2865:1014::-;3027:4;3056:2;3096;3085:9;3081:18;3126:2;3115:9;3108:21;3149:6;3184;3178:13;3215:6;3207;3200:22;3253:2;3242:9;3238:18;3231:25;;3315:2;3305:6;3302:1;3298:14;3287:9;3283:30;3279:39;3265:53;;3353:2;3345:6;3341:15;3374:1;3384:466;3398:6;3395:1;3392:13;3384:466;;;3463:22;;;-1:-1:-1;;3459:36:115;3447:49;;3519:13;;3561:9;;3583:24;;;3620:74;3561:9;3668:15;;;3655:11;;;3620:74;:::i;:::-;3760:2;3737:17;-1:-1:-1;;3733:31:115;3721:44;;;;3717:53;;;-1:-1:-1;3828:12:115;;;;3793:15;;;;3420:1;3413:9;3384:466;;;-1:-1:-1;3867:6:115;;2865:1014;-1:-1:-1;;;;;;;2865:1014:115:o;5598:184::-;5668:6;5721:2;5709:9;5700:7;5696:23;5692:32;5689:52;;;5737:1;5734;5727:12;5689:52;-1:-1:-1;5760:16:115;;5598:184;-1:-1:-1;5598:184:115:o;5787:380::-;5866:1;5862:12;;;;5909;;;5930:61;;5984:4;5976:6;5972:17;5962:27;;5930:61;6037:2;6029:6;6026:14;6006:18;6003:38;6000:161;;6083:10;6078:3;6074:20;6071:1;6064:31;6118:4;6115:1;6108:15;6146:4;6143:1;6136:15;6000:161;;5787:380;;;:::o;6451:384::-;-1:-1:-1;;;;;;6636:33:115;;6624:46;;6693:13;;6606:3;;6715:74;6693:13;6778:1;6769:11;;6762:4;6750:17;;6715:74;:::i;:::-;6809:16;;;;6827:1;6805:24;;6451:384;-1:-1:-1;;;6451:384:115:o;6840:287::-;6969:3;7007:6;7001:13;7023:66;7082:6;7077:3;7070:4;7062:6;7058:17;7023:66;:::i;:::-;7105:16;;;;;6840:287;-1:-1:-1;;6840:287:115:o;7132:277::-;7199:6;7252:2;7240:9;7231:7;7227:23;7223:32;7220:52;;;7268:1;7265;7258:12;7220:52;7300:9;7294:16;7353:5;7346:13;7339:21;7332:5;7329:32;7319:60;;7375:1;7372;7365:12;7319:60;7398:5;7132:277;-1:-1:-1;;;7132:277:115:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testFuzz_maxDepositTest(bytes32,address)": "30f8f373"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ilk\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"testFuzz_maxDepositTest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/arranger-conduit/ViewFunctions.t.sol\":\"ArrangerConduit_MaxDepositTests\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":dss-allocator/=lib/dss-allocator/\",\":dss-interfaces/=lib/dss-test/lib/dss-interfaces/src/\",\":dss-test/=lib/dss-test/src/\",\":forge-std/=lib/forge-std/src/\",\":mock-erc20/=lib/mock-erc20/\",\":upgradeable-proxy/=lib/upgradeable-proxy/src/\"]},\"sources\":{\"lib/dss-allocator/src/AllocatorRegistry.sol\":{\"keccak256\":\"0xcbcfba4476ddc46500eee318971b06a6760d6113ef19a4a443a07682b0a5af02\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://6a030e626a65a7bcd3dc2f5401cf4a7fd6c95c2da19775ddc0fc1fd44d0ec782\",\"dweb:/ipfs/QmazjKX5sGzrLEUifUgKq4BQLzrZRyieqZ3fesTEj4Khto\"]},\"lib/dss-allocator/src/AllocatorRoles.sol\":{\"keccak256\":\"0x933e6872d6076a33c690521b1b23dd9da06ce83ebb2a8932052f69641414d470\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://d91eb943c8b8afa41a112d5284f9a9cdb1eaca1937c391e1e23b9b2ab2c0e155\",\"dweb:/ipfs/QmT5hxV2fVSuJ8KxmKFEe82cq18ndJ3ScTQc3HCpkQ1nXU\"]},\"lib/dss-allocator/src/interfaces/IAllocatorConduit.sol\":{\"keccak256\":\"0x0cae7155239f95952ccd98619b5cd007ddfef2a6113d1545dab5ef95099fee92\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://813e04c903eb1dfbf6338419290869498b1fb79fba3fe8d5a401453f21cb4df8\",\"dweb:/ipfs/QmfY9SP2wKeJmsW5diAhgyMiqfjwvUZEGPymFyB5ZCMj57\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x51e6eb138fc953fac1ac78012a39b3f16d9289ce06a222ba93bb0621768f96e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653c577e054cf578594148a07b286571d494f401b6d4a940d3ccabd47b29233d\",\"dweb:/ipfs/QmTWDVvR4m82MGXWYY8BCaVN89TguQJSLqRgzHzrMkFHtx\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x43d853d6dd3c3f3d5a614a25f4553e2d4b719426a9eb2e8e433155306a5fdc02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9dc16367f2391bf642f3762bfde686c643a08e8712ce56ad1026eb397247428e\",\"dweb:/ipfs/QmTpEko9tKnBbJNQw7T1oGoa4Gyfh6y28JbNdrQQXKUNAb\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xf5762db8ef95099bbe77578cd9349511ed77f4dd63ec98cc6b7cd711447830c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6b0360806a9804eac0f7e07492b5db9c4953c521dabb9a11b17dd610d5b804c\",\"dweb:/ipfs/QmUFozSt3W7drBRdm1cdRow61EABqSLJtkvYZXWmoHUPss\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xf3b62c75cea11a0e8ef8e6526e5e5c74ae47a892b9bcefc0e98d76066e1ffd24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a41faaf836453e02c71fc272c80b3c90a614b30c9ba636512db0d033c7b93beb\",\"dweb:/ipfs/QmeQAreYYaxztQtFLQdHCzCPEorj9T5foSu2hQmxk7xT5x\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xb569d0b4398fad95f508fb854e832143edf69a897af4250f5f60fe195a2066c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84b722ada97ea7bb841cdc0fa556aa36a02ff2d380fa24f6dc0717a71c6d9c7c\",\"dweb:/ipfs/QmfCH9Q4tvJhPM286GFsE4UCP4YncLpRu4Nwa2ZkHdRfbw\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/mock-erc20/src/MockERC20.sol\":{\"keccak256\":\"0xeaa9a7602876e705806bb3cc182729bbc728acc83c0099c6053e29289d83dfd5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9a72c0ad54cf0af24e0d9194bc84e5810759a636a363117998901c788c2ce25d\",\"dweb:/ipfs/QmcUBWUY5q62UHQV8ExJzdUERQD4XWFy6XBvf1eM6D2bfC\"]},\"lib/upgradeable-proxy/src/UpgradeableProxied.sol\":{\"keccak256\":\"0xe365dd9863a55765d667416cee2c0d74e4b382c2cf02ba327e8a63e7ec34e4f0\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://1a1b489b3adebc321c02a2e8e73c0740a3244839c42a29785bfe0e2ea856088c\",\"dweb:/ipfs/Qma2oQnZ3QwCqmfWytux7x2rfVckGVcm8v3YxoFRZGTcai\"]},\"lib/upgradeable-proxy/src/UpgradeableProxy.sol\":{\"keccak256\":\"0x8ccba10fa9edcfe87c059ae42315913b29425635fabe8a6d1b6ec639b199bc41\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://ce4226fe35dffea2399b5ab1909aafa005d0a5d1cfdbdf77b1c406fba2128aff\",\"dweb:/ipfs/QmdYgTwUyFihEmX62LiZ9AeJ4WGQ5c93Qor4gR9p149JpX\"]},\"lib/upgradeable-proxy/src/interfaces/IUpgradeableProxied.sol\":{\"keccak256\":\"0xd5aa4b5f0ab4d9192cba580ee4c34fe08276d80f0b4f70dde4e96b025d4d91a6\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://6730289331a620f2c39814c68c0f4528de6d49be692b30109fa795189a68e6f0\",\"dweb:/ipfs/QmW48izgL6Kf4AgByeRET66RtiTym89FcALSitA78yX6SG\"]},\"lib/upgradeable-proxy/src/interfaces/IUpgradeableProxy.sol\":{\"keccak256\":\"0x9273681de32ac805c7f35f4e999c89836e5ea41d766a87846f9fca023cbe7b20\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://1079c8cc55d498223abc2880a1704827e7282ab2be19e42828c484bee52a7ed4\",\"dweb:/ipfs/QmTk7yPcAmUap1AtYp6H8d9hDt7mQsyjPGcFRD9SVjrWF9\"]},\"src/ArrangerConduit.sol\":{\"keccak256\":\"0xc4a122334206133ecdaf675754cef0e206bde6efaf169e5cf8b4674a9ac1c908\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://fadf42861a00578b35f45ad6b8438a9ea08b74e614b00cacafabd6631f9d98e8\",\"dweb:/ipfs/QmdXUWc4Kg7ZknpTco5cVWRDXZdwc6rTSiQPGMicpaDizd\"]},\"src/interfaces/IArrangerConduit.sol\":{\"keccak256\":\"0xc345897b78141cd981cd1f59737e929d9e4f6ba96f4925ca7048d4e0af9cd27f\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://d2e2cde34d7f698c31aa5d22d53c970d6dcfa4d7ec7c91f09117808b480673d5\",\"dweb:/ipfs/QmSDwKJ4VcJYFGd2JT8bxqZrv1daduBuNnLJ16DgKfLhC8\"]},\"test/arranger-conduit/ArrangerConduitHarness.t.sol\":{\"keccak256\":\"0x0bd85d6fc162d8ed764d489c99d945c17b33ab219681e0c5e3ba26565ec45f70\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://484b46308623715264b725eaec4729ca7a80e2d0d3a4f1d2b32fbafa00522f45\",\"dweb:/ipfs/QmW8hEj3TCC3oebAuhCCwyQiCLV4yC5pS7zj8khxe89eC1\"]},\"test/arranger-conduit/ConduitTestBase.t.sol\":{\"keccak256\":\"0x92db9dc30667e11f5d68fc6d3e0a7029bac63d69dba42bf32bc77187e487744f\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://7c2b854c08df341a1c85412b58c8a9329f5026d7ead2172a52cefdbcde4e28f2\",\"dweb:/ipfs/QmPFkmmN5Lp9Qni75KX21yqa97m7vBhq9JP6oKe1ggXiba\"]},\"test/arranger-conduit/ViewFunctions.t.sol\":{\"keccak256\":\"0x88c59fe1ab952710e57368868f591a2e551d730c3aaf8a547a7f2f211c6a465b\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://fe68543711cb30c1cf6cf77df667663a18840ace28238081205f5b2a57e8b00a\",\"dweb:/ipfs/QmWPmXNCjKjBQBzVuzguc9EnnVsScomRHzjXTQ6JdhUquL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "ilk",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFuzz_maxDepositTest"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":dss-allocator/=lib/dss-allocator/",
        ":dss-interfaces/=lib/dss-test/lib/dss-interfaces/src/",
        ":dss-test/=lib/dss-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":mock-erc20/=lib/mock-erc20/",
        ":upgradeable-proxy/=lib/upgradeable-proxy/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/arranger-conduit/ViewFunctions.t.sol": "ArrangerConduit_MaxDepositTests"
      },
      "libraries": {}
    },
    "sources": {
      "lib/dss-allocator/src/AllocatorRegistry.sol": {
        "keccak256": "0xcbcfba4476ddc46500eee318971b06a6760d6113ef19a4a443a07682b0a5af02",
        "urls": [
          "bzz-raw://6a030e626a65a7bcd3dc2f5401cf4a7fd6c95c2da19775ddc0fc1fd44d0ec782",
          "dweb:/ipfs/QmazjKX5sGzrLEUifUgKq4BQLzrZRyieqZ3fesTEj4Khto"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/dss-allocator/src/AllocatorRoles.sol": {
        "keccak256": "0x933e6872d6076a33c690521b1b23dd9da06ce83ebb2a8932052f69641414d470",
        "urls": [
          "bzz-raw://d91eb943c8b8afa41a112d5284f9a9cdb1eaca1937c391e1e23b9b2ab2c0e155",
          "dweb:/ipfs/QmT5hxV2fVSuJ8KxmKFEe82cq18ndJ3ScTQc3HCpkQ1nXU"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/dss-allocator/src/interfaces/IAllocatorConduit.sol": {
        "keccak256": "0x0cae7155239f95952ccd98619b5cd007ddfef2a6113d1545dab5ef95099fee92",
        "urls": [
          "bzz-raw://813e04c903eb1dfbf6338419290869498b1fb79fba3fe8d5a401453f21cb4df8",
          "dweb:/ipfs/QmfY9SP2wKeJmsW5diAhgyMiqfjwvUZEGPymFyB5ZCMj57"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x51e6eb138fc953fac1ac78012a39b3f16d9289ce06a222ba93bb0621768f96e6",
        "urls": [
          "bzz-raw://653c577e054cf578594148a07b286571d494f401b6d4a940d3ccabd47b29233d",
          "dweb:/ipfs/QmTWDVvR4m82MGXWYY8BCaVN89TguQJSLqRgzHzrMkFHtx"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x43d853d6dd3c3f3d5a614a25f4553e2d4b719426a9eb2e8e433155306a5fdc02",
        "urls": [
          "bzz-raw://9dc16367f2391bf642f3762bfde686c643a08e8712ce56ad1026eb397247428e",
          "dweb:/ipfs/QmTpEko9tKnBbJNQw7T1oGoa4Gyfh6y28JbNdrQQXKUNAb"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xf5762db8ef95099bbe77578cd9349511ed77f4dd63ec98cc6b7cd711447830c1",
        "urls": [
          "bzz-raw://a6b0360806a9804eac0f7e07492b5db9c4953c521dabb9a11b17dd610d5b804c",
          "dweb:/ipfs/QmUFozSt3W7drBRdm1cdRow61EABqSLJtkvYZXWmoHUPss"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xf3b62c75cea11a0e8ef8e6526e5e5c74ae47a892b9bcefc0e98d76066e1ffd24",
        "urls": [
          "bzz-raw://a41faaf836453e02c71fc272c80b3c90a614b30c9ba636512db0d033c7b93beb",
          "dweb:/ipfs/QmeQAreYYaxztQtFLQdHCzCPEorj9T5foSu2hQmxk7xT5x"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xb569d0b4398fad95f508fb854e832143edf69a897af4250f5f60fe195a2066c5",
        "urls": [
          "bzz-raw://84b722ada97ea7bb841cdc0fa556aa36a02ff2d380fa24f6dc0717a71c6d9c7c",
          "dweb:/ipfs/QmfCH9Q4tvJhPM286GFsE4UCP4YncLpRu4Nwa2ZkHdRfbw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/mock-erc20/src/MockERC20.sol": {
        "keccak256": "0xeaa9a7602876e705806bb3cc182729bbc728acc83c0099c6053e29289d83dfd5",
        "urls": [
          "bzz-raw://9a72c0ad54cf0af24e0d9194bc84e5810759a636a363117998901c788c2ce25d",
          "dweb:/ipfs/QmcUBWUY5q62UHQV8ExJzdUERQD4XWFy6XBvf1eM6D2bfC"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/upgradeable-proxy/src/UpgradeableProxied.sol": {
        "keccak256": "0xe365dd9863a55765d667416cee2c0d74e4b382c2cf02ba327e8a63e7ec34e4f0",
        "urls": [
          "bzz-raw://1a1b489b3adebc321c02a2e8e73c0740a3244839c42a29785bfe0e2ea856088c",
          "dweb:/ipfs/Qma2oQnZ3QwCqmfWytux7x2rfVckGVcm8v3YxoFRZGTcai"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/upgradeable-proxy/src/UpgradeableProxy.sol": {
        "keccak256": "0x8ccba10fa9edcfe87c059ae42315913b29425635fabe8a6d1b6ec639b199bc41",
        "urls": [
          "bzz-raw://ce4226fe35dffea2399b5ab1909aafa005d0a5d1cfdbdf77b1c406fba2128aff",
          "dweb:/ipfs/QmdYgTwUyFihEmX62LiZ9AeJ4WGQ5c93Qor4gR9p149JpX"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/upgradeable-proxy/src/interfaces/IUpgradeableProxied.sol": {
        "keccak256": "0xd5aa4b5f0ab4d9192cba580ee4c34fe08276d80f0b4f70dde4e96b025d4d91a6",
        "urls": [
          "bzz-raw://6730289331a620f2c39814c68c0f4528de6d49be692b30109fa795189a68e6f0",
          "dweb:/ipfs/QmW48izgL6Kf4AgByeRET66RtiTym89FcALSitA78yX6SG"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "lib/upgradeable-proxy/src/interfaces/IUpgradeableProxy.sol": {
        "keccak256": "0x9273681de32ac805c7f35f4e999c89836e5ea41d766a87846f9fca023cbe7b20",
        "urls": [
          "bzz-raw://1079c8cc55d498223abc2880a1704827e7282ab2be19e42828c484bee52a7ed4",
          "dweb:/ipfs/QmTk7yPcAmUap1AtYp6H8d9hDt7mQsyjPGcFRD9SVjrWF9"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/ArrangerConduit.sol": {
        "keccak256": "0xc4a122334206133ecdaf675754cef0e206bde6efaf169e5cf8b4674a9ac1c908",
        "urls": [
          "bzz-raw://fadf42861a00578b35f45ad6b8438a9ea08b74e614b00cacafabd6631f9d98e8",
          "dweb:/ipfs/QmdXUWc4Kg7ZknpTco5cVWRDXZdwc6rTSiQPGMicpaDizd"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/interfaces/IArrangerConduit.sol": {
        "keccak256": "0xc345897b78141cd981cd1f59737e929d9e4f6ba96f4925ca7048d4e0af9cd27f",
        "urls": [
          "bzz-raw://d2e2cde34d7f698c31aa5d22d53c970d6dcfa4d7ec7c91f09117808b480673d5",
          "dweb:/ipfs/QmSDwKJ4VcJYFGd2JT8bxqZrv1daduBuNnLJ16DgKfLhC8"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "test/arranger-conduit/ArrangerConduitHarness.t.sol": {
        "keccak256": "0x0bd85d6fc162d8ed764d489c99d945c17b33ab219681e0c5e3ba26565ec45f70",
        "urls": [
          "bzz-raw://484b46308623715264b725eaec4729ca7a80e2d0d3a4f1d2b32fbafa00522f45",
          "dweb:/ipfs/QmW8hEj3TCC3oebAuhCCwyQiCLV4yC5pS7zj8khxe89eC1"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "test/arranger-conduit/ConduitTestBase.t.sol": {
        "keccak256": "0x92db9dc30667e11f5d68fc6d3e0a7029bac63d69dba42bf32bc77187e487744f",
        "urls": [
          "bzz-raw://7c2b854c08df341a1c85412b58c8a9329f5026d7ead2172a52cefdbcde4e28f2",
          "dweb:/ipfs/QmPFkmmN5Lp9Qni75KX21yqa97m7vBhq9JP6oKe1ggXiba"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "test/arranger-conduit/ViewFunctions.t.sol": {
        "keccak256": "0x88c59fe1ab952710e57368868f591a2e551d730c3aaf8a547a7f2f211c6a465b",
        "urls": [
          "bzz-raw://fe68543711cb30c1cf6cf77df667663a18840ace28238081205f5b2a57e8b00a",
          "dweb:/ipfs/QmWPmXNCjKjBQBzVuzguc9EnnVsScomRHzjXTQ6JdhUquL"
        ],
        "license": "AGPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/arranger-conduit/ViewFunctions.t.sol",
    "id": 64805,
    "exportedSymbols": {
      "ArrangerConduitHarness": [
        57281
      ],
      "ArrangerConduit_IsCancelableTest": [
        64804
      ],
      "ArrangerConduit_MaxDepositTests": [
        64562
      ],
      "ConduitAssetTestBase": [
        58353
      ],
      "ConduitTestBase": [
        58036
      ],
      "IArrangerConduit": [
        57105
      ],
      "MockERC20": [
        55531
      ],
      "Test": [
        24276
      ],
      "UpgradeableProxy": [
        55663
      ],
      "console": [
        41992
      ]
    },
    "nodeType": "SourceUnit",
    "src": "46:2581:112",
    "nodes": [
      {
        "id": 64523,
        "nodeType": "PragmaDirective",
        "src": "46:24:112",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 64525,
        "nodeType": "ImportDirective",
        "src": "72:88:112",
        "nodes": [],
        "absolutePath": "lib/upgradeable-proxy/src/UpgradeableProxy.sol",
        "file": "../../lib/upgradeable-proxy/src/UpgradeableProxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64805,
        "sourceUnit": 55664,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64524,
              "name": "UpgradeableProxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55663,
              "src": "81:16:112",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64527,
        "nodeType": "ImportDirective",
        "src": "162:75:112",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console2.sol",
        "file": "../../lib/forge-std/src/console2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64805,
        "sourceUnit": 41993,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64526,
              "name": "console2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41992,
              "src": "171:8:112",
              "typeDescriptions": {}
            },
            "local": "console",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64529,
        "nodeType": "ImportDirective",
        "src": "238:71:112",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "../../lib/forge-std/src/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64805,
        "sourceUnit": 24277,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64528,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24276,
              "src": "247:4:112",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64531,
        "nodeType": "ImportDirective",
        "src": "311:67:112",
        "nodes": [],
        "absolutePath": "lib/mock-erc20/src/MockERC20.sol",
        "file": "../../lib/mock-erc20/src/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64805,
        "sourceUnit": 55532,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64530,
              "name": "MockERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55531,
              "src": "320:9:112",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64533,
        "nodeType": "ImportDirective",
        "src": "380:77:112",
        "nodes": [],
        "absolutePath": "src/interfaces/IArrangerConduit.sol",
        "file": "../../src/interfaces/IArrangerConduit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64805,
        "sourceUnit": 57106,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64532,
              "name": "IArrangerConduit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 57105,
              "src": "389:16:112",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64535,
        "nodeType": "ImportDirective",
        "src": "459:72:112",
        "nodes": [],
        "absolutePath": "test/arranger-conduit/ArrangerConduitHarness.t.sol",
        "file": "./ArrangerConduitHarness.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64805,
        "sourceUnit": 57282,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64534,
              "name": "ArrangerConduitHarness",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 57281,
              "src": "468:22:112",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64538,
        "nodeType": "ImportDirective",
        "src": "533:80:112",
        "nodes": [],
        "absolutePath": "test/arranger-conduit/ConduitTestBase.t.sol",
        "file": "./ConduitTestBase.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64805,
        "sourceUnit": 58354,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64536,
              "name": "ConduitTestBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 58036,
              "src": "542:15:112",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 64537,
              "name": "ConduitAssetTestBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 58353,
              "src": "559:20:112",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64562,
        "nodeType": "ContractDefinition",
        "src": "615:216:112",
        "nodes": [
          {
            "id": 64561,
            "nodeType": "FunctionDefinition",
            "src": "682:146:112",
            "nodes": [],
            "body": {
              "id": 64560,
              "nodeType": "Block",
              "src": "752:76:112",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64550,
                            "name": "ilk",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64542,
                            "src": "790:3:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 64551,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64544,
                            "src": "795:5:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 64548,
                            "name": "conduit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57966,
                            "src": "771:7:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ArrangerConduit_$56478",
                              "typeString": "contract ArrangerConduit"
                            }
                          },
                          "id": 64549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "779:10:112",
                          "memberName": "maxDeposit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56434,
                          "src": "771:18:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_bytes32_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (bytes32,address) pure external returns (uint256)"
                          }
                        },
                        "id": 64552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "771:30:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 64555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "808:7:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 64554,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "808:7:112",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 64553,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "803:4:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 64556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "803:13:112",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 64557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "817:3:112",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "803:17:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 64547,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15157,
                        15182,
                        15195,
                        15211,
                        15253,
                        15295,
                        15337,
                        15374,
                        15411,
                        15448,
                        12992,
                        13017,
                        13047,
                        13072,
                        13131,
                        13156,
                        13186,
                        13211,
                        14684,
                        14719
                      ],
                      "referencedDeclaration": 13186,
                      "src": "762:8:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 64558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "762:59:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64559,
                  "nodeType": "ExpressionStatement",
                  "src": "762:59:112"
                }
              ]
            },
            "functionSelector": "30f8f373",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFuzz_maxDepositTest",
            "nameLocation": "691:23:112",
            "parameters": {
              "id": 64545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64542,
                  "mutability": "mutable",
                  "name": "ilk",
                  "nameLocation": "723:3:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 64561,
                  "src": "715:11:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 64541,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "715:7:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64544,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "736:5:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 64561,
                  "src": "728:13:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64543,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "728:7:112",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "714:28:112"
            },
            "returnParameters": {
              "id": 64546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "752:0:112"
            },
            "scope": 64562,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 64539,
              "name": "ConduitTestBase",
              "nameLocations": [
                "659:15:112"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 58036,
              "src": "659:15:112"
            },
            "id": 64540,
            "nodeType": "InheritanceSpecifier",
            "src": "659:15:112"
          }
        ],
        "canonicalName": "ArrangerConduit_MaxDepositTests",
        "contractDependencies": [
          125,
          498,
          55663,
          56478
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          64562,
          58036,
          24276,
          15029,
          15026,
          24225,
          19983,
          19693,
          18929,
          17149,
          16456,
          14963
        ],
        "name": "ArrangerConduit_MaxDepositTests",
        "nameLocation": "624:31:112",
        "scope": 64805,
        "usedErrors": [],
        "usedEvents": [
          12677,
          12681,
          12685,
          12689,
          12693,
          12697,
          12701,
          12705,
          12711,
          12717,
          12725,
          12733,
          12739,
          12745,
          12751,
          12757,
          15051,
          15056,
          15061,
          15068,
          15075,
          15082
        ]
      },
      {
        "id": 64804,
        "nodeType": "ContractDefinition",
        "src": "833:1793:112",
        "nodes": [
          {
            "id": 64567,
            "nodeType": "VariableDeclaration",
            "src": "906:37:112",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "conduitHarness",
            "nameLocation": "929:14:112",
            "scope": 64804,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
              "typeString": "contract ArrangerConduitHarness"
            },
            "typeName": {
              "id": 64566,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 64565,
                "name": "ArrangerConduitHarness",
                "nameLocations": [
                  "906:22:112"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 57281,
                "src": "906:22:112"
              },
              "referencedDeclaration": 57281,
              "src": "906:22:112",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                "typeString": "contract ArrangerConduitHarness"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 64690,
            "nodeType": "FunctionDefinition",
            "src": "950:858:112",
            "nodes": [],
            "body": {
              "id": 64689,
              "nodeType": "Block",
              "src": "983:825:112",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    64573
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64573,
                      "mutability": "mutable",
                      "name": "conduitProxy",
                      "nameLocation": "1017:12:112",
                      "nodeType": "VariableDeclaration",
                      "scope": 64689,
                      "src": "993:36:112",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UpgradeableProxy_$55663",
                        "typeString": "contract UpgradeableProxy"
                      },
                      "typeName": {
                        "id": 64572,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 64571,
                          "name": "UpgradeableProxy",
                          "nameLocations": [
                            "993:16:112"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 55663,
                          "src": "993:16:112"
                        },
                        "referencedDeclaration": 55663,
                        "src": "993:16:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UpgradeableProxy_$55663",
                          "typeString": "contract UpgradeableProxy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64578,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 64576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1041:20:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UpgradeableProxy_$55663_$",
                        "typeString": "function () returns (contract UpgradeableProxy)"
                      },
                      "typeName": {
                        "id": 64575,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 64574,
                          "name": "UpgradeableProxy",
                          "nameLocations": [
                            "1045:16:112"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 55663,
                          "src": "1045:16:112"
                        },
                        "referencedDeclaration": 55663,
                        "src": "1045:16:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UpgradeableProxy_$55663",
                          "typeString": "contract UpgradeableProxy"
                        }
                      }
                    },
                    "id": 64577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1041:22:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UpgradeableProxy_$55663",
                      "typeString": "contract UpgradeableProxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "993:70:112"
                },
                {
                  "assignments": [
                    64581
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64581,
                      "mutability": "mutable",
                      "name": "conduitImplementation",
                      "nameLocation": "1097:21:112",
                      "nodeType": "VariableDeclaration",
                      "scope": 64689,
                      "src": "1073:45:112",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                        "typeString": "contract ArrangerConduitHarness"
                      },
                      "typeName": {
                        "id": 64580,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 64579,
                          "name": "ArrangerConduitHarness",
                          "nameLocations": [
                            "1073:22:112"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 57281,
                          "src": "1073:22:112"
                        },
                        "referencedDeclaration": 57281,
                        "src": "1073:22:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                          "typeString": "contract ArrangerConduitHarness"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64586,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 64584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1121:26:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ArrangerConduitHarness_$57281_$",
                        "typeString": "function () returns (contract ArrangerConduitHarness)"
                      },
                      "typeName": {
                        "id": 64583,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 64582,
                          "name": "ArrangerConduitHarness",
                          "nameLocations": [
                            "1125:22:112"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 57281,
                          "src": "1125:22:112"
                        },
                        "referencedDeclaration": 57281,
                        "src": "1125:22:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                          "typeString": "contract ArrangerConduitHarness"
                        }
                      }
                    },
                    "id": 64585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1121:28:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                      "typeString": "contract ArrangerConduitHarness"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1073:76:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64592,
                            "name": "conduitImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64581,
                            "src": "1199:21:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                              "typeString": "contract ArrangerConduitHarness"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                              "typeString": "contract ArrangerConduitHarness"
                            }
                          ],
                          "id": 64591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1191:7:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64590,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1191:7:112",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1191:30:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 64587,
                        "name": "conduitProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64573,
                        "src": "1160:12:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UpgradeableProxy_$55663",
                          "typeString": "contract UpgradeableProxy"
                        }
                      },
                      "id": 64589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1173:17:112",
                      "memberName": "setImplementation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55644,
                      "src": "1160:30:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 64594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1160:62:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64595,
                  "nodeType": "ExpressionStatement",
                  "src": "1160:62:112"
                },
                {
                  "expression": {
                    "id": 64603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64596,
                      "name": "conduitHarness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64567,
                      "src": "1233:14:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                        "typeString": "contract ArrangerConduitHarness"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 64600,
                              "name": "conduitProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64573,
                              "src": "1281:12:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_UpgradeableProxy_$55663",
                                "typeString": "contract UpgradeableProxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_UpgradeableProxy_$55663",
                                "typeString": "contract UpgradeableProxy"
                              }
                            ],
                            "id": 64599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1273:7:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 64598,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1273:7:112",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 64601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1273:21:112",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 64597,
                        "name": "ArrangerConduitHarness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57281,
                        "src": "1250:22:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ArrangerConduitHarness_$57281_$",
                          "typeString": "type(contract ArrangerConduitHarness)"
                        }
                      },
                      "id": 64602,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1250:45:112",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                        "typeString": "contract ArrangerConduitHarness"
                      }
                    },
                    "src": "1233:62:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                      "typeString": "contract ArrangerConduitHarness"
                    }
                  },
                  "id": 64604,
                  "nodeType": "ExpressionStatement",
                  "src": "1233:62:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64608,
                        "name": "ilk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58044,
                        "src": "1320:3:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "627566666572",
                        "id": 64609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1325:8:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9fcef596d62dca8e51b6ba3414901947c0e6821d4483b2f3327ce87c2d4e662e",
                          "typeString": "literal_string \"buffer\""
                        },
                        "value": "buffer"
                      },
                      {
                        "arguments": [
                          {
                            "id": 64612,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1343:4:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ArrangerConduit_IsCancelableTest_$64804",
                              "typeString": "contract ArrangerConduit_IsCancelableTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ArrangerConduit_IsCancelableTest_$64804",
                              "typeString": "contract ArrangerConduit_IsCancelableTest"
                            }
                          ],
                          "id": 64611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1335:7:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64610,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1335:7:112",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1335:13:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9fcef596d62dca8e51b6ba3414901947c0e6821d4483b2f3327ce87c2d4e662e",
                          "typeString": "literal_string \"buffer\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 64605,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57956,
                        "src": "1306:8:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AllocatorRegistry_$125",
                          "typeString": "contract AllocatorRegistry"
                        }
                      },
                      "id": 64607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1315:4:112",
                      "memberName": "file",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 124,
                      "src": "1306:13:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address) external"
                      }
                    },
                    "id": 64614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1306:43:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64615,
                  "nodeType": "ExpressionStatement",
                  "src": "1306:43:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7265676973747279",
                        "id": 64619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1380:10:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d1adaede68d344519025e2ff574650cd99d3830fe6d274c7a7843cdc00e17938",
                          "typeString": "literal_string \"registry\""
                        },
                        "value": "registry"
                      },
                      {
                        "arguments": [
                          {
                            "id": 64622,
                            "name": "registry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57956,
                            "src": "1400:8:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AllocatorRegistry_$125",
                              "typeString": "contract AllocatorRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AllocatorRegistry_$125",
                              "typeString": "contract AllocatorRegistry"
                            }
                          ],
                          "id": 64621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1392:7:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64620,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1392:7:112",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1392:17:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d1adaede68d344519025e2ff574650cd99d3830fe6d274c7a7843cdc00e17938",
                          "typeString": "literal_string \"registry\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 64616,
                        "name": "conduitHarness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64567,
                        "src": "1360:14:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                          "typeString": "contract ArrangerConduitHarness"
                        }
                      },
                      "id": 64618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1375:4:112",
                      "memberName": "file",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55924,
                      "src": "1360:19:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 64624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1360:50:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64625,
                  "nodeType": "ExpressionStatement",
                  "src": "1360:50:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "726f6c6573",
                        "id": 64629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1440:7:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de9bdca322e1a848f72215bc15cf2c87fe7749145789a9ee281a2a6290af26ab",
                          "typeString": "literal_string \"roles\""
                        },
                        "value": "roles"
                      },
                      {
                        "arguments": [
                          {
                            "id": 64632,
                            "name": "roles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57963,
                            "src": "1459:5:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AllocatorRoles_$498",
                              "typeString": "contract AllocatorRoles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AllocatorRoles_$498",
                              "typeString": "contract AllocatorRoles"
                            }
                          ],
                          "id": 64631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1451:7:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64630,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1451:7:112",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1451:14:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_de9bdca322e1a848f72215bc15cf2c87fe7749145789a9ee281a2a6290af26ab",
                          "typeString": "literal_string \"roles\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 64626,
                        "name": "conduitHarness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64567,
                        "src": "1420:14:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                          "typeString": "contract ArrangerConduitHarness"
                        }
                      },
                      "id": 64628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1435:4:112",
                      "memberName": "file",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55924,
                      "src": "1420:19:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 64634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1420:46:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64635,
                  "nodeType": "ExpressionStatement",
                  "src": "1420:46:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64639,
                        "name": "ilk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58044,
                        "src": "1495:3:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64642,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1508:4:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ArrangerConduit_IsCancelableTest_$64804",
                              "typeString": "contract ArrangerConduit_IsCancelableTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ArrangerConduit_IsCancelableTest_$64804",
                              "typeString": "contract ArrangerConduit_IsCancelableTest"
                            }
                          ],
                          "id": 64641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1500:7:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64640,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1500:7:112",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1500:13:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 64636,
                        "name": "roles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57963,
                        "src": "1477:5:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AllocatorRoles_$498",
                          "typeString": "contract AllocatorRoles"
                        }
                      },
                      "id": 64638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1483:11:112",
                      "memberName": "setIlkAdmin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 343,
                      "src": "1477:17:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 64644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1477:37:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64645,
                  "nodeType": "ExpressionStatement",
                  "src": "1477:37:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64649,
                        "name": "ilk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58044,
                        "src": "1542:3:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64652,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1555:4:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ArrangerConduit_IsCancelableTest_$64804",
                              "typeString": "contract ArrangerConduit_IsCancelableTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ArrangerConduit_IsCancelableTest_$64804",
                              "typeString": "contract ArrangerConduit_IsCancelableTest"
                            }
                          ],
                          "id": 64651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1547:7:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64650,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1547:7:112",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1547:13:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 64654,
                        "name": "ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58041,
                        "src": "1562:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 64655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1568:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 64646,
                        "name": "roles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57963,
                        "src": "1524:5:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AllocatorRoles_$498",
                          "typeString": "contract AllocatorRoles"
                        }
                      },
                      "id": 64648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1530:11:112",
                      "memberName": "setUserRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 399,
                      "src": "1524:17:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_uint8_$_t_bool_$returns$__$",
                        "typeString": "function (bytes32,address,uint8,bool) external"
                      }
                    },
                    "id": 64656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1524:49:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64657,
                  "nodeType": "ExpressionStatement",
                  "src": "1524:49:112"
                },
                {
                  "assignments": [
                    64659
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64659,
                      "mutability": "mutable",
                      "name": "conduit_",
                      "nameLocation": "1592:8:112",
                      "nodeType": "VariableDeclaration",
                      "scope": 64689,
                      "src": "1584:16:112",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 64658,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1584:7:112",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64664,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 64662,
                        "name": "conduitHarness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64567,
                        "src": "1611:14:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                          "typeString": "contract ArrangerConduitHarness"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                          "typeString": "contract ArrangerConduitHarness"
                        }
                      ],
                      "id": 64661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1603:7:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 64660,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1603:7:112",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 64663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1603:23:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1584:42:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64668,
                        "name": "ilk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58044,
                        "src": "1657:3:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 64669,
                        "name": "ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58041,
                        "src": "1662:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 64670,
                        "name": "conduit_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64659,
                        "src": "1668:8:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 64671,
                            "name": "conduit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57966,
                            "src": "1678:7:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ArrangerConduit_$56478",
                              "typeString": "contract ArrangerConduit"
                            }
                          },
                          "id": 64672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1686:7:112",
                          "memberName": "deposit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55983,
                          "src": "1678:15:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (bytes32,address,uint256) external"
                          }
                        },
                        "id": 64673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1694:8:112",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "1678:24:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 64674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1709:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 64665,
                        "name": "roles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57963,
                        "src": "1637:5:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AllocatorRoles_$498",
                          "typeString": "contract AllocatorRoles"
                        }
                      },
                      "id": 64667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1643:13:112",
                      "memberName": "setRoleAction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 462,
                      "src": "1637:19:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint8_$_t_address_$_t_bytes4_$_t_bool_$returns$__$",
                        "typeString": "function (bytes32,uint8,address,bytes4,bool) external"
                      }
                    },
                    "id": 64675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1637:77:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64676,
                  "nodeType": "ExpressionStatement",
                  "src": "1637:77:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64680,
                        "name": "ilk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58044,
                        "src": "1744:3:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 64681,
                        "name": "ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58041,
                        "src": "1749:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 64682,
                        "name": "conduit_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64659,
                        "src": "1755:8:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 64683,
                            "name": "conduit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57966,
                            "src": "1765:7:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ArrangerConduit_$56478",
                              "typeString": "contract ArrangerConduit"
                            }
                          },
                          "id": 64684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1773:12:112",
                          "memberName": "requestFunds",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56130,
                          "src": "1765:20:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (bytes32,address,uint256,string memory) external returns (uint256)"
                          }
                        },
                        "id": 64685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1786:8:112",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "1765:29:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 64686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1796:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 64677,
                        "name": "roles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57963,
                        "src": "1724:5:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AllocatorRoles_$498",
                          "typeString": "contract AllocatorRoles"
                        }
                      },
                      "id": 64679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1730:13:112",
                      "memberName": "setRoleAction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 462,
                      "src": "1724:19:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint8_$_t_address_$_t_bytes4_$_t_bool_$returns$__$",
                        "typeString": "function (bytes32,uint8,address,bytes4,bool) external"
                      }
                    },
                    "id": 64687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1724:77:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64688,
                  "nodeType": "ExpressionStatement",
                  "src": "1724:77:112"
                }
              ]
            },
            "baseFunctions": [
              58083
            ],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "959:5:112",
            "overrides": {
              "id": 64569,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "974:8:112"
            },
            "parameters": {
              "id": 64568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "964:2:112"
            },
            "returnParameters": {
              "id": 64570,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "983:0:112"
            },
            "scope": 64804,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64803,
            "nodeType": "FunctionDefinition",
            "src": "1814:809:112",
            "nodes": [],
            "body": {
              "id": 64802,
              "nodeType": "Block",
              "src": "1852:771:112",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64698,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1881:4:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ArrangerConduit_IsCancelableTest_$64804",
                              "typeString": "contract ArrangerConduit_IsCancelableTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ArrangerConduit_IsCancelableTest_$64804",
                              "typeString": "contract ArrangerConduit_IsCancelableTest"
                            }
                          ],
                          "id": 64697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1873:7:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64696,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1873:7:112",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1873:13:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 64700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1888:3:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 64693,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58054,
                        "src": "1862:5:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$55531",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 64695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1868:4:112",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55399,
                      "src": "1862:10:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 64701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1862:30:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64702,
                  "nodeType": "ExpressionStatement",
                  "src": "1862:30:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64708,
                            "name": "conduitHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64567,
                            "src": "1924:14:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                              "typeString": "contract ArrangerConduitHarness"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                              "typeString": "contract ArrangerConduitHarness"
                            }
                          ],
                          "id": 64707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1916:7:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64706,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1916:7:112",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1916:23:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 64710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1941:3:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 64703,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58054,
                        "src": "1902:5:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$55531",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 64705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1908:7:112",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55291,
                      "src": "1902:13:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 64711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1902:43:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64712,
                  "nodeType": "ExpressionStatement",
                  "src": "1902:43:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64716,
                        "name": "ilk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58044,
                        "src": "1979:3:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64719,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58054,
                            "src": "1992:5:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$55531",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$55531",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 64718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1984:7:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64717,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1984:7:112",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1984:14:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 64721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2000:3:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 64713,
                        "name": "conduitHarness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64567,
                        "src": "1956:14:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                          "typeString": "contract ArrangerConduitHarness"
                        }
                      },
                      "id": 64715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1971:7:112",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55983,
                      "src": "1956:22:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,uint256) external"
                      }
                    },
                    "id": 64722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1956:48:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64723,
                  "nodeType": "ExpressionStatement",
                  "src": "1956:48:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64727,
                        "name": "ilk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58044,
                        "src": "2043:3:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64730,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58054,
                            "src": "2056:5:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$55531",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$55531",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 64729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2048:7:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64728,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2048:7:112",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2048:14:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 64732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2064:3:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "696e666f",
                        "id": 64733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2069:6:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_238910e76b65ab3d595d5ac2cbe9ea0ecdd834bdfe340c701769965ea9ffd066",
                          "typeString": "literal_string \"info\""
                        },
                        "value": "info"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_238910e76b65ab3d595d5ac2cbe9ea0ecdd834bdfe340c701769965ea9ffd066",
                          "typeString": "literal_string \"info\""
                        }
                      ],
                      "expression": {
                        "id": 64724,
                        "name": "conduitHarness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64567,
                        "src": "2015:14:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                          "typeString": "contract ArrangerConduitHarness"
                        }
                      },
                      "id": 64726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2030:12:112",
                      "memberName": "requestFunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56130,
                      "src": "2015:27:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (bytes32,address,uint256,string memory) external returns (uint256)"
                      }
                    },
                    "id": 64734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2015:61:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 64735,
                  "nodeType": "ExpressionStatement",
                  "src": "2015:61:112"
                },
                {
                  "assignments": [
                    64740
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64740,
                      "mutability": "mutable",
                      "name": "fundRequest",
                      "nameLocation": "2123:11:112",
                      "nodeType": "VariableDeclaration",
                      "scope": 64802,
                      "src": "2087:47:112",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FundRequest_$56933_memory_ptr",
                        "typeString": "struct IArrangerConduit.FundRequest"
                      },
                      "typeName": {
                        "id": 64739,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 64738,
                          "name": "IArrangerConduit.FundRequest",
                          "nameLocations": [
                            "2087:16:112",
                            "2104:11:112"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 56933,
                          "src": "2087:28:112"
                        },
                        "referencedDeclaration": 56933,
                        "src": "2087:28:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FundRequest_$56933_storage_ptr",
                          "typeString": "struct IArrangerConduit.FundRequest"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64745,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 64743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2167:1:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 64741,
                        "name": "conduitHarness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64567,
                        "src": "2137:14:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                          "typeString": "contract ArrangerConduitHarness"
                        }
                      },
                      "id": 64742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2152:14:112",
                      "memberName": "getFundRequest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56384,
                      "src": "2137:29:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_FundRequest_$56933_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct IArrangerConduit.FundRequest memory)"
                      }
                    },
                    "id": 64744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2137:32:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FundRequest_$56933_memory_ptr",
                      "typeString": "struct IArrangerConduit.FundRequest memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2087:82:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 64749,
                              "name": "fundRequest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64740,
                              "src": "2197:11:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FundRequest_$56933_memory_ptr",
                                "typeString": "struct IArrangerConduit.FundRequest memory"
                              }
                            },
                            "id": 64750,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2209:6:112",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 56922,
                            "src": "2197:18:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_StatusEnum_$56939",
                              "typeString": "enum IArrangerConduit.StatusEnum"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_StatusEnum_$56939",
                              "typeString": "enum IArrangerConduit.StatusEnum"
                            }
                          ],
                          "id": 64748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2189:7:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 64747,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2189:7:112",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2189:27:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 64754,
                                "name": "IArrangerConduit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57105,
                                "src": "2226:16:112",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IArrangerConduit_$57105_$",
                                  "typeString": "type(contract IArrangerConduit)"
                                }
                              },
                              "id": 64755,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2243:10:112",
                              "memberName": "StatusEnum",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 56939,
                              "src": "2226:27:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_StatusEnum_$56939_$",
                                "typeString": "type(enum IArrangerConduit.StatusEnum)"
                              }
                            },
                            "id": 64756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2254:7:112",
                            "memberName": "PENDING",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 56936,
                            "src": "2226:35:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_StatusEnum_$56939",
                              "typeString": "enum IArrangerConduit.StatusEnum"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_StatusEnum_$56939",
                              "typeString": "enum IArrangerConduit.StatusEnum"
                            }
                          ],
                          "id": 64753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2218:7:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 64752,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2218:7:112",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2218:44:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 64746,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15157,
                        15182,
                        15195,
                        15211,
                        15253,
                        15295,
                        15337,
                        15374,
                        15411,
                        15448,
                        12992,
                        13017,
                        13047,
                        13072,
                        13131,
                        13156,
                        13186,
                        13211,
                        14684,
                        14719
                      ],
                      "referencedDeclaration": 13186,
                      "src": "2180:8:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 64758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2180:83:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64759,
                  "nodeType": "ExpressionStatement",
                  "src": "2180:83:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 64763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2311:1:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 64761,
                            "name": "conduitHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64567,
                            "src": "2283:14:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                              "typeString": "contract ArrangerConduitHarness"
                            }
                          },
                          "id": 64762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2298:12:112",
                          "memberName": "isCancelable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56415,
                          "src": "2283:27:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view external returns (bool)"
                          }
                        },
                        "id": 64764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2283:30:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 64765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2315:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 64760,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15157,
                        15182,
                        15195,
                        15211,
                        15253,
                        15295,
                        15337,
                        15374,
                        15411,
                        15448,
                        12992,
                        13017,
                        13047,
                        13072,
                        13131,
                        13156,
                        13186,
                        13211,
                        14684,
                        14719
                      ],
                      "referencedDeclaration": 15157,
                      "src": "2274:8:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 64766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2274:46:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64767,
                  "nodeType": "ExpressionStatement",
                  "src": "2274:46:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 64771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2369:1:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 64772,
                            "name": "IArrangerConduit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57105,
                            "src": "2372:16:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IArrangerConduit_$57105_$",
                              "typeString": "type(contract IArrangerConduit)"
                            }
                          },
                          "id": 64773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2389:10:112",
                          "memberName": "StatusEnum",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56939,
                          "src": "2372:27:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_StatusEnum_$56939_$",
                            "typeString": "type(enum IArrangerConduit.StatusEnum)"
                          }
                        },
                        "id": 64774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2400:9:112",
                        "memberName": "CANCELLED",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 56937,
                        "src": "2372:37:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StatusEnum_$56939",
                          "typeString": "enum IArrangerConduit.StatusEnum"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_enum$_StatusEnum_$56939",
                          "typeString": "enum IArrangerConduit.StatusEnum"
                        }
                      ],
                      "expression": {
                        "id": 64768,
                        "name": "conduitHarness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64567,
                        "src": "2331:14:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                          "typeString": "contract ArrangerConduitHarness"
                        }
                      },
                      "id": 64770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2346:22:112",
                      "memberName": "__setFundRequestStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57280,
                      "src": "2331:37:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_enum$_StatusEnum_$56939_$returns$__$",
                        "typeString": "function (uint256,enum IArrangerConduit.StatusEnum) external"
                      }
                    },
                    "id": 64775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2331:79:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64776,
                  "nodeType": "ExpressionStatement",
                  "src": "2331:79:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 64780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2458:1:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 64778,
                            "name": "conduitHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64567,
                            "src": "2430:14:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                              "typeString": "contract ArrangerConduitHarness"
                            }
                          },
                          "id": 64779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2445:12:112",
                          "memberName": "isCancelable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56415,
                          "src": "2430:27:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view external returns (bool)"
                          }
                        },
                        "id": 64781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2430:30:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 64782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2462:5:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 64777,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15157,
                        15182,
                        15195,
                        15211,
                        15253,
                        15295,
                        15337,
                        15374,
                        15411,
                        15448,
                        12992,
                        13017,
                        13047,
                        13072,
                        13131,
                        13156,
                        13186,
                        13211,
                        14684,
                        14719
                      ],
                      "referencedDeclaration": 15157,
                      "src": "2421:8:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 64783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2421:47:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64784,
                  "nodeType": "ExpressionStatement",
                  "src": "2421:47:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 64788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2517:1:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 64789,
                            "name": "IArrangerConduit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57105,
                            "src": "2520:16:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IArrangerConduit_$57105_$",
                              "typeString": "type(contract IArrangerConduit)"
                            }
                          },
                          "id": 64790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2537:10:112",
                          "memberName": "StatusEnum",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56939,
                          "src": "2520:27:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_StatusEnum_$56939_$",
                            "typeString": "type(enum IArrangerConduit.StatusEnum)"
                          }
                        },
                        "id": 64791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2548:9:112",
                        "memberName": "COMPLETED",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 56938,
                        "src": "2520:37:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StatusEnum_$56939",
                          "typeString": "enum IArrangerConduit.StatusEnum"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_enum$_StatusEnum_$56939",
                          "typeString": "enum IArrangerConduit.StatusEnum"
                        }
                      ],
                      "expression": {
                        "id": 64785,
                        "name": "conduitHarness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64567,
                        "src": "2479:14:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                          "typeString": "contract ArrangerConduitHarness"
                        }
                      },
                      "id": 64787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2494:22:112",
                      "memberName": "__setFundRequestStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57280,
                      "src": "2479:37:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_enum$_StatusEnum_$56939_$returns$__$",
                        "typeString": "function (uint256,enum IArrangerConduit.StatusEnum) external"
                      }
                    },
                    "id": 64792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2479:79:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64793,
                  "nodeType": "ExpressionStatement",
                  "src": "2479:79:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 64797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2606:1:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 64795,
                            "name": "conduitHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64567,
                            "src": "2578:14:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ArrangerConduitHarness_$57281",
                              "typeString": "contract ArrangerConduitHarness"
                            }
                          },
                          "id": 64796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2593:12:112",
                          "memberName": "isCancelable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56415,
                          "src": "2578:27:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view external returns (bool)"
                          }
                        },
                        "id": 64798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2578:30:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 64799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2610:5:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 64794,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15157,
                        15182,
                        15195,
                        15211,
                        15253,
                        15295,
                        15337,
                        15374,
                        15411,
                        15448,
                        12992,
                        13017,
                        13047,
                        13072,
                        13131,
                        13156,
                        13186,
                        13211,
                        14684,
                        14719
                      ],
                      "referencedDeclaration": 15157,
                      "src": "2569:8:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 64800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2569:47:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64801,
                  "nodeType": "ExpressionStatement",
                  "src": "2569:47:112"
                }
              ]
            },
            "functionSelector": "417c7f77",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_isCancelable",
            "nameLocation": "1823:17:112",
            "parameters": {
              "id": 64691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1840:2:112"
            },
            "returnParameters": {
              "id": 64692,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1852:0:112"
            },
            "scope": 64804,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 64563,
              "name": "ConduitAssetTestBase",
              "nameLocations": [
                "878:20:112"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 58353,
              "src": "878:20:112"
            },
            "id": 64564,
            "nodeType": "InheritanceSpecifier",
            "src": "878:20:112"
          }
        ],
        "canonicalName": "ArrangerConduit_IsCancelableTest",
        "contractDependencies": [
          125,
          498,
          55531,
          55663,
          57281
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          64804,
          58353,
          58036,
          24276,
          15029,
          15026,
          24225,
          19983,
          19693,
          18929,
          17149,
          16456,
          14963
        ],
        "name": "ArrangerConduit_IsCancelableTest",
        "nameLocation": "842:32:112",
        "scope": 64805,
        "usedErrors": [],
        "usedEvents": [
          12677,
          12681,
          12685,
          12689,
          12693,
          12697,
          12701,
          12705,
          12711,
          12717,
          12725,
          12733,
          12739,
          12745,
          12751,
          12757,
          15051,
          15056,
          15061,
          15068,
          15075,
          15082
        ]
      }
    ],
    "license": "AGPL-3.0-or-later"
  },
  "id": 112
}